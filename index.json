{
  "matrices": [
    {
      "title": "StatusList2021 Credentials (Issue \"statusPurpose: revocation\")",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:4f7e41a4-335e-49b2-8f76-e5872eb836dc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:9550a9f3-99fa-45fa-b620-75ebf4c9a739",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1381,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 307,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:d1a1efb7-9afc-48e4-9b5b-89434bb6272a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Revocation'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 359,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1019,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "6DsHxuczvHfv7XajYI2BP",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:df0d7440-fb48-4d1b-bbcb-66623ae60984"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:6a9b0df2-783d-43f3-8937-3002b5cb7266",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:43:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:2fabf1fc-e45c-400f-8fca-37888f3d02fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2698,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 185,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-11-30T14:03:05Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-11-30T14:03:05.174406164Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "LEM4-U7vpqJzG3kHuoGFGzJFTbWM5IndB1czKz82aTtE9-z8BaihQLXrMAEXS4uIcMjv3VsGXjZo7_tqH858DQ",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-11-30T14:03:05Z",
                    "validUntil": "2023-12-01T14:03:05Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:50:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:2d599dc7-903a-4641-8e09-d4f89b315c2d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 61,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Revocation'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1762,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 933,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "6DsHxuczvHfv7XajYI2BP",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:3da8788f-8bba-441b-b206-4f5900019316"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "HCw0JYF7l-d8VmfPJHOkG",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "_testId": "urn:uuid:bb8a25fd-fc59-4320-9be8-a5e93d7b6fd1",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:4f7e41a4-335e-49b2-8f76-e5872eb836dc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:6a9b0df2-783d-43f3-8937-3002b5cb7266",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:43:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            }
          ]
        },
        {
          "id": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:9550a9f3-99fa-45fa-b620-75ebf4c9a739",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1381,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 307,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:2fabf1fc-e45c-400f-8fca-37888f3d02fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2698,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 185,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-11-30T14:03:05Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-11-30T14:03:05.174406164Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "LEM4-U7vpqJzG3kHuoGFGzJFTbWM5IndB1czKz82aTtE9-z8BaihQLXrMAEXS4uIcMjv3VsGXjZo7_tqH858DQ",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-11-30T14:03:05Z",
                    "validUntil": "2023-12-01T14:03:05Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:50:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST be 16kb in size when \"encodedList\" is decoded",
          "cells": [
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "j3Qn-D0YuP9yUS4M3xcnZ",
              "ctx": null,
              "_testId": "urn:uuid:d1a1efb7-9afc-48e4-9b5b-89434bb6272a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "pvxLjHjC3PfenTn-fkIVC",
              "ctx": null,
              "_testId": "urn:uuid:2d599dc7-903a-4641-8e09-d4f89b315c2d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 61,
              "state": "failed",
              "err": {}
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Issue \"statusPurpose: suspension\")",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:901cf6bb-1aaf-43b2-b6a1-c08be1434efb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4473,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:84d9853d-dd3d-4ef5-826a-42323a3e4dc5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4473,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:7cf70003-dfa8-48d2-8715-7c757fe892b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4551,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Suspension'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2945,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1528,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "xGCPoOgwwJ89UYhMUDF2M",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:007c715e-416a-4b45-a57d-d84f4ed0039f"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:f258b2d5-b1e0-4479-8789-ece02061bc2d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:97:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:5f42b3ae-a51d-4eed-8e82-a211b8bf03c4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-11-30T14:03:07Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-11-30T14:03:07.058301876Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "riMO0PeenIjZbm7ZMMEV1sRuMwTWE5b0udAjSXIqmabaYrqzwlkeQDEOOkI5uxXH3G4s9nLLqya_8JiMLFhCAg",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-11-30T14:03:07Z",
                    "validUntil": "2023-12-01T14:03:07Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:104:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:b2f50240-8870-4643-a18f-7278c323ac0b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Suspension'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4623,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "xGCPoOgwwJ89UYhMUDF2M",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:35bf46aa-d93a-43af-871e-3179e0826d87"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "HCw0JYF7l-d8VmfPJHOkG",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "_testId": "urn:uuid:464d1522-105a-428b-bfeb-9283455d5ca9",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:901cf6bb-1aaf-43b2-b6a1-c08be1434efb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4473,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:f258b2d5-b1e0-4479-8789-ece02061bc2d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:97:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            }
          ]
        },
        {
          "id": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:84d9853d-dd3d-4ef5-826a-42323a3e4dc5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4473,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:5f42b3ae-a51d-4eed-8e82-a211b8bf03c4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-11-30T14:03:07Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-11-30T14:03:07.058301876Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "riMO0PeenIjZbm7ZMMEV1sRuMwTWE5b0udAjSXIqmabaYrqzwlkeQDEOOkI5uxXH3G4s9nLLqya_8JiMLFhCAg",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-11-30T14:03:07Z",
                    "validUntil": "2023-12-01T14:03:07Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:104:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST be 16kb in size when \"encodedList\" is decoded",
          "cells": [
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "mWLZ5OGilm__HZCCE7HLU",
              "ctx": null,
              "_testId": "urn:uuid:7cf70003-dfa8-48d2-8715-7c757fe892b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4551,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "f09ywPaFgOPdreAeO234K",
              "ctx": null,
              "_testId": "urn:uuid:b2f50240-8870-4643-a18f-7278c323ac0b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {}
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Verify)",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:ba59ed43-abc1-4644-8996-00212364f090",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6559,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 823,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:6425aac8-7c3a-4e7f-a1e5-a4dd00594d2e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 192,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:7e9f98b6-60bf-423d-88e9-603629e2be39",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7575,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:0bdadc26-288c-4d89-bbf3-b7834f4d5342",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:2d455831-3b1f-41d7-98ed-a85016d4d15f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7783,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1745,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:7c6b49d7-107e-404e-ba8b-d4794cd2b1fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9529,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1056,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected false to equal true",
                "showDiff": true,
                "actual": "false",
                "expected": "true",
                "operator": "strictEqual",
                "stack": "AssertionError: expected false to equal true\n    at updateStatus (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/helpers.js:107:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:138:31)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        // get a VC issued by DB\n        const {match} = filterImplementations({filter: ({value}) => {\n          // FIXME: Make issuer name configurable via env variable\n          return value.settings.name === 'Digital Bazaar';\n        }});\n        const res = match.get('Digital Bazaar');\n        const {issuers, setStatusLists, publishStatusLists} = res;\n        setRevocationStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        setSuspensionStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        publishRevocationStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        publishSuspensionStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        const issuer1 = issuers.find(issuer => issuer.tags.has('Revocation'));\n        const {data: data1} = await issueVc({issuer: issuer1});\n        validVcForRevocation = data1;\n        const issuer2 = issuers.find(issuer => issuer.tags.has('Suspension'));\n        const {data: data2} = await issueVc({issuer: issuer2});\n        validVcForSuspension = data2;\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4809,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1750,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "4KUtmaZyrfko-o9egUk1G",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
          "_testId": "urn:uuid:5c788566-90ed-4cae-93b5-f58a8056f39b"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:58ab3c34-22a5-4001-b570-e692fae32f6e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11052,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 707,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:63:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:12b230ff-54ee-4e00-8a79-b570f68f5d89",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11760,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:71:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:402b7166-3526-4322-b20d-bb666d142e9d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11818,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:4f31ad6c-b517-4e34-b864-30f71b6c6121",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 55,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:c01f2ca5-1d7b-4955-9491-c3525321fbff",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11931,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 126,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:106:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:11c2ec56-0f15-4148-b1c6-796ca24d6daa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12057,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 126,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:136:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n        // get a VC issued by DB\n        const {match} = filterImplementations({filter: ({value}) => {\n          // FIXME: Make issuer name configurable via env variable\n          return value.settings.name === 'Digital Bazaar';\n        }});\n        const res = match.get('Digital Bazaar');\n        const {issuers, setStatusLists, publishStatusLists} = res;\n        setRevocationStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        setSuspensionStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        publishRevocationStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        publishSuspensionStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        const issuer1 = issuers.find(issuer => issuer.tags.has('Revocation'));\n        const {data: data1} = await issueVc({issuer: issuer1});\n        validVcForRevocation = data1;\n        const issuer2 = issuers.find(issuer => issuer.tags.has('Suspension'));\n        const {data: data2} = await issueVc({issuer: issuer2});\n        validVcForSuspension = data2;\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 467,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "4KUtmaZyrfko-o9egUk1G",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
          "_testId": "urn:uuid:d4d90685-7c80-43dd-9c87-7492f2ac360f"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "HCw0JYF7l-d8VmfPJHOkG",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:a73e9bd3-821f-4e24-815c-120c8292d356",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:ba59ed43-abc1-4644-8996-00212364f090",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6559,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 823,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:58ab3c34-22a5-4001-b570-e692fae32f6e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11052,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 707,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:63:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:6425aac8-7c3a-4e7f-a1e5-a4dd00594d2e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 192,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:12b230ff-54ee-4e00-8a79-b570f68f5d89",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11760,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:71:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:7e9f98b6-60bf-423d-88e9-603629e2be39",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7575,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:402b7166-3526-4322-b20d-bb666d142e9d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11818,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 57,
              "state": "failed",
              "err": {}
            }
          ]
        },
        {
          "id": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:0bdadc26-288c-4d89-bbf3-b7834f4d5342",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:4f31ad6c-b517-4e34-b864-30f71b6c6121",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 55,
              "state": "failed",
              "err": {}
            }
          ]
        },
        {
          "id": "MUST fail to verify a revoked status list credential",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:2d455831-3b1f-41d7-98ed-a85016d4d15f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7783,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1745,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:c01f2ca5-1d7b-4955-9491-c3525321fbff",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11931,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 126,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:106:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST fail to verify a suspended status list credential",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "PvAdvhIPwxSJHcYOdUvVP",
              "ctx": null,
              "_testId": "urn:uuid:7c6b49d7-107e-404e-ba8b-d4794cd2b1fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9529,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1056,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected false to equal true",
                "showDiff": true,
                "actual": "false",
                "expected": "true",
                "operator": "strictEqual",
                "stack": "AssertionError: expected false to equal true\n    at updateStatus (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/helpers.js:107:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:138:31)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "AEBIcrKeokQLbmk54sYmO",
              "ctx": null,
              "_testId": "urn:uuid:11c2ec56-0f15-4148-b1c6-796ca24d6daa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12057,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 126,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:136:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Interop \"statusPurpose: revocation\")",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: revocation\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Revocation'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "l6gd-9GWRGEmE-2t14R-l",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 12185,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: revocation\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Revocation'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "l6gd-9GWRGEmE-2t14R-l",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 12186,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "HCw0JYF7l-d8VmfPJHOkG",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:c8917ea9-0f8d-488e-904d-5c9dce83fea8",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "l6gd-9GWRGEmE-2t14R-l",
              "ctx": null,
              "_testId": "urn:uuid:926412ad-ca97-4c5a-8e5e-340ae639e949",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12190,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 519,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "mesur.io should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "l6gd-9GWRGEmE-2t14R-l",
              "ctx": null,
              "_testId": "urn:uuid:68c37463-1ddf-4c51-a774-c7894b609bca",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:47:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "mesur.io",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "l6gd-9GWRGEmE-2t14R-l",
              "ctx": null,
              "_testId": "urn:uuid:053c14d8-cddc-46a3-b383-bf3c6b55c61e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:47:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "mesur.io should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "l6gd-9GWRGEmE-2t14R-l",
              "ctx": null,
              "_testId": "urn:uuid:6c46b0fa-6683-4d7d-a4e8-ae62f3de4568",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12886,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Interop \"statusPurpose: suspension\")",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: suspension\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Suspension'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "D3neR1MV_gElxxhmuVhCq",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 12957,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: suspension\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Suspension'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "D3neR1MV_gElxxhmuVhCq",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 12958,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "HCw0JYF7l-d8VmfPJHOkG",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:1829c9bb-e48f-45d9-8abe-df82f6bac009",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "D3neR1MV_gElxxhmuVhCq",
              "ctx": null,
              "_testId": "urn:uuid:f2056e9b-e021-4ab7-a185-304c91cb924d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 529,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "mesur.io should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "D3neR1MV_gElxxhmuVhCq",
              "ctx": null,
              "_testId": "urn:uuid:baf7fa7f-1b7c-4e81-932d-c3c8d6f23a05",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13492,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:78:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "mesur.io",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "D3neR1MV_gElxxhmuVhCq",
              "ctx": null,
              "_testId": "urn:uuid:d4c0f0f5-9514-42fa-bd9d-4c1f83c243a5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13549,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:78:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "mesur.io should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "D3neR1MV_gElxxhmuVhCq",
              "ctx": null,
              "_testId": "urn:uuid:84ec9a5d-e21c-4786-a1a1-9050b922082e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13642,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "status-list-2021-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c-ccg/status-list-2021-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/status-list-2021-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "Status List 2021 Interoperability Report 1.0",
  "stats": [
    "Tests passed 15/32 47%",
    "Tests failed 17/32 53%",
    "Failures 17",
    "Tests skipped 0",
    "Total tests 32"
  ]
}