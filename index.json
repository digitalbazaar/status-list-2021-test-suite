{
  "matrices": [
    {
      "title": "Data Model: BitstringStatusList Entry",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:97a359cb-1319-4b71-ab09-8134ce12421c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:22:16)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:42:9)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:739d089d-da3d-4be0-b37b-a89322013fe4",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:f894afb1-0bd6-436c-93de-1173cd006079",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:6b9a1d34-58a9-49bc-94dd-ca35dd854f52",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:55a1a0ee-90ea-4555-b80a-aa6b7f1a9e78",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:e958e09d-cdfc-4b3e-8ed4-ef1da9b9965c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5686,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:25f44f86-67a9-4c44-b3aa-51b5048dd5af",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:164ea118-467f-47e5-b94a-146408fb6bc6",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, statusSize MUST be an integer greater than zero."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:7ba107bf-1560-450a-bbff-3000b1e822a7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:e023d5ba-8a5b-4d5c-b2e5-ac0735cdd24e",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The number of status messages MUST equal the number of possible values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:470e9ceb-4fdc-4759-97b2-0d89e60203da",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:8adcb18d-b2cc-4db2-81b3-b592722a24e8",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:f7c8c5a9-b0df-4c59-8fd1-a0b0e34761c3",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\"."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:3ef81ff0-d0b6-4c34-a231-c4e94d620224",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 344,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5332,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:5884767d-3de4-430e-ba4e-e7cc3d48b67d"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:c5a10df4-e288-4b13-9703-23e06b3ef4ce",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6600,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:44c86796-ed53-413b-ad20-d3ef2497c208",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6600,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:1a4d7917-3668-49ea-954a-b2160382db04",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6601,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:f29f1b52-1cce-4157-bbb8-f7841979b208",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6601,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:13510618-5dc4-4fd6-a66a-d928391e2062",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:a0f41011-de88-41fe-89de-f5c2159d7e18",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:9d4a4a96-a29f-4702-918f-7b971c63803a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:0c1d749c-ad3b-4972-bb83-c7aadf3a755a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:17d02cd2-08ce-4106-8d7e-32c521d404b3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:5d4cc927-c4e4-4365-907a-80a01a0a62df",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:817bbd70-fb7f-4802-a41f-e2492fa48a2b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:2a94f4be-9fde-48b4-9a4e-243c59c110ef",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:c87294a1-7820-4021-8099-f8ead31c917a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:bde136ec-bb7c-4317-b6b5-9401ab1a3473",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 907,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:29260aa0-0f26-4a15-80cf-3f1920190054"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:c2a8ec20-3ba0-4482-a4d4-da74d69a6852",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:40208d22-c7a5-43f7-ad98-696cf04f1a3f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:824b26a7-9d27-4be3-8c1a-e52a1b536961",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:b958f560-1488-47bf-afad-f01b9a77b263",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:dfe2fe1c-44ac-4341-b703-83e37af6afde",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:e7f51ac6-3e4a-4003-b051-e22824a2d0a6",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 177,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:0ac135fa-a704-4df3-8592-977bcc33180c",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:33b40152-34a1-41bb-a3f0-773b6ac59f89",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:17729d7e-9bc0-4a2b-a6d4-9881fd3f0bf9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:c6292a1c-b930-44ef-9696-14c6d209d4b3",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:7b2f0651-617b-4cbf-88e6-c458d5cd6599",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:d38b47f2-2870-424e-8d22-38aedffa75ec",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:217d367c-1d49-410b-873b-04cf14e34140",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:6d8646a7-1e77-4694-93fc-bf400e9d0604",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6888,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 868,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:67b1af28-c277-48de-be7e-4179d21d1e88"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:9df31e04-d800-43a3-8529-d5797a0b6383",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10126,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:e01b4021-7d4f-49c5-8816-f66b9e50f560",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:b413821a-10cc-4cdc-b47e-70c542ceac11",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:4a7faf5d-895f-48f8-9193-b3def4c8432f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:0a066e1f-75ce-4231-86ab-e0774dbcca5d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:0014e2d3-9be7-4972-8f1b-3cd4132a2278",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10128,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 274,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:b536e86e-59fb-4f83-989e-d80251af0c7d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10402,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 165,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:fb18d65d-afd8-48d3-8aff-899b4a4b91e2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:792a9b8e-a8bc-46fc-8019-80209b1da668",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:16e01ca1-aea4-487a-955d-f009a196db67",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:e5d454a9-de69-40f8-b598-d384fa0c3827",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:3c6bf48e-89ab-4b8f-aaef-36cd71e7b25a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:7dcba481-2297-47c1-9c6e-ea553968f573",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:3367d05d-4b08-4d12-befe-3f00cfe9d650",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2088,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:3811de15-142d-4ad0-88b1-8ff05cf06de9"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:31c9004b-fc0d-441d-8144-7c7c01239030",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:d7651147-df32-43ee-9ab2-0e6bcb53ddf9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:58b41b79-ca34-43cc-86fe-d2288211e660",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:c897b2a9-a831-4536-ac54-f177f8085c31",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:f6a20a03-a6a2-4d5a-b402-eb5ae8204a42",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:48ebe0cd-2f3c-49e2-873b-db7809e90062",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 360,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:4c0c352b-7d78-4758-9a13-49e547b0175d",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:a1878d6b-7400-4988-b50e-0f805d6521eb",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11438,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:781bf0ec-eaee-4618-a428-c502e99386e9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11438,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:00d3888e-c0db-460d-a71a-09543b7ca001",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:d3bfe70f-6f7d-40e3-8f37-2e6641f3f172",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:61359aad-73b4-45a9-9cec-af17da9ce7c0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:507ec491-1dbf-4a1d-b706-ace31a33e27f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:04926ee5-af9f-42b1-a482-de78fc427f7c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 407,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:9057596c-2cab-41a8-bf07-90be43ec16bf"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:941e4dfd-52ca-4e61-8d99-7e4037aa0e1a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:1f4aa955-9e4c-4fad-bf59-451a047dc12e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:48a3cc06-0a81-45f1-a1eb-3c375a2917ad",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:977bf036-f5df-4c00-b22a-e39053708fff",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:0631386a-8808-4405-a454-1e3cfbd5b393",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:3173c958-e38f-4993-af55-de0d1b99375a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:5528fef0-cbe7-4a38-b64f-e787494df06f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:23b60dd4-de25-4230-a4ba-28467d987a0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:da55cf7d-f1db-4500-9b92-8c352902e17e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:1ae79c03-252f-4eaf-97bb-bed8c059a5a6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a9d94f70-e524-4776-b0a2-3601472939b9",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a1bde087-331a-482e-925b-1e0a108e0080",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:906e6622-e90e-4e63-9489-567f3bd5b014",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a3a05521-cc9a-4ee6-a47f-9bba502252af",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 124,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:c1c280b5-ba67-4bc4-9185-ded7ba25cf5f"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:9e1dc741-8683-4c7f-8836-a3be97e7b5c0",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:e21ac175-9421-4bca-b2cd-58651f1d5e3d",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:c0d80cb9-54de-4e56-bf91-e475d198b9bc",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:aa917321-cd2b-48a1-a4ca-6b07e1e9251d",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:6b09feb4-327c-47fd-9c78-c9a8b75e25c6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:09807323-8442-4789-9088-d5c292ccf50a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2562,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:d0e83a00-a889-4b95-8db9-79e8145ebcd2",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1569,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:6cd9f615-9713-4d28-a431-8bb59e943817",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:abd89bb1-3c6f-47c2-b5b3-877a75f87720",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:16d5b7a7-f3fe-4a53-b3cf-48c48bdce0a9",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:2548f444-b2fc-4edb-bed1-bf31aba5e8ae",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:0727187e-a567-4da1-aa9c-cd0d748e38e2",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:240d728e-2928-442c-837d-9b4fe3446eaf",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:90a4c150-3a7a-4a17-a4a7-19be3b2fdc44",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1025,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uO7I8ff9UFH9ux1ONZmVC",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:dbbf3856-bfd6-479e-9f5e-43f9ac27b031"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:ef0d28fa-d289-4625-9fcb-dee4b8b6fa80",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
          "cells": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:97a359cb-1319-4b71-ab09-8134ce12421c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:22:16)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:42:9)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:c5a10df4-e288-4b13-9703-23e06b3ef4ce",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6600,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:c2a8ec20-3ba0-4482-a4d4-da74d69a6852",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:9df31e04-d800-43a3-8529-d5797a0b6383",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10126,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:31c9004b-fc0d-441d-8144-7c7c01239030",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:941e4dfd-52ca-4e61-8d99-7e4037aa0e1a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:9e1dc741-8683-4c7f-8836-a3be97e7b5c0",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:739d089d-da3d-4be0-b37b-a89322013fe4",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:44c86796-ed53-413b-ad20-d3ef2497c208",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6600,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:40208d22-c7a5-43f7-ad98-696cf04f1a3f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:e01b4021-7d4f-49c5-8816-f66b9e50f560",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:d7651147-df32-43ee-9ab2-0e6bcb53ddf9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:1f4aa955-9e4c-4fad-bf59-451a047dc12e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:e21ac175-9421-4bca-b2cd-58651f1d5e3d",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            }
          ]
        },
        {
          "id": "The type property MUST be BitstringStatusListEntry. ",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
          "cells": [
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:f894afb1-0bd6-436c-93de-1173cd006079",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:1a4d7917-3668-49ea-954a-b2160382db04",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6601,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:824b26a7-9d27-4be3-8c1a-e52a1b536961",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:b413821a-10cc-4cdc-b47e-70c542ceac11",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:58b41b79-ca34-43cc-86fe-d2288211e660",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:48a3cc06-0a81-45f1-a1eb-3c375a2917ad",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:c0d80cb9-54de-4e56-bf91-e475d198b9bc",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The purpose of the status entry MUST be a string.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
          "cells": [
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:6b9a1d34-58a9-49bc-94dd-ca35dd854f52",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:f29f1b52-1cce-4157-bbb8-f7841979b208",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6601,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:b958f560-1488-47bf-afad-f01b9a77b263",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:4a7faf5d-895f-48f8-9193-b3def4c8432f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:c897b2a9-a831-4536-ac54-f177f8085c31",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:977bf036-f5df-4c00-b22a-e39053708fff",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:aa917321-cd2b-48a1-a4ca-6b07e1e9251d",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12710,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
          "cells": [
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:55a1a0ee-90ea-4555-b80a-aa6b7f1a9e78",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:13510618-5dc4-4fd6-a66a-d928391e2062",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:dfe2fe1c-44ac-4341-b703-83e37af6afde",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:0a066e1f-75ce-4231-86ab-e0774dbcca5d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:f6a20a03-a6a2-4d5a-b402-eb5ae8204a42",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:0631386a-8808-4405-a454-1e3cfbd5b393",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:6b09feb4-327c-47fd-9c78-c9a8b75e25c6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListCredential property MUST be a URL to a verifiable credential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:e958e09d-cdfc-4b3e-8ed4-ef1da9b9965c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5686,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:a0f41011-de88-41fe-89de-f5c2159d7e18",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:e7f51ac6-3e4a-4003-b051-e22824a2d0a6",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 177,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:0014e2d3-9be7-4972-8f1b-3cd4132a2278",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10128,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 274,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:48ebe0cd-2f3c-49e2-873b-db7809e90062",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10977,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 360,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:3173c958-e38f-4993-af55-de0d1b99375a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:09807323-8442-4789-9088-d5c292ccf50a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2562,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:25f44f86-67a9-4c44-b3aa-51b5048dd5af",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:9d4a4a96-a29f-4702-918f-7b971c63803a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:0ac135fa-a704-4df3-8592-977bcc33180c",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:b536e86e-59fb-4f83-989e-d80251af0c7d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10402,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 165,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:4c0c352b-7d78-4758-9a13-49e547b0175d",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:5528fef0-cbe7-4a38-b64f-e787494df06f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:d0e83a00-a889-4b95-8db9-79e8145ebcd2",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1569,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:164ea118-467f-47e5-b94a-146408fb6bc6",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, statusSize MUST be an integer greater than zero."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:0c1d749c-ad3b-4972-bb83-c7aadf3a755a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:33b40152-34a1-41bb-a3f0-773b6ac59f89",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:fb18d65d-afd8-48d3-8aff-899b4a4b91e2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:a1878d6b-7400-4988-b50e-0f805d6521eb",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11438,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:23b60dd4-de25-4230-a4ba-28467d987a0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:6cd9f615-9713-4d28-a431-8bb59e943817",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:7ba107bf-1560-450a-bbff-3000b1e822a7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:17d02cd2-08ce-4106-8d7e-32c521d404b3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:17729d7e-9bc0-4a2b-a6d4-9881fd3f0bf9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:792a9b8e-a8bc-46fc-8019-80209b1da668",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:781bf0ec-eaee-4618-a428-c502e99386e9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11438,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:da55cf7d-f1db-4500-9b92-8c352902e17e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:abd89bb1-3c6f-47c2-b5b3-877a75f87720",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:e023d5ba-8a5b-4d5c-b2e5-ac0735cdd24e",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The number of status messages MUST equal the number of possible values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:5d4cc927-c4e4-4365-907a-80a01a0a62df",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:c6292a1c-b930-44ef-9696-14c6d209d4b3",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:16e01ca1-aea4-487a-955d-f009a196db67",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:00d3888e-c0db-460d-a71a-09543b7ca001",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:1ae79c03-252f-4eaf-97bb-bed8c059a5a6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:16d5b7a7-f3fe-4a53-b3cf-48c48bdce0a9",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:470e9ceb-4fdc-4759-97b2-0d89e60203da",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:817bbd70-fb7f-4802-a41f-e2492fa48a2b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:7b2f0651-617b-4cbf-88e6-c458d5cd6599",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:e5d454a9-de69-40f8-b598-d384fa0c3827",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:d3bfe70f-6f7d-40e3-8f37-2e6641f3f172",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a9d94f70-e524-4776-b0a2-3601472939b9",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:2548f444-b2fc-4edb-bed1-bf31aba5e8ae",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:8adcb18d-b2cc-4db2-81b3-b592722a24e8",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:2a94f4be-9fde-48b4-9a4e-243c59c110ef",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:d38b47f2-2870-424e-8d22-38aedffa75ec",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:3c6bf48e-89ab-4b8f-aaef-36cd71e7b25a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:61359aad-73b4-45a9-9cec-af17da9ce7c0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a1bde087-331a-482e-925b-1e0a108e0080",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:0727187e-a567-4da1-aa9c-cd0d748e38e2",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:f7c8c5a9-b0df-4c59-8fd1-a0b0e34761c3",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\"."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:c87294a1-7820-4021-8099-f8ead31c917a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:217d367c-1d49-410b-873b-04cf14e34140",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:7dcba481-2297-47c1-9c6e-ea553968f573",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:507ec491-1dbf-4a1d-b706-ace31a33e27f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:906e6622-e90e-4e63-9489-567f3bd5b014",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:240d728e-2928-442c-837d-9b4fe3446eaf",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oL0aCIvh-X-P8Ty0rusJL",
              "ctx": null,
              "_testId": "urn:uuid:3ef81ff0-d0b6-4c34-a231-c4e94d620224",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "d-ndKHBTsqooSaS43qGpR",
              "ctx": null,
              "_testId": "urn:uuid:bde136ec-bb7c-4317-b6b5-9401ab1a3473",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "uD6ezyf6Jp2jHga6BhBYp",
              "ctx": null,
              "_testId": "urn:uuid:6d8646a7-1e77-4694-93fc-bf400e9d0604",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "G0ZYIojs4glV3FJbjY7R_",
              "ctx": null,
              "_testId": "urn:uuid:3367d05d-4b08-4d12-befe-3f00cfe9d650",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Kmjowag8VyQn_TMEJsaFF",
              "ctx": null,
              "_testId": "urn:uuid:04926ee5-af9f-42b1-a482-de78fc427f7c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11439,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "eMJq1pWKGqIIcsTtSW3Yz",
              "ctx": null,
              "_testId": "urn:uuid:a3a05521-cc9a-4ee6-a47f-9bba502252af",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kN1ondchXZvAjDHxlcrC_",
              "ctx": null,
              "_testId": "urn:uuid:90a4c150-3a7a-4a17-a4a7-19be3b2fdc44",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Data Model: BitstringStatusList Credential",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "I07WkK8UZ1TKKfOvf8Xrr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 949,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:aff40ca9-ad74-4829-ae60-fbbf7e79ddcb"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:a3c02855-9fac-4884-a4ad-b0fa04a76615",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:96767d2f-1f39-4654-b425-d99f24c91197",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:001b7d3a-17fc-452a-97d5-d9acef4a6d59",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:3b267878-25f6-4d03-94d0-6b5196277f5f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:f1e7bbd1-ea3c-4fc7-9378-b534b73a1241",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:f67a5420-b80d-4616-8a1c-e1265c0f9869",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18405,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:87aeb753-d0cd-40dd-9c0c-feeba508764c",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18406,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17793,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 605,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:9a538a0a-8173-49e1-aa08-fdccc38a5625"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:37e80bf3-9db0-42bb-9f13-03880dc0ad6b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:cb62e697-ed95-4773-ad94-22a9fa46b0d8",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:22dc46a6-a8ac-44a5-9697-6fb04fa58536",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:5f3f9eb4-5e7e-4235-bae4-d7efcb3824f5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:93473c82-1749-4048-94fd-ec31c21730c0",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:af0b0aa5-bfd1-4915-8cb2-64b5dfc440ff",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18872,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:5ace2ad5-4974-4722-bb45-ed3d33347675",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18872,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18407,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 463,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:92bcc897-711a-4a5b-abc3-80a1e3564297"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:f46a7668-5688-4890-ac10-4769f7690a25",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:8fcc4de6-048e-466a-8d87-7c56ddd07320",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:54f883ef-cabf-458a-87a4-86ce8173127c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:3763fe6f-9dc0-4a17-99e9-2ccb000816fc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:1fe7ac73-50b5-4cb8-a67e-c09b414515fd",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:552bbd2e-5e4e-4448-9cc6-ba384327b175",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:6ffa5e56-ccd5-4121-98a1-8226f7a3b073",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2201,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:e82cd09d-1682-4f5f-a068-106312d4ff58"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:b0817c86-ac3f-4d07-9877-6647daeecbd7",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21764,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:7eb4ded0-ad12-4405-bf6f-69d6b05cbe8c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:71eb96cb-8e39-4f11-a2ef-464f91e90a79",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:f817893d-51c9-4b0c-88c0-233a1ea961c8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:813e3718-dbaf-4d8d-ac28-b78deb71aa2e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:b28c7931-7b4e-479c-95a5-e3a17b5db2e9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:6166aec1-8cf6-476e-a49e-0710be1797a9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 685,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:acca0b7c-a458-45b9-8a69-f71b36934d08"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:ba635a1a-ab14-4dc2-ae20-c5d409013769",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:967ca8b2-8370-4d4e-b4bd-635052b3b8aa",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:3a4e1416-98b6-47ca-acdb-6593cecf0a54",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:11e47196-fee3-4da6-88f7-b8123e21a987",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:5d8e101d-e217-47dc-b71b-f15d247f9b5e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21984,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:81994ebe-c1b4-49ff-b3cd-118df0900402",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21984,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:3a9b3502-9d3a-40d8-8c35-e3891b35a7dc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21985,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21767,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 215,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:e31b58ed-f894-4417-b349-dd49ecf07b5a"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:f90e9c6b-54fe-4807-a69a-12d5473d4d8f",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:f55c1d34-ddc1-43b2-8ea7-c602bc99bfef",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:ef36606d-c184-4543-9667-30c936aa1031",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:7a8f8772-fe31-4143-af70-3195d072e628",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:0a69560b-cba9-49a5-b963-b8e29acde214",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26320,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:56955477-c73c-453f-9eae-2c5a72311b49",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26320,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:61cc631e-eeb5-407b-bcbf-de39a43ad278",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21985,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4332,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EcQLpxKHO_8Ji2rYQiKZ6",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:a8d70845-5f21-41ca-ab99-47939af74cd6"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:fbcd9345-99ee-4a84-8638-9ab419e09eb7",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
          "cells": [
            {
              "cell": {
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:a3c02855-9fac-4884-a4ad-b0fa04a76615",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:37e80bf3-9db0-42bb-9f13-03880dc0ad6b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:f46a7668-5688-4890-ac10-4769f7690a25",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:b0817c86-ac3f-4d07-9877-6647daeecbd7",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21764,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:ba635a1a-ab14-4dc2-ae20-c5d409013769",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:f90e9c6b-54fe-4807-a69a-12d5473d4d8f",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "cell": {
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:96767d2f-1f39-4654-b425-d99f24c91197",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:cb62e697-ed95-4773-ad94-22a9fa46b0d8",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:8fcc4de6-048e-466a-8d87-7c56ddd07320",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:7eb4ded0-ad12-4405-bf6f-69d6b05cbe8c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:967ca8b2-8370-4d4e-b4bd-635052b3b8aa",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:f55c1d34-ddc1-43b2-8ea7-c602bc99bfef",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
          "cells": [
            {
              "cell": {
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:001b7d3a-17fc-452a-97d5-d9acef4a6d59",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:22dc46a6-a8ac-44a5-9697-6fb04fa58536",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:54f883ef-cabf-458a-87a4-86ce8173127c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:71eb96cb-8e39-4f11-a2ef-464f91e90a79",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:3a4e1416-98b6-47ca-acdb-6593cecf0a54",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:ef36606d-c184-4543-9667-30c936aa1031",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
          "cells": [
            {
              "cell": {
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:3b267878-25f6-4d03-94d0-6b5196277f5f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:5f3f9eb4-5e7e-4235-bae4-d7efcb3824f5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:3763fe6f-9dc0-4a17-99e9-2ccb000816fc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:f817893d-51c9-4b0c-88c0-233a1ea961c8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:11e47196-fee3-4da6-88f7-b8123e21a987",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:7a8f8772-fe31-4143-af70-3195d072e628",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
          "cells": [
            {
              "cell": {
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:f1e7bbd1-ea3c-4fc7-9378-b534b73a1241",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:93473c82-1749-4048-94fd-ec31c21730c0",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:1fe7ac73-50b5-4cb8-a67e-c09b414515fd",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:813e3718-dbaf-4d8d-ac28-b78deb71aa2e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:5d8e101d-e217-47dc-b71b-f15d247f9b5e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21984,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:0a69560b-cba9-49a5-b963-b8e29acde214",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26320,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The uncompressed bitstring MUST be at least 16KB in size.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
          "cells": [
            {
              "cell": {
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:f67a5420-b80d-4616-8a1c-e1265c0f9869",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18405,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:af0b0aa5-bfd1-4915-8cb2-64b5dfc440ff",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18872,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:552bbd2e-5e4e-4448-9cc6-ba384327b175",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:b28c7931-7b4e-479c-95a5-e3a17b5db2e9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:81994ebe-c1b4-49ff-b3cd-118df0900402",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21984,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:56955477-c73c-453f-9eae-2c5a72311b49",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26320,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
          "cells": [
            {
              "cell": {
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-Bog8r7k-K5iukOypd_Im",
              "ctx": null,
              "_testId": "urn:uuid:87aeb753-d0cd-40dd-9c0c-feeba508764c",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18406,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "1vkRDyf13CYPImhIs38yh",
              "ctx": null,
              "_testId": "urn:uuid:5ace2ad5-4974-4722-bb45-ed3d33347675",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18872,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "SYlc5aXqCFC70q-kJjD9T",
              "ctx": null,
              "_testId": "urn:uuid:6ffa5e56-ccd5-4121-98a1-8226f7a3b073",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_X9v4jOuKzw5wfIzAGIhm",
              "ctx": null,
              "_testId": "urn:uuid:6166aec1-8cf6-476e-a49e-0710be1797a9",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-UOVudzoet_vLzBuwiB4V",
              "ctx": null,
              "_testId": "urn:uuid:3a9b3502-9d3a-40d8-8c35-e3891b35a7dc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21985,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "4QKsoiKD4RTXfJeznxsdW",
              "ctx": null,
              "_testId": "urn:uuid:61cc631e-eeb5-407b-bcbf-de39a43ad278",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZiTu6SO5hp3qsLgtdyNB5",
              "ctx": null,
              "_testId": "urn:uuid:30332429-f817-46ac-a9d5-b09ab7f53bed",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZiTu6SO5hp3qsLgtdyNB5",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZiTu6SO5hp3qsLgtdyNB5",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:01dc8eac-60f2-4043-b323-6080bf8945c8"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "D6tkKgDpEvPjBWCg2m-yr",
              "ctx": null,
              "_testId": "urn:uuid:9f95dc7a-d1e5-4e5a-82ce-901414b3c3e1",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "D6tkKgDpEvPjBWCg2m-yr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "D6tkKgDpEvPjBWCg2m-yr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26395,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:01efeeef-b930-4721-a3b0-b12cd3fd4fd0"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MQdPKjlrL3mtcreA5UPeu",
              "ctx": null,
              "_testId": "urn:uuid:738f6838-2cd6-4fc1-aa2c-22fdab6d62c2",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 244,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MQdPKjlrL3mtcreA5UPeu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MQdPKjlrL3mtcreA5UPeu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:41ccdd02-b835-49a0-8182-ec5f1af6623a"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xggFFOhMqn791R9x3bIJN",
              "ctx": null,
              "_testId": "urn:uuid:9218e71c-ba35-4ade-bf27-a0dd1c175bec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2069,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xggFFOhMqn791R9x3bIJN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xggFFOhMqn791R9x3bIJN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:429ff94e-bc47-4da1-bad9-96e867fe3b17"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZFZ-6-AvKL2eNGuuZHp4s",
              "ctx": null,
              "_testId": "urn:uuid:4c125fdb-eff4-4f15-8678-7e373447cca4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 393,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZFZ-6-AvKL2eNGuuZHp4s",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZFZ-6-AvKL2eNGuuZHp4s",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f1dfcd23-d6cf-4ca1-962c-92ce6d9be1c5"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Vr7ZblWr-vSicB3KptEaG",
              "ctx": null,
              "_testId": "urn:uuid:b4a50851-be4a-4209-9501-9fbec58a91bc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Vr7ZblWr-vSicB3KptEaG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Vr7ZblWr-vSicB3KptEaG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:9556f3d6-529d-48df-9384-2ef01dae45d4"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Z3Aq6KAwVgOUgK67xFZdb",
              "ctx": null,
              "_testId": "urn:uuid:902b5b97-1b8c-4d37-bcba-b1ef38837ac9",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29361,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 888,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Z3Aq6KAwVgOUgK67xFZdb",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Z3Aq6KAwVgOUgK67xFZdb",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29361,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "sSb6fx_U_UEaznr9uUIQw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b4e7de0e-4353-4de0-9a17-f1ee8272c797"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:d5252bf2-502f-4ebd-9368-d531e666c241",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZiTu6SO5hp3qsLgtdyNB5",
              "ctx": null,
              "_testId": "urn:uuid:30332429-f817-46ac-a9d5-b09ab7f53bed",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "D6tkKgDpEvPjBWCg2m-yr",
              "ctx": null,
              "_testId": "urn:uuid:9f95dc7a-d1e5-4e5a-82ce-901414b3c3e1",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MQdPKjlrL3mtcreA5UPeu",
              "ctx": null,
              "_testId": "urn:uuid:738f6838-2cd6-4fc1-aa2c-22fdab6d62c2",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 244,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xggFFOhMqn791R9x3bIJN",
              "ctx": null,
              "_testId": "urn:uuid:9218e71c-ba35-4ade-bf27-a0dd1c175bec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2069,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZFZ-6-AvKL2eNGuuZHp4s",
              "ctx": null,
              "_testId": "urn:uuid:4c125fdb-eff4-4f15-8678-7e373447cca4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 393,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Vr7ZblWr-vSicB3KptEaG",
              "ctx": null,
              "_testId": "urn:uuid:b4a50851-be4a-4209-9501-9fbec58a91bc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Z3Aq6KAwVgOUgK67xFZdb",
              "ctx": null,
              "_testId": "urn:uuid:902b5b97-1b8c-4d37-bcba-b1ef38837ac9",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29361,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 888,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Generate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "L94_gFsk7gP3878Z9M4XV",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "L94_gFsk7gP3878Z9M4XV",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "L94_gFsk7gP3878Z9M4XV",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30250,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1241,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:595821cb-6247-47e6-b3f1-c0aff5087ef3"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uzIr6IkiU4sk8_gh1B46o",
              "ctx": null,
              "_testId": "urn:uuid:bef06893-c7ee-4290-a9dc-80595734d52a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uzIr6IkiU4sk8_gh1B46o",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uzIr6IkiU4sk8_gh1B46o",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31491,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1727,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:33f3a4da-cc0d-4714-8f61-0a0c5d860073"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lu0pQynzCyAFebZwI1Mxe",
              "ctx": null,
              "_testId": "urn:uuid:df44638d-f6cc-41e6-a38a-4ecdd756afde",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lu0pQynzCyAFebZwI1Mxe",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lu0pQynzCyAFebZwI1Mxe",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 461,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:fe6a75e3-7c8b-4214-a091-f677b2692651"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jXpHg59LFdRQMVZkshntM",
              "ctx": null,
              "_testId": "urn:uuid:d57adb57-5abe-4a94-adf6-56ad1d9cc4f7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35857,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jXpHg59LFdRQMVZkshntM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jXpHg59LFdRQMVZkshntM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2174,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:75bdc559-c16c-4be6-8806-66826689c535"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "YYDYiHTUOsT3_vKteXa7Z",
              "ctx": null,
              "_testId": "urn:uuid:0880ddec-6a37-4542-9493-d0b0b5b7f1b8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36561,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "YYDYiHTUOsT3_vKteXa7Z",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "YYDYiHTUOsT3_vKteXa7Z",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35858,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 702,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:777e954e-8498-4381-a628-ba29d748ba29"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "nXPywBxvGxW3N5vqssItM",
              "ctx": null,
              "_testId": "urn:uuid:2cc85be3-252b-465a-a132-275dddb4578d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36717,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "nXPywBxvGxW3N5vqssItM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "nXPywBxvGxW3N5vqssItM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36561,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:44412d11-011c-4656-b375-6e4bfad4bf88"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uwpIlANQGmCLBhC9EzZqf",
              "ctx": null,
              "_testId": "urn:uuid:e1362f11-9461-4851-9430-db8f91223afb",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40854,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uwpIlANQGmCLBhC9EzZqf",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uwpIlANQGmCLBhC9EzZqf",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36718,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4136,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "c-Wvj8NKwsjTpgx52WCE2",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:cde777f5-ebe2-451d-8d54-35fdf45f25e9"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:2da6a6eb-19b6-447a-9a9d-f5d6ac5b4dd5",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
          "cells": [
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uzIr6IkiU4sk8_gh1B46o",
              "ctx": null,
              "_testId": "urn:uuid:bef06893-c7ee-4290-a9dc-80595734d52a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lu0pQynzCyAFebZwI1Mxe",
              "ctx": null,
              "_testId": "urn:uuid:df44638d-f6cc-41e6-a38a-4ecdd756afde",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jXpHg59LFdRQMVZkshntM",
              "ctx": null,
              "_testId": "urn:uuid:d57adb57-5abe-4a94-adf6-56ad1d9cc4f7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35857,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "YYDYiHTUOsT3_vKteXa7Z",
              "ctx": null,
              "_testId": "urn:uuid:0880ddec-6a37-4542-9493-d0b0b5b7f1b8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36561,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "nXPywBxvGxW3N5vqssItM",
              "ctx": null,
              "_testId": "urn:uuid:2cc85be3-252b-465a-a132-275dddb4578d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36717,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uwpIlANQGmCLBhC9EzZqf",
              "ctx": null,
              "_testId": "urn:uuid:e1362f11-9461-4851-9430-db8f91223afb",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40854,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Validate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:31b8a29b-728f-4c3b-a247-08539b0ef001",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3131,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:79cf4c2d-4f22-414d-8c22-e684816a47d6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:09Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5paY5zqBjmuRKXXiyQiR5KZCaExDToVALNPtLZWCHY9JtGzGmnCtAJKP3BeBZvY1YEZ86rbYagR6wafoC1PYdLaN\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:79cf4c2d-4f22-414d-8c22-e684816a47d6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:09Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5paY5zqBjmuRKXXiyQiR5KZCaExDToVALNPtLZWCHY9JtGzGmnCtAJKP3BeBZvY1YEZ86rbYagR6wafoC1PYdLaN"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:b4f4bf93-7df4-4bca-b16c-fed2f8f61b09",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:a6003cb2-51c2-4397-8315-e9f01320fc8b",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:270bc37a-8466-49d2-8feb-66f84a58c4ad",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40856,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1041,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:81af6b2f-752e-4525-b942-3b76674622d4"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:3bfb181e-1469-4ba5-8aa4-7f4ae2b572c5",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46162,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 560,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:c020783b-4f3f-4552-abec-447d6dd799b0",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:682883f0-64d5-4080-bde0-8d2ba1335846",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:cb4b42f2-74eb-48dd-b765-1e728709a3cc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1134,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b11bc18f-932d-4f08-9492-07c600730ee0"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:6eac82e8-d1d7-4439-a590-9391c088853d",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:e4e3cc34-48f6-4276-9b29-e40427e6f6ea\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"2696\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b4076e97-b40b-4173-9afc-53f5368bcd80\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:15Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z9rKPqP3QuYCN8NV19hF5edVc6TKCybFp3VzQosbd3s9LgBhickD6fFwTbuK8JmoXvsk9SRTBXktDsWZcSVsQryhyqDq16vhBEBsEKAZJ6fK2NmpPUA2HQvnPmWTuThucMV8\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:e4e3cc34-48f6-4276-9b29-e40427e6f6ea",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "2696",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b4076e97-b40b-4173-9afc-53f5368bcd80",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:15Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z9rKPqP3QuYCN8NV19hF5edVc6TKCybFp3VzQosbd3s9LgBhickD6fFwTbuK8JmoXvsk9SRTBXktDsWZcSVsQryhyqDq16vhBEBsEKAZJ6fK2NmpPUA2HQvnPmWTuThucMV8",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:eb1311be-d4d8-4347-8e97-083e82174b75",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:94a45d15-d459-4268-a78c-17d5b656bccb",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:7b53f776-b538-49a5-8509-f06e8b0c0b62",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 244,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:48d5ed64-f89b-464f-a093-5f8b7139c3ad"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:3a910d48-de53-4a3b-b780-1c4487bea72c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48903,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 189,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:ad5a4853-6c50-45b5-90df-fef7e3ee7aa7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49093,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:06973294-1760-4776-8009-084f5084ac76",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49093,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:b72554af-4667-4f27-838c-fe0d1b8f6c6c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49094,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46999,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1905,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:69d7529f-b95a-4b45-a8eb-cd24c01e9699"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:6b4f114c-463e-450a-b6d8-66e3b8afebd6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49433,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:613a95c0-9ba4-4be7-8222-5ca3bf85bd6b\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:17.70306831Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:d9306c4a-7101-4e00-bc92-6a07dc92c094\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:17.703080338Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z22Hnjq5V2Lcbek2vyprh5HEDpUPHzhw88BXhHh3DaA1u7h5sUnEUUavZN7n7KWi3A11QwqW1fYTMRm5oUAnRrSRk\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:613a95c0-9ba4-4be7-8222-5ca3bf85bd6b",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:17.70306831Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:d9306c4a-7101-4e00-bc92-6a07dc92c094",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:17.703080338Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z22Hnjq5V2Lcbek2vyprh5HEDpUPHzhw88BXhHh3DaA1u7h5sUnEUUavZN7n7KWi3A11QwqW1fYTMRm5oUAnRrSRk"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:b611ac20-b1ca-48fc-8ed3-8d70425eb749",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:0ffb635b-7f7c-4afb-99a9-4189cfdc67a2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:2c1e82c5-442e-4c3a-85b8-dc4a98b876ec",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49094,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 339,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:452f866e-6480-44b9-be64-eb1acedac95f"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:cb1d0ed9-db72-4784-85d2-605105682b0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:5fceec2f-fada-4985-bb74-583227c67759",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:e3ba9c4c-1fb3-478b-8d45-e8b31314b1a0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:9d798eb6-2878-41f0-b67c-fbb8025f3f2a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49556,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:efc30526-6e18-4ab2-acaf-2874e46e4db2"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:047dc209-855f-47e1-a57f-a7ceb562bd5f",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50497,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1022,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:90f5c61c-5aff-45e1-88f5-2827bf90fd19",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:15ec90e4-0672-400a-a6bb-c7e4ef396ec6",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:e53c04d5-0938-4c09-b6fe-00b51288198e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 856,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YbJnJz8hZDT-5C87c4tKY",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:57f4137c-5512-4bc9-a9a1-0146adde3143"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:03f67738-27e3-4831-a215-9e2283199586",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:31b8a29b-728f-4c3b-a247-08539b0ef001",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3131,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:79cf4c2d-4f22-414d-8c22-e684816a47d6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:09Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5paY5zqBjmuRKXXiyQiR5KZCaExDToVALNPtLZWCHY9JtGzGmnCtAJKP3BeBZvY1YEZ86rbYagR6wafoC1PYdLaN\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:79cf4c2d-4f22-414d-8c22-e684816a47d6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:09Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5paY5zqBjmuRKXXiyQiR5KZCaExDToVALNPtLZWCHY9JtGzGmnCtAJKP3BeBZvY1YEZ86rbYagR6wafoC1PYdLaN"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:3bfb181e-1469-4ba5-8aa4-7f4ae2b572c5",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46162,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 560,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:6eac82e8-d1d7-4439-a590-9391c088853d",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:e4e3cc34-48f6-4276-9b29-e40427e6f6ea\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"2696\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b4076e97-b40b-4173-9afc-53f5368bcd80\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:15Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z9rKPqP3QuYCN8NV19hF5edVc6TKCybFp3VzQosbd3s9LgBhickD6fFwTbuK8JmoXvsk9SRTBXktDsWZcSVsQryhyqDq16vhBEBsEKAZJ6fK2NmpPUA2HQvnPmWTuThucMV8\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:e4e3cc34-48f6-4276-9b29-e40427e6f6ea",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "2696",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b4076e97-b40b-4173-9afc-53f5368bcd80",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:15Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z9rKPqP3QuYCN8NV19hF5edVc6TKCybFp3VzQosbd3s9LgBhickD6fFwTbuK8JmoXvsk9SRTBXktDsWZcSVsQryhyqDq16vhBEBsEKAZJ6fK2NmpPUA2HQvnPmWTuThucMV8",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:3a910d48-de53-4a3b-b780-1c4487bea72c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48903,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 189,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:6b4f114c-463e-450a-b6d8-66e3b8afebd6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49433,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:613a95c0-9ba4-4be7-8222-5ca3bf85bd6b\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:17.70306831Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:d9306c4a-7101-4e00-bc92-6a07dc92c094\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:17.703080338Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z22Hnjq5V2Lcbek2vyprh5HEDpUPHzhw88BXhHh3DaA1u7h5sUnEUUavZN7n7KWi3A11QwqW1fYTMRm5oUAnRrSRk\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:613a95c0-9ba4-4be7-8222-5ca3bf85bd6b",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:17.70306831Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:d9306c4a-7101-4e00-bc92-6a07dc92c094",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:17.703080338Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z22Hnjq5V2Lcbek2vyprh5HEDpUPHzhw88BXhHh3DaA1u7h5sUnEUUavZN7n7KWi3A11QwqW1fYTMRm5oUAnRrSRk"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:cb1d0ed9-db72-4784-85d2-605105682b0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:047dc209-855f-47e1-a57f-a7ceb562bd5f",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50497,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1022,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:b4f4bf93-7df4-4bca-b16c-fed2f8f61b09",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:c020783b-4f3f-4552-abec-447d6dd799b0",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:eb1311be-d4d8-4347-8e97-083e82174b75",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:ad5a4853-6c50-45b5-90df-fef7e3ee7aa7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49093,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:b611ac20-b1ca-48fc-8ed3-8d70425eb749",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:5fceec2f-fada-4985-bb74-583227c67759",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:90f5c61c-5aff-45e1-88f5-2827bf90fd19",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        },
        {
          "id": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:a6003cb2-51c2-4397-8315-e9f01320fc8b",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:682883f0-64d5-4080-bde0-8d2ba1335846",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:94a45d15-d459-4268-a78c-17d5b656bccb",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:06973294-1760-4776-8009-084f5084ac76",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49093,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:0ffb635b-7f7c-4afb-99a9-4189cfdc67a2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:e3ba9c4c-1fb3-478b-8d45-e8b31314b1a0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:15ec90e4-0672-400a-a6bb-c7e4ef396ec6",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        },
        {
          "id": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
          "cells": [
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9a7p4N8JM8xa0saOt_oWG",
              "ctx": null,
              "_testId": "urn:uuid:270bc37a-8466-49d2-8feb-66f84a58c4ad",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2Vqv7cw35NIgz9brm1X2R",
              "ctx": null,
              "_testId": "urn:uuid:cb4b42f2-74eb-48dd-b765-1e728709a3cc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WJ9FE2pOBm1j2nvThSNyT",
              "ctx": null,
              "_testId": "urn:uuid:7b53f776-b538-49a5-8509-f06e8b0c0b62",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZvzJ19RnY4I0RpSw3DbpU",
              "ctx": null,
              "_testId": "urn:uuid:b72554af-4667-4f27-838c-fe0d1b8f6c6c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49094,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "rJowLccoS1KNpjYwKHTaP",
              "ctx": null,
              "_testId": "urn:uuid:2c1e82c5-442e-4c3a-85b8-dc4a98b876ec",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49555,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UJG6EHsoEKsQRDGFYBEG8",
              "ctx": null,
              "_testId": "urn:uuid:9d798eb6-2878-41f0-b67c-fbb8025f3f2a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fCriEu9GThEKiLr-PAUls",
              "ctx": null,
              "_testId": "urn:uuid:e53c04d5-0938-4c09-b6fe-00b51288198e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Generation Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "IKGPCc5AfBgpl4C6v1ZdC",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "IKGPCc5AfBgpl4C6v1ZdC",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "IKGPCc5AfBgpl4C6v1ZdC",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51521,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1066,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f50c6297-8404-47fc-863c-50b8b9fef33a"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Cb4TkJ4kQgCwhLMnyaeCK",
              "ctx": null,
              "_testId": "urn:uuid:28d3c8dd-38f2-4522-a489-62677ec5d1db",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Cb4TkJ4kQgCwhLMnyaeCK",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Cb4TkJ4kQgCwhLMnyaeCK",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52587,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 733,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:cd781a64-6581-4c4f-87a3-dee4b89715c8"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8jEs1g1JQiWwthgZLhXAu",
              "ctx": null,
              "_testId": "urn:uuid:799b3d57-f184-4d6b-bad3-e70373e3fccc",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53783,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8jEs1g1JQiWwthgZLhXAu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8jEs1g1JQiWwthgZLhXAu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 461,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:9dbd410e-aa76-4258-976d-40ac6417c8d4"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "zmr0QCgYU0XvbmWb58Dt6",
              "ctx": null,
              "_testId": "urn:uuid:5f7db052-3eb1-4424-b7f7-c134cbf9bfcb",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zmr0QCgYU0XvbmWb58Dt6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zmr0QCgYU0XvbmWb58Dt6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53784,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2121,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d58dd931-3e26-4a7c-8374-a0324130a951"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "-gQzp2ZykUHuC1FR6dqoh",
              "ctx": null,
              "_testId": "urn:uuid:0a3c1743-d2fa-4a7f-a256-b294d2323b60",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-gQzp2ZykUHuC1FR6dqoh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-gQzp2ZykUHuC1FR6dqoh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 719,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:eb7e6898-5add-4650-a6dd-338fb630d65e"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mNxPqj5dVPPK-JQKz25Z4",
              "ctx": null,
              "_testId": "urn:uuid:054c2868-2093-46bc-acd9-776587bec5b5",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mNxPqj5dVPPK-JQKz25Z4",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mNxPqj5dVPPK-JQKz25Z4",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56625,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:bd949ab2-b5a6-4d92-b2bd-92d1016e39d1"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vHrUt4Thsph1-TJ5BonCm",
              "ctx": null,
              "_testId": "urn:uuid:01ede513-4508-4e38-8d43-abc0d9408144",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60782,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vHrUt4Thsph1-TJ5BonCm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vHrUt4Thsph1-TJ5BonCm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4046,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "XMGKWI6ieN2NBrkMLhFNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:52ea78a2-b39a-4b5e-896b-14cecc1c484d"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:0e9fa92d-c7c8-4908-9b2b-01281f9b1aca",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
          "cells": [
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Cb4TkJ4kQgCwhLMnyaeCK",
              "ctx": null,
              "_testId": "urn:uuid:28d3c8dd-38f2-4522-a489-62677ec5d1db",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53321,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8jEs1g1JQiWwthgZLhXAu",
              "ctx": null,
              "_testId": "urn:uuid:799b3d57-f184-4d6b-bad3-e70373e3fccc",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53783,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "zmr0QCgYU0XvbmWb58Dt6",
              "ctx": null,
              "_testId": "urn:uuid:5f7db052-3eb1-4424-b7f7-c134cbf9bfcb",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "-gQzp2ZykUHuC1FR6dqoh",
              "ctx": null,
              "_testId": "urn:uuid:0a3c1743-d2fa-4a7f-a256-b294d2323b60",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mNxPqj5dVPPK-JQKz25Z4",
              "ctx": null,
              "_testId": "urn:uuid:054c2868-2093-46bc-acd9-776587bec5b5",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vHrUt4Thsph1-TJ5BonCm",
              "ctx": null,
              "_testId": "urn:uuid:01ede513-4508-4e38-8d43-abc0d9408144",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60782,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Expansion Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "hTq0UmnalSkmR7-aWT96P",
              "ctx": null,
              "_testId": "urn:uuid:1f093b6c-2660-498d-b68a-871cdd164fe1",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61791,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 49,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:ccd175fc-8e56-4bcf-9a6b-0a70de0cd56c\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:29Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z3fKMFjFWs2LsDm4fQsZYVrwPe5gxMiCbA2tfwascHBss1cHMmCUfnRz6X1QCxbKujbr36q4WMjShKx7CWZM1Rn9X\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:ccd175fc-8e56-4bcf-9a6b-0a70de0cd56c",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:29Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z3fKMFjFWs2LsDm4fQsZYVrwPe5gxMiCbA2tfwascHBss1cHMmCUfnRz6X1QCxbKujbr36q4WMjShKx7CWZM1Rn9X"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "hTq0UmnalSkmR7-aWT96P",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "hTq0UmnalSkmR7-aWT96P",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60783,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1007,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:a93ace7f-5fb0-4607-a030-41fb1224c388"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Hpxe-5e1YPVm532fKlndb",
              "ctx": null,
              "_testId": "urn:uuid:5d0f26e7-e894-4348-8a59-acb7f4f43b2e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62364,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 503,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Hpxe-5e1YPVm532fKlndb",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Hpxe-5e1YPVm532fKlndb",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 524,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:7580febc-24f2-4964-b105-721f234ca198"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "x1QfGiw64rDePjxYg52cw",
              "ctx": null,
              "_testId": "urn:uuid:39cb70b9-ad70-4b08-932e-e21938ab7d74",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63412,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:3a55d00d-b3b3-422b-ab7f-ebafd863ff3e\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"4838\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:54bfcf7b-8690-4bb9-bc7c-9bbd4e3312f4\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:31Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zGkxY8xVQUzAzU2LUMQn26pF4wuDs3sZ4Q761TmQeDWe3DE3FG26UppJFgRKvogA3shTjbhw8QcWwb8GGArtjc6JSo3RMhaUaUdGVxDuJcY7FCZrzvYS9hYx8EDcL36X1L2A\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:3a55d00d-b3b3-422b-ab7f-ebafd863ff3e",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "4838",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:54bfcf7b-8690-4bb9-bc7c-9bbd4e3312f4",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:31Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zGkxY8xVQUzAzU2LUMQn26pF4wuDs3sZ4Q761TmQeDWe3DE3FG26UppJFgRKvogA3shTjbhw8QcWwb8GGArtjc6JSo3RMhaUaUdGVxDuJcY7FCZrzvYS9hYx8EDcL36X1L2A",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x1QfGiw64rDePjxYg52cw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x1QfGiw64rDePjxYg52cw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 545,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:10a25351-ed7d-4c1b-8b2b-9adde6bd37fc"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "zRyMxjJSUZCQpz7ZFl9E6",
              "ctx": null,
              "_testId": "urn:uuid:aa1475dd-038f-4caa-8479-c1141d8189ee",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 169,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zRyMxjJSUZCQpz7ZFl9E6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zRyMxjJSUZCQpz7ZFl9E6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63441,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1974,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d0e9dc83-b960-48c6-b71d-6806bdb41b24"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "PTVjcN_v6UVcxM3rHFyA3",
              "ctx": null,
              "_testId": "urn:uuid:68fcdb02-2e05-45e6-a1f6-5f4a140bed8b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65917,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf9ac96b-8464-4fcd-b54f-f46d5377ed34\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:34.189533726Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:941ee906-dacf-4fc7-b940-2d5f347d49c2\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:34.189542223Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z64AYB8i23SWrAjz3Rgbuw7hE15RKuMjYkjgc3LYWxgqvh2nHag1fWvkuKhRE9iu7Rp6nMdJVpvv1qatRgcYtExLd\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf9ac96b-8464-4fcd-b54f-f46d5377ed34",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:34.189533726Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:941ee906-dacf-4fc7-b940-2d5f347d49c2",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:34.189542223Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z64AYB8i23SWrAjz3Rgbuw7hE15RKuMjYkjgc3LYWxgqvh2nHag1fWvkuKhRE9iu7Rp6nMdJVpvv1qatRgcYtExLd"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "PTVjcN_v6UVcxM3rHFyA3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "PTVjcN_v6UVcxM3rHFyA3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65583,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 334,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:13ab8add-36ba-4a40-bc01-8c9bcf41d684"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cxgTBuJEs85QN749glSPL",
              "ctx": null,
              "_testId": "urn:uuid:2f03b0a5-edea-48d0-9914-f871cc9e9a1f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cxgTBuJEs85QN749glSPL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cxgTBuJEs85QN749glSPL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:aa1b5331-6ba9-43e2-b359-f5bcf83cfd90"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Qvafvx1ORhpayIBWXxUXZ",
              "ctx": null,
              "_testId": "urn:uuid:f9797e9b-9ded-43b1-8487-d33ff9e4cdf2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 536,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Qvafvx1ORhpayIBWXxUXZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Qvafvx1ORhpayIBWXxUXZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 973,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "tz1ki7-F5hMKmKstGxbVw",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:3c8c7c65-c541-4cd1-ab53-19fc36ff076c"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:4b874674-1054-4f63-ac4c-4e47f2204622",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "hTq0UmnalSkmR7-aWT96P",
              "ctx": null,
              "_testId": "urn:uuid:1f093b6c-2660-498d-b68a-871cdd164fe1",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61791,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 49,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:ccd175fc-8e56-4bcf-9a6b-0a70de0cd56c\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:29Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z3fKMFjFWs2LsDm4fQsZYVrwPe5gxMiCbA2tfwascHBss1cHMmCUfnRz6X1QCxbKujbr36q4WMjShKx7CWZM1Rn9X\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:ccd175fc-8e56-4bcf-9a6b-0a70de0cd56c",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:29Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z3fKMFjFWs2LsDm4fQsZYVrwPe5gxMiCbA2tfwascHBss1cHMmCUfnRz6X1QCxbKujbr36q4WMjShKx7CWZM1Rn9X"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Hpxe-5e1YPVm532fKlndb",
              "ctx": null,
              "_testId": "urn:uuid:5d0f26e7-e894-4348-8a59-acb7f4f43b2e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62364,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 503,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "x1QfGiw64rDePjxYg52cw",
              "ctx": null,
              "_testId": "urn:uuid:39cb70b9-ad70-4b08-932e-e21938ab7d74",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63412,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:3a55d00d-b3b3-422b-ab7f-ebafd863ff3e\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"4838\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:54bfcf7b-8690-4bb9-bc7c-9bbd4e3312f4\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:31Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zGkxY8xVQUzAzU2LUMQn26pF4wuDs3sZ4Q761TmQeDWe3DE3FG26UppJFgRKvogA3shTjbhw8QcWwb8GGArtjc6JSo3RMhaUaUdGVxDuJcY7FCZrzvYS9hYx8EDcL36X1L2A\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:3a55d00d-b3b3-422b-ab7f-ebafd863ff3e",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "4838",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:54bfcf7b-8690-4bb9-bc7c-9bbd4e3312f4",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:31Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zGkxY8xVQUzAzU2LUMQn26pF4wuDs3sZ4Q761TmQeDWe3DE3FG26UppJFgRKvogA3shTjbhw8QcWwb8GGArtjc6JSo3RMhaUaUdGVxDuJcY7FCZrzvYS9hYx8EDcL36X1L2A",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "zRyMxjJSUZCQpz7ZFl9E6",
              "ctx": null,
              "_testId": "urn:uuid:aa1475dd-038f-4caa-8479-c1141d8189ee",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 169,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "PTVjcN_v6UVcxM3rHFyA3",
              "ctx": null,
              "_testId": "urn:uuid:68fcdb02-2e05-45e6-a1f6-5f4a140bed8b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65917,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf9ac96b-8464-4fcd-b54f-f46d5377ed34\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:34.189533726Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:941ee906-dacf-4fc7-b940-2d5f347d49c2\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:34.189542223Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z64AYB8i23SWrAjz3Rgbuw7hE15RKuMjYkjgc3LYWxgqvh2nHag1fWvkuKhRE9iu7Rp6nMdJVpvv1qatRgcYtExLd\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf9ac96b-8464-4fcd-b54f-f46d5377ed34",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:34.189533726Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:941ee906-dacf-4fc7-b940-2d5f347d49c2",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:34.189542223Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z64AYB8i23SWrAjz3Rgbuw7hE15RKuMjYkjgc3LYWxgqvh2nHag1fWvkuKhRE9iu7Rp6nMdJVpvv1qatRgcYtExLd"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cxgTBuJEs85QN749glSPL",
              "ctx": null,
              "_testId": "urn:uuid:2f03b0a5-edea-48d0-9914-f871cc9e9a1f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Qvafvx1ORhpayIBWXxUXZ",
              "ctx": null,
              "_testId": "urn:uuid:f9797e9b-9ded-43b1-8487-d33ff9e4cdf2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 536,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Processing Errors",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "c2_HKBpc-D6gApGXXu4CT",
              "ctx": null,
              "_testId": "urn:uuid:8f218408-fff0-4273-8562-4ef8e0950cec",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "c2_HKBpc-D6gApGXXu4CT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "c2_HKBpc-D6gApGXXu4CT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:18681683-32b7-4fb5-a66e-bb741c196708"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uH9pr06X2gx8G0JY1O9w7",
              "ctx": null,
              "_testId": "urn:uuid:0fe58ded-9bb7-4241-934d-7264fd11cede",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uH9pr06X2gx8G0JY1O9w7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uH9pr06X2gx8G0JY1O9w7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d923330f-e5de-48ed-a9d0-0c91e234e971"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mpqI3TkhuCCWTYqvtwSFX",
              "ctx": null,
              "_testId": "urn:uuid:567fe816-1f2a-417e-a2e5-366ad14b7c78",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mpqI3TkhuCCWTYqvtwSFX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mpqI3TkhuCCWTYqvtwSFX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:ba7df60e-0241-4f05-829e-32ea7e25f629"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mxjqgT1zHuCj_B2CQbR7u",
              "ctx": null,
              "_testId": "urn:uuid:6e92a9cf-b1dc-4594-a709-44d8b83f9415",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mxjqgT1zHuCj_B2CQbR7u",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mxjqgT1zHuCj_B2CQbR7u",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:70ff7938-d20b-44e6-99d1-1c3150031f95"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uSp1TS-8ZNbN_-HZWhdXq",
              "ctx": null,
              "_testId": "urn:uuid:e83e8a04-2365-4a8e-bc8b-cfd5e6679272",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uSp1TS-8ZNbN_-HZWhdXq",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uSp1TS-8ZNbN_-HZWhdXq",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:51446d85-94c3-422d-9514-2baaf7a41da0"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MauzEJNQNVwAoPL1_IX5L",
              "ctx": null,
              "_testId": "urn:uuid:eff37e3c-d223-46b1-a180-095d04c6bc40",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MauzEJNQNVwAoPL1_IX5L",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MauzEJNQNVwAoPL1_IX5L",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d8a6d685-713a-4ac0-a717-079629ed7090"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xY4i8P-JuHVPb5bjyX1Ba",
              "ctx": null,
              "_testId": "urn:uuid:c077a9fa-c498-4fd3-937f-b5aa730e0bdd",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67620,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xY4i8P-JuHVPb5bjyX1Ba",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xY4i8P-JuHVPb5bjyX1Ba",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "GyADk3FCb9nhaVj9gW4Cn",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:fd1da4e8-f385-4c1c-8d9a-8de31690f7ee"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:32b49227-b860-4214-a6a9-317bd6cddb99",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
          "cells": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "c2_HKBpc-D6gApGXXu4CT",
              "ctx": null,
              "_testId": "urn:uuid:8f218408-fff0-4273-8562-4ef8e0950cec",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uH9pr06X2gx8G0JY1O9w7",
              "ctx": null,
              "_testId": "urn:uuid:0fe58ded-9bb7-4241-934d-7264fd11cede",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mpqI3TkhuCCWTYqvtwSFX",
              "ctx": null,
              "_testId": "urn:uuid:567fe816-1f2a-417e-a2e5-366ad14b7c78",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67618,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mxjqgT1zHuCj_B2CQbR7u",
              "ctx": null,
              "_testId": "urn:uuid:6e92a9cf-b1dc-4594-a709-44d8b83f9415",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "uSp1TS-8ZNbN_-HZWhdXq",
              "ctx": null,
              "_testId": "urn:uuid:e83e8a04-2365-4a8e-bc8b-cfd5e6679272",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MauzEJNQNVwAoPL1_IX5L",
              "ctx": null,
              "_testId": "urn:uuid:eff37e3c-d223-46b1-a180-095d04c6bc40",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xY4i8P-JuHVPb5bjyX1Ba",
              "ctx": null,
              "_testId": "urn:uuid:c077a9fa-c498-4fd3-937f-b5aa730e0bdd",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67620,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Interop",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        }
      ],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 67620,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 911,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 68532,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 507,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69038,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 235,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69273,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1726,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 70999,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 401,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 71400,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 106,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "nvSfuwO13EAbpxFGo0HCQ",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 71506,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 226,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "KcmSZbX47TQbZb2_yH7QC",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:a77d4e46-4907-404a-a58e-a62e5c24c188",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "apicatalog.com",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:2208103b-c592-40d0-97df-1de247339c5b",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71732,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:a9dfe2dc-423a-4349-8842-9c959fcd1ee1",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71778,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 196,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half",
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}},\"options\":{\"checks\":[\"proof\"]}}"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc2.veresverifier.dev/verifiers/z19w7KofwvE2nkJeRVLp8NDxz/credentials/verify",
                  "status": 400,
                  "data": {
                    "name": "ValidationError",
                    "message": "A validation error occurred in the 'Verify Credential Body' validator.",
                    "details": {
                      "errors": [
                        {
                          "name": "ValidationError",
                          "message": "should be array",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-06T17:50:35Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "type": "array"
                            },
                            "path": ".verifiableCredential['@context']",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/0/properties/%40context/type",
                            "schema": {
                              "description": "",
                              "title": ""
                            },
                            "value": "https://www.w3.org/ns/credentials/v2"
                          },
                          "cause": null,
                          "stack": "ValidationError: should be array\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should NOT have additional properties",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-06T17:50:35Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "additionalProperty": "credentialSubject"
                            },
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/1/additionalProperties",
                            "schema": {
                              "description": "",
                              "title": "Enveloped Verifiable Credential"
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2024-12-06T17:50:35Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should NOT have additional properties\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should match some schema in anyOf",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-06T17:50:35Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {},
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf",
                            "schema": {
                              "description": "",
                              "title": {
                                "title": "Verifiable Credential",
                                "type": "object",
                                "required": [
                                  "@context",
                                  "credentialSubject",
                                  "issuer",
                                  "type"
                                ],
                                "additionalProperties": true,
                                "properties": {
                                  "@context": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "oneOf": [
                                          {
                                            "const": "https://www.w3.org/2018/credentials/v1"
                                          },
                                          {
                                            "const": "https://www.w3.org/ns/credentials/v2"
                                          }
                                        ]
                                      }
                                    ],
                                    "additionalItems": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "credentialSubject": {
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "issuer": {
                                    "title": "identifier or an object with an id",
                                    "anyOf": [
                                      {
                                        "title": "ID",
                                        "description": "A unique identifier.",
                                        "type": "string",
                                        "minLength": 1,
                                        "disallow": {
                                          "type": "string",
                                          "enum": [
                                            "0"
                                          ]
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "id"
                                        ],
                                        "additionalProperties": true,
                                        "properties": {
                                          "id": {
                                            "title": "ID",
                                            "description": "A unique identifier.",
                                            "type": "string",
                                            "minLength": 1,
                                            "disallow": {
                                              "type": "string",
                                              "enum": [
                                                "0"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "type": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "const": "VerifiableCredential"
                                      }
                                    ],
                                    "additionalItems": {
                                      "type": "string"
                                    }
                                  },
                                  "proof": {
                                    "title": "Proof",
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2024-12-06T17:50:35Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should match some schema in anyOf\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        }
                      ],
                      "httpStatusCode": 400
                    },
                    "cause": null,
                    "stack": "ValidationError: A validation error occurred in the 'Verify Credential Body' validator.\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:246:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)",
                    "type": "ValidationError"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Gen Digital should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:6b2f51a9-70c1-4eba-a68f-4adec2d846ee",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:79dff43d-be92-4b6e-a287-f4f39242d489",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72005,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 123,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 422,
                  "data": {
                    "status_code": 10422,
                    "message": "[{'type': 'list_type', 'loc': ('body', 'verifiableCredential', '@context'), 'msg': 'Input should be a valid list', 'input': 'https://www.w3.org/ns/credentials/v2'}]",
                    "data": null
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:90bf83d8-1370-4679-b192-881e507ef136",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:654c5098-c28e-45ab-a5c8-5d851b39d2a2",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72230,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Trential should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:db6d301f-5cd2-4502-8cb2-e6d291b9959f",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 227,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:35Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:3dba6b41-7320-455b-86b5-61a312fdede6",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:35Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5J7ZeNTqkd7BxxKu29acTckTcDvyRfBKFAau5p782vttPSixD3Sd79RNg5emnREeBgKNTdJk2ZYHd2GMLJSJWQfq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "\"https://www.w3.org/2018/credentials/v1\" or \"https://www.w3.org/ns/credentials/v2\" needs to be first in the list of contexts."
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:ae91c7de-7280-4dce-927e-d8395cbf5533",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72496,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:37Z\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "17505",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "17505",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:37Z",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:807d580a-0e55-4e93-869e-395caad35b46",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72541,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:d8089b98-782b-4310-a366-f8eb2ae102b5",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:37Z\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "17505",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "17505",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:37Z",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:236dad90-b0d5-4044-8e86-c75dfc7c581d",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72638,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 127,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"17505\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:37Z\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:1ff28278-385a-4f82-9ba0-be1a2e5d0fa2",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "17505",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#17505",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "17505",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:37Z",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4Encc4tJAhBZSLDoNFEi4RxLjfQZmwkZxzeDFVqNjLWxxhuCTEMtszihwLLw9zk6fvdXo34Da3564yQjqwp4t1Rq"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:dd3153b9-8589-429f-b56a-a274f038e053",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 118,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "SpruceID should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:0f39c14f-f9c1-4e08-a7f7-23a2c20466e9",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:b4f2d2a4-51a3-4fe4-bfc3-4c695be8c0f0",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72915,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 565,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Gen Digital",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:624ece61-ce7f-4dbf-a55d-698ff6952bdc",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:f9eefd46-9b03-47ce-8873-70b26f9cdba1",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 916,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:46f43b2a-3f86-4ab5-b126-b0c8355ac86f",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74460,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:664cf075-a6ef-43b3-8f6b-7f7ceae8c2d6",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74490,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:60a0dfbf-d74f-4f3b-8eca-94b85c95dcd1",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74612,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 210,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 500,
                  "data": {
                    "code": "BR_0000",
                    "message": "assertion `left == right` failed\n  left: 48\n right: 32",
                    "cause": {
                      "message": "Panic"
                    }
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:9648c3f6-decc-47fd-928f-d4de60171dbb",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74823,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 126,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:61a4abc6-a75f-4df7-bb71-6150d7834bcd",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 227,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a\",\"statusListIndex\":\"382\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-06T17:50:37Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:ed668ac3-f3c0-4a5a-9b5c-5f62c3fa49f8",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/5f15f275-9766-4011-833a-94dfd72d4b0a",
                          "statusListIndex": "382",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:37164afa-c078-43cc-b20d-8e72a2d43968",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-06T17:50:37Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zg99BkX6LaxxUGPhJUoBuFV9L7vWt7bZJ4fXB6TKwEuVbp1C5h188jqQLyDeNcwLTGpRavngwCg3DnqCsPVnhKxwyRPjW8s2tWh55U8qCeWQk354TtPtvJ9PbXz6EV5hcJFf",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "invalid proof"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "OpSecId",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:9186a373-43b2-4d6b-87ee-9ef1856c2c2a",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"193953\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "193953",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:e0fbdbe2-239a-4898-81d5-06fb273141d7",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75222,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:caaf04d4-119e-4ec8-99f9-e88c06ec1d26",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"193953\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "193953",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:4f6d6c99-6643-4ae7-b6b3-435c81920a1a",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75299,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:d203fecb-8c9c-4f52-bdd2-decfa5052dbc",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"193953\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr\"}]},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "193953",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr"
                          }
                        ]
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:228b8e45-774e-4696-860c-2389871766e8",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75522,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"193953\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "193953",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:6a9bf554-2f59-4ff7-9a9e-1bed14baa18f",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75550,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 869,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"193953\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:a5770c6d-bf64-4df2-a587-fa1e9fd8a8a4",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#193953",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "193953",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z39YJtX3XYA3FPK6zVgrrs4o13739YZTxxzjd3MJUc2hN6kAJ6xjE2X6VkMVaaQkRaFW2vEftaZ6MSQs7qg6WeNGr"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "unsupported cryptosuite"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:27a0139b-5915-472e-9abc-6c154bc58f3e",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76420,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 47,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:150fc685-fe58-4f11-8f47-be3431869ae1",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76466,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half",
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}},\"options\":{\"checks\":[\"proof\"]}}"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc2.veresverifier.dev/verifiers/z19w7KofwvE2nkJeRVLp8NDxz/credentials/verify",
                  "status": 400,
                  "data": {
                    "verified": false,
                    "results": [
                      {
                        "proof": {
                          "@context": [
                            "https://www.w3.org/ns/credentials/v2"
                          ],
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        },
                        "verified": false,
                        "error": {
                          "name": "DataError",
                          "code": "invalidPublicKeyLength",
                          "message": "\"bytes\" must be a 32-byte Uint8Array."
                        }
                      }
                    ],
                    "error": {
                      "name": "VerificationError",
                      "errors": [
                        {
                          "name": "DataError",
                          "code": "invalidPublicKeyLength",
                          "message": "\"bytes\" must be a 32-byte Uint8Array.",
                          "stack": "DataError: \"bytes\" must be a 32-byte Uint8Array.\n    at assertKeyBytes (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/validators.js:22:19)\n    at _publicKeyDerEncode (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/ed25519.js:143:3)\n    at Module.verify (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/ed25519.js:59:10)\n    at Object.verify (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/factory.js:29:22)\n    at DataIntegrityProof.verifySignature (file:///home/node/app/node_modules/@digitalbazaar/data-integrity/lib/DataIntegrityProof.js:151:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DataIntegrityProof.verifyProof (file:///home/node/app/node_modules/@digitalbazaar/data-integrity/lib/DataIntegrityProof.js:299:24)\n    at async /home/node/app/node_modules/jsonld-signatures/lib/ProofSet.js:272:53\n    at async Promise.all (index 0)\n    at async _verify (/home/node/app/node_modules/jsonld-signatures/lib/ProofSet.js:260:3)"
                        }
                      ],
                      "message": "Verification error(s)."
                    },
                    "checks": [
                      {
                        "check": [
                          "proof"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "error": "\"bytes\" must be a 32-byte Uint8Array.",
                        "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE"
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:94c42915-2e34-420d-8c6f-73971015896f",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76517,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:c2322520-9d9e-4cdf-9380-1a10fb0a5763",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76550,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:9be671ad-d169-4c89-a410-f4085b6db7e4",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76671,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 190,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:ac4fafe5-7c6b-4374-b13c-cb8a2444d38d",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76861,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:4070ce68-2545-43df-b370-3cb094382a68",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76903,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 533,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-12-06T17:50:39.664204353Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39.66421302Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:3eae4532-cb75-4c65-ae4f-6b83ebca8aa9",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-12-06T17:50:39.664204353Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7586e1ab-b5be-4fe7-aaff-91442a619361",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39.66421302Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zdZD6xSmLVgjFYBRqta7iwRjGPt49pPDKva5VU2obdm71FGpTvYw18JEp7JgmPdnZNRQdDbwzJzx7RoGQSJzqR7W"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "invalid proof"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "SpruceID",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:9e6f6acc-83f1-4e95-8604-9f41fe35839c",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77437,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 107,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:8b4599a8-49a8-4e8b-8b21-bb44865806ba",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77546,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 49,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:f79028d9-b162-4670-875d-69dbda2769da",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:7f12486f-0b50-4191-b4d1-b8852eeaf329",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77625,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 422,
                  "data": {
                    "status_code": 10422,
                    "message": "[{'type': 'list_type', 'loc': ('body', 'verifiableCredential', 'proof', 'list[DataIntegrityProof]'), 'msg': 'Input should be a valid list', 'input': {'type': 'Ed25519Signature2020', 'verificationMethod': 'did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD', 'proofPurpose': 'assertionMethod', 'proofValue': 'z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu'}}, {'type': 'missing', 'loc': ('body', 'verifiableCredential', 'proof', 'DataIntegrityProof', 'cryptosuite'), 'msg': 'Field required', 'input': {'type': 'Ed25519Signature2020', 'verificationMethod': 'did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD', 'proofPurpose': 'assertionMethod', 'proofValue': 'z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu'}}]",
                    "data": null
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:c36284cf-7fda-4f45-85d3-857f95e65c09",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77748,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:1f8f8a37-de47-4016-9cfa-d5ef63c3fe73",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A1f8f8a37%2Dde47%2D4016%2D9cfa%2Dd5ef63c3fe73",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3NzgGDG45cw8fUJAUJt1ED28aJRgSjYWtzhcqkSrAtAyHBUPyDtmTzNmB4HrVpDfKqknMGNAPAQNJZcFzerm6XDu"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:a5851f60-482e-44eb-b1ba-5a8dd858f714",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77850,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:8b07f0c7-f35d-47a4-afd4-2994021a3ff8",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77885,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1621,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Trential",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:52536d13-7860-46d6-bcd6-f6fb611bfe79",
              "cell": {
                "rowId": "Trential",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79507,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:fb085386-593b-4a2c-abc3-fadaa3798048",
              "cell": {
                "rowId": "Trential",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79553,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 52,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:0b147964-7c39-415c-bc04-e5ab69164d35",
              "cell": {
                "rowId": "Trential",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79604,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 29,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/issuer/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/issue",
                  "status": 401
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:3cda1dd6-b6c0-40b3-bded-0e542290212f",
              "cell": {
                "rowId": "Trential",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79633,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 123,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"71\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-06T17:50:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b2643443-101f-4319-af67-cf29b2decbf4",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "71",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-06T17:50:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zw2hrMK3qk7jjPAYsqffJVdugPUHUy7A8ZWMAcPy5SJnQraQ7f2SKVFrnvzrVJbYWVkHcJkdVsjnT2h9xPN5XG5L"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:b432a43f-7f79-462b-b215-4d627d373c2d",
              "cell": {
                "rowId": "Trential",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 120,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "SpruceID should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:c81e9b7f-885b-45e5-a262-33c4c8e27bb2",
              "cell": {
                "rowId": "Trential",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79877,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "nvSfuwO13EAbpxFGo0HCQ",
              "ctx": null,
              "_testId": "urn:uuid:36838af0-4f2f-4615-9ef2-713222f1f97b",
              "cell": {
                "rowId": "Trential",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79910,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1182,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "At Risk",
      "rowLabel": "Statement",
      "columnLabel": "Reason",
      "columns": [
        "At least 2 passing implementations"
      ],
      "rows": [
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "apicatalog.com",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "Gen Digital",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "state": "failed"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "base",
    "shortName": "vc-bitstring-status-list-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c/vc-bitstring-status-list-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-bitstring-status-list-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC Bitstring Status List Interoperability Report 1.0",
  "stats": [
    "Tests passed 117/173 67%",
    "Tests failed 59/173 35%",
    "Failures 59",
    "Tests skipped 83",
    "Total tests 256"
  ],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}