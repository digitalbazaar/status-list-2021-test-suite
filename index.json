{
  "matrices": [
    {
      "title": "StatusList2021 Credentials (Issue \"statusPurpose: revocation\")",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:1bb035f5-5902-43d9-8b22-ea64ff99b64e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:a4a7bb34-e474-422f-a3fd-765179a2a18c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1243,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:4f949bf6-c3cb-4b38-8d8e-47ebc6c4cb06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Revocation'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 881,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QABzQpA32VNnBDCYxK44o",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:4e0add90-116f-43d7-b74e-9992cce34d84"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:34bdef94-5334-4a04-b652-80b039913e9e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1944,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:43:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:4f7b92de-56fb-4502-934f-4394fa427be1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-12-03T05:11:09Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-12-03T05:11:09.903979376Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "iyuZReVm72JDEk9qqzeMYSXnBPMcqki5RVNIWGY12W7Ham5_rVfgufKJXYVIwaZy6fI0dhJ31JUdkUsXGpmoBw",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-12-03T05:11:09Z",
                    "validUntil": "2023-12-04T05:11:09Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:50:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:1e22bddf-1056-4caa-bedf-405c92841c10",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1997,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 47,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Revocation'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1482,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 461,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QABzQpA32VNnBDCYxK44o",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:9b08ed1f-0965-43d7-be3d-cdd97cf21104"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "zBU5tza22zUoJ7npnE0l4",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "_testId": "urn:uuid:f85df9ad-6977-4b31-8a91-02a99047866c",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:1bb035f5-5902-43d9-8b22-ea64ff99b64e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:34bdef94-5334-4a04-b652-80b039913e9e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1944,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:43:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            }
          ]
        },
        {
          "id": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:a4a7bb34-e474-422f-a3fd-765179a2a18c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1243,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:4f7b92de-56fb-4502-934f-4394fa427be1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-12-03T05:11:09Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-12-03T05:11:09.903979376Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "iyuZReVm72JDEk9qqzeMYSXnBPMcqki5RVNIWGY12W7Ham5_rVfgufKJXYVIwaZy6fI0dhJ31JUdkUsXGpmoBw",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-12-03T05:11:09Z",
                    "validUntil": "2023-12-04T05:11:09Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:50:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST be 16kb in size when \"encodedList\" is decoded",
          "cells": [
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "_Go4U0gWGeRZcjjxOrLVT",
              "ctx": null,
              "_testId": "urn:uuid:4f949bf6-c3cb-4b38-8d8e-47ebc6c4cb06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb. For more info see\n            // `credentialSubject.encoded` in\n            // eslint-disable-next-line max-len\n            // https://w3c-ccg.github.io/vc-status-list-2021/#statuslist2021credential\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "8nGN11GknYBe05XC-j3PZ",
              "ctx": null,
              "_testId": "urn:uuid:1e22bddf-1056-4caa-bedf-405c92841c10",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1997,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 47,
              "state": "failed",
              "err": {}
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Issue \"statusPurpose: suspension\")",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:6e21189f-e7e9-4e47-8834-6092e9fa5074",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2713,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:faa84c34-566c-4ed4-9d8f-18829fb6b5d8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2714,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:df998a2e-00c3-4c48-a07d-f25f5d618eed",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Suspension'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2045,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 668,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "TOe6mXSN_oODS1fcAT_Lc",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:b7b59ddb-7aaf-4ef2-9a89-52f15928e36b"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:255b3423-0e7b-46f0-80c8-a9f8ed932a63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:97:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:b15df731-6987-40c2-8544-f69a5cace1d8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-12-03T05:11:10Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-12-03T05:11:10.736267133Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "DCrdJe87W3k3gs6-ppttC2yMjLGotOaIlVWEz1Z_Z0n6TRFA423iynmC38veSMvR4TZCC5d4drrQq0NL4lmSAA",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-12-03T05:11:10Z",
                    "validUntil": "2023-12-04T05:11:10Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:104:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:bb119fad-ca57-4d19-b126-674240e603f8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2827,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 9,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n          const issuer = issuers.find(issuer => issuer.tags.has('Suspension'));\n          const {result, error, data} = await issueVc({issuer});\n          err = error;\n          issuerResponse = result;\n          issuedVc = data;\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2799,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 17,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "TOe6mXSN_oODS1fcAT_Lc",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
          "_testId": "urn:uuid:23d63961-62ea-4b48-bfc2-544214445b17"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "zBU5tza22zUoJ7npnE0l4",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "_testId": "urn:uuid:2aa9a5cd-3acb-4792-b69e-cc0e6db18b23",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:6e21189f-e7e9-4e47-8834-6092e9fa5074",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2713,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          should.exist(issuerResponse);\n          should.not.exist(err);\n          issuerResponse.status.should.equal(201);\n          should.exist(issuedVc, `Expected VC from ${issuerName} to exist.`);\n          testCredential({credential: issuedVc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:255b3423-0e7b-46f0-80c8-a9f8ed932a63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST issue a VC with SL 2021 \"credentialStatus\" and \"suspension\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected [ …(2) ] to be a superset of [ …(3) ]",
                "showDiff": true,
                "actual": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n]",
                "expected": "[\n  \"https://www.w3.org/2018/credentials/v1\"\n  \"https://w3id.org/vc/status-list/2021/v1\"\n  \"https://w3id.org/security/data-integrity/v2\"\n]",
                "operator": "deepStrictEqual",
                "stack": "AssertionError: expected [ …(2) ] to be a superset of [ …(3) ]\n    at testCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:23:41)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:97:11)\n    at process.processImmediate (node:internal/timers:478:21)"
              }
            }
          ]
        },
        {
          "id": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:faa84c34-566c-4ed4-9d8f-18829fb6b5d8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2714,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n          this.test.cell = {columnId: issuerName, rowId: this.test.title};\n          const {slc} = await getSlc({issuedVc});\n          testSlCredential({slCredential: slc});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:b15df731-6987-40c2-8544-f69a5cace1d8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST have correct properties when dereferencing \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2816,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected { statusListCredential: { …(9) } } to have property '@context'",
                "showDiff": false,
                "actual": {
                  "statusListCredential": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://w3id.org/vc/status-list/2021/v1"
                    ],
                    "credentialSubject": {
                      "encodedList": "H4sIAAAAAAAA/2IAAQ6GUTAKRsEoGAWjYBSMIAAIAAD//9cIqqwACAAA",
                      "id": "https://vc.mesur.io/v1/credentials/status#list",
                      "size": 1,
                      "statusPurpose": "revocation",
                      "ttl": 5000,
                      "type": "StatusList2021"
                    },
                    "id": "https://vc.mesur.io/v1/credentials/status",
                    "issuanceDate": "2023-12-03T05:11:10Z",
                    "issuer": "did:web:vc.mesur.io:v1",
                    "proof": {
                      "created": "2023-12-03T05:11:10.736267133Z",
                      "proofPurpose": "assertionMethod",
                      "proofValue": "DCrdJe87W3k3gs6-ppttC2yMjLGotOaIlVWEz1Z_Z0n6TRFA423iynmC38veSMvR4TZCC5d4drrQq0NL4lmSAA",
                      "type": "Ed25519Signature2018",
                      "verificationMethod": "did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV"
                    },
                    "type": [
                      "VerifiableCredential",
                      "StatusList2021Credential"
                    ],
                    "validFrom": "2023-12-03T05:11:10Z",
                    "validUntil": "2023-12-04T05:11:10Z"
                  }
                },
                "stack": "AssertionError: expected { statusListCredential: { …(9) } } to have property '@context'\n    at testSlCredential (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:67:28)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js:104:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST be 16kb in size when \"encodedList\" is decoded",
          "cells": [
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "L0TqpBZ5abUU-EL7FnI5p",
              "ctx": null,
              "_testId": "urn:uuid:df998a2e-00c3-4c48-a07d-f25f5d618eed",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST be 16kb in size when \"encodedList\" is decoded",
              "body": "async function() {\n            this.test.cell = {columnId: issuerName, rowId: this.test.title};\n            const {slc: {credentialSubject}} = await getSlc({issuedVc});\n            const {encodedList} = credentialSubject;\n            // Uncompress encodedList\n            const decoded = await sl.decodeList({encodedList});\n            should.exist(decoded);\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 8) / 1024;\n            decodedSize.should.equal(16);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/10-issue.js",
              "parent": "aNoTohNyvcHpvmkM_Cgxf",
              "ctx": null,
              "_testId": "urn:uuid:bb119fad-ca57-4d19-b126-674240e603f8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST be 16kb in size when \"encodedList\" is decoded"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2827,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 9,
              "state": "failed",
              "err": {}
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Verify)",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:4c2f65cb-34bd-43a6-84c4-c2623672c230",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 533,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:c738b7aa-ead2-4ea6-8db8-b45055501905",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 565,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:e9726100-cb6a-41be-a6a9-44e86469e8da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4338,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:b6ac9013-35b0-42d6-8737-9d7bb7360cd3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4397,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:79fbf9dc-2190-49cb-9c7a-a203559e1cc6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4469,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1384,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldFailVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:102:14)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:733602b1-148d-4e1a-b9db-f6d05d6e4b89",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5854,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 988,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldFailVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:102:14)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:150:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        // get a VC issued by DB\n        const {match} = filterImplementations({filter: ({value}) => {\n          // FIXME: Make issuer name configurable via env variable\n          return value.settings.name === 'Digital Bazaar';\n        }});\n        const res = match.get('Digital Bazaar');\n        const {issuers, setStatusLists, publishStatusLists} = res;\n        setRevocationStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        setSuspensionStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        publishRevocationStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        publishSuspensionStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        const issuer1 = issuers.find(issuer => issuer.tags.has('Revocation'));\n        const {data: data1} = await issueVc({issuer: issuer1});\n        validVcForRevocation = data1;\n        const issuer2 = issuers.find(issuer => issuer.tags.has('Suspension'));\n        const {data: data2} = await issueVc({issuer: issuer2});\n        validVcForSuspension = data2;\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2837,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 402,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "eGg9McFqFh6-9ssXW6RJE",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
          "_testId": "urn:uuid:38e8a802-5320-4d0e-8718-791d1abf9b99"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:70b09a51-3109-4e52-bd9b-3321c08784b6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7212,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 264,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:63:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:31398b3d-73c5-4521-b8ec-2cbb963289d6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7476,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:71:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:24e7db06-a772-4f30-a8e3-d63e4df4636e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:8dd8205e-6a87-4944-b3fd-b754c21db7a5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7483,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:b8041534-1545-4691-94d5-fe44ba5fef20",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7486,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:106:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:d30e63a4-021b-44e8-a81d-6ec8f5936055",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7526,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:136:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n        // get a VC issued by DB\n        const {match} = filterImplementations({filter: ({value}) => {\n          // FIXME: Make issuer name configurable via env variable\n          return value.settings.name === 'Digital Bazaar';\n        }});\n        const res = match.get('Digital Bazaar');\n        const {issuers, setStatusLists, publishStatusLists} = res;\n        setRevocationStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        setSuspensionStatusList = setStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        publishRevocationStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Revocation'));\n        publishSuspensionStatusList = publishStatusLists.find(\n          issuer => issuer.tags.has('Suspension'));\n        const issuer1 = issuers.find(issuer => issuer.tags.has('Revocation'));\n        const {data: data1} = await issueVc({issuer: issuer1});\n        validVcForRevocation = data1;\n        const issuer2 = issuers.find(issuer => issuer.tags.has('Suspension'));\n        const {data: data2} = await issueVc({issuer: issuer2});\n        validVcForSuspension = data2;\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 368,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "eGg9McFqFh6-9ssXW6RJE",
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
          "_testId": "urn:uuid:f46b3f61-f944-4314-94fd-c4a61535f2bc"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "zBU5tza22zUoJ7npnE0l4",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:4d21788d-4c8c-4c2e-aa50-2fde43062663",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:4c2f65cb-34bd-43a6-84c4-c2623672c230",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 533,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForRevocation})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:70b09a51-3109-4e52-bd9b-3321c08784b6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"revocation\" status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7212,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 264,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:63:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:c738b7aa-ead2-4ea6-8db8-b45055501905",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 565,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: validVcForSuspension})\n        });\n        shouldPassVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:31398b3d-73c5-4521-b8ec-2cbb963289d6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid \"StatusList2021Credential\" with \"suspension\"status purpose"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7476,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:71:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:e9726100-cb6a-41be-a6a9-44e86469e8da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4338,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\"",
              "body": "async function() {\n        this.test.cell = {columnId: verifierName, rowId: this.test.title};\n        const invalidStatusListCredential = klona(validVcForRevocation);\n        invalidStatusListCredential.credentialStatus.statusListCredential =\n          'invalid-statusListCredential';\n        const {result, error, statusCode} = await verifier.post({\n          json: createRequestBody({vc: invalidStatusListCredential})\n        });\n        shouldFailVerification({result, error, statusCode});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:24e7db06-a772-4f30-a8e3-d63e4df4636e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.statusListCredential\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {}
            }
          ]
        },
        {
          "id": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:b6ac9013-35b0-42d6-8737-9d7bb7360cd3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4397,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST fail to verify a VC with invalid \"credentialStatus.type\"",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          const invalidCredentialStatusType = klona(validVcForRevocation);\n          invalidCredentialStatusType.credentialStatus.type = 'invalid-type';\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: invalidCredentialStatusType})\n          });\n          shouldFailVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:8dd8205e-6a87-4944-b3fd-b754c21db7a5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a VC with invalid \"credentialStatus.type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7483,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "failed",
              "err": {}
            }
          ]
        },
        {
          "id": "MUST fail to verify a revoked status list credential",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:79fbf9dc-2190-49cb-9c7a-a203559e1cc6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4469,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1384,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldFailVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:102:14)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a revoked status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForRevocation\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForRevocation})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and revoke it\n          const revokedVc = await updateStatus({\n            vc: validVcForRevocation, setStatusList: setRevocationStatusList,\n            publishStatusList: publishRevocationStatusList, statusInfo,\n            statusPurpose: 'revocation'\n          });\n          // try to verify the credential after revocation, should fail since it\n          // has now been revoked\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: revokedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:b8041534-1545-4691-94d5-fe44ba5fef20",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a revoked status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7486,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:106:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST fail to verify a suspended status list credential",
          "cells": [
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "hiXvNIgloUfYFu1wnc9GQ",
              "ctx": null,
              "_testId": "urn:uuid:733602b1-148d-4e1a-b9db-f6d05d6e4b89",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5854,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 988,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no response from verifier: expected Response{ data: { …(4) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldFailVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:102:14)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:150:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST fail to verify a suspended status list credential",
              "body": "async function() {\n          this.test.cell = {columnId: verifierName, rowId: this.test.title};\n          // get the status of the VC\n          const statusInfo = await getCredentialStatus({\n            verifiableCredential: validVcForSuspension\n          });\n          statusInfo.status.should.equal(false);\n          // verification of the credential should pass\n          const {result, error, statusCode} = await verifier.post({\n            json: createRequestBody({vc: validVcForSuspension})\n          });\n          shouldPassVerification({result, error, statusCode});\n          // update the status of the VC and suspend it\n          const suspendedVc = await updateStatus({\n            vc: validVcForSuspension, setStatusList: setSuspensionStatusList,\n            publishStatusList: publishSuspensionStatusList, statusInfo,\n            statusPurpose: 'suspension'\n          });\n          // try to verify the credential after suspension, should fail since it\n          // has now been suspended\n          const {\n            result: result2, error: err2, statusCode: statusCode2\n          } = await verifier.post({\n            json: createRequestBody({vc: suspendedVc})\n          });\n          shouldFailVerification({\n            result: result2, error: err2, statusCode: statusCode2\n          });\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js",
              "parent": "uIbsGjxxz-gL4Jn9slCUG",
              "ctx": null,
              "_testId": "urn:uuid:d30e63a4-021b-44e8-a81d-6ec8f5936055",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST fail to verify a suspended status list credential"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7526,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/20-verify.js:136:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Interop \"statusPurpose: revocation\")",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: revocation\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Revocation'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "E7rG6riUmOadTievp4qIV",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 7560,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: revocation\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Revocation'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "E7rG6riUmOadTievp4qIV",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 7561,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "zBU5tza22zUoJ7npnE0l4",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:4d2f99bb-2411-465b-9950-2ea2e48379f1",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "E7rG6riUmOadTievp4qIV",
              "ctx": null,
              "_testId": "urn:uuid:3d462ebc-3bc4-4969-a2e9-83a7f0dcf904",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7566,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 393,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "mesur.io should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "E7rG6riUmOadTievp4qIV",
              "ctx": null,
              "_testId": "urn:uuid:c0fd1498-977b-4c3f-955e-d695b3a04f91",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7958,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:47:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "mesur.io",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "E7rG6riUmOadTievp4qIV",
              "ctx": null,
              "_testId": "urn:uuid:f41aba12-2e25-419c-9456-eda080610ab2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7963,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:47:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "mesur.io should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "E7rG6riUmOadTievp4qIV",
              "ctx": null,
              "_testId": "urn:uuid:2cc34cc5-6579-462b-8b56-e217762ac060",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8032,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 18,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "StatusList2021 Credentials (Interop \"statusPurpose: suspension\")",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: suspension\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Suspension'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6iR_s0BNKZKajN6jy6sDx",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 8051,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"StatusList2021 Credentials (Interop \"statusPurpose: suspension\")\"",
          "body": "async function() {\n        const [issuer] = endpoints.filter(\n          endpoint => endpoint.settings.tags.includes('Suspension'));\n        issuedVc = issueVc({issuer});\n      }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6iR_s0BNKZKajN6jy6sDx",
          "ctx": null,
          "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 8051,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "zBU5tza22zUoJ7npnE0l4",
      "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:670e888e-e70c-426f-8a66-ef57f2e39d79",
      "columns": [
        "Digital Bazaar",
        "mesur.io"
      ],
      "rows": [
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "6iR_s0BNKZKajN6jy6sDx",
              "ctx": null,
              "_testId": "urn:uuid:52bc472d-63d5-4f24-a0bd-ddf1e00a7abf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8056,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 566,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "mesur.io should verify Digital Bazaar",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "6iR_s0BNKZKajN6jy6sDx",
              "ctx": null,
              "_testId": "urn:uuid:f8981a89-7a92-4531-bcc9-83ee038accaa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:78:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "mesur.io",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "6iR_s0BNKZKajN6jy6sDx",
              "ctx": null,
              "_testId": "urn:uuid:7b363615-a6e1-426d-ba98-d1085e27b440",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "Digital Bazaar"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8627,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected response from verifier: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected response from verifier: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldPassVerification (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/assertions.js:110:10)\n    at Context.<anonymous> (file:///home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js:78:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "mesur.io should verify mesur.io",
              "body": "async function() {\n          this.test.cell = {rowId: issuerName, columnId: verifierName};\n          const {data: vc, error: err} = await issuedVc;\n          should.not.exist(err);\n          should.exist(vc);\n          const body = createRequestBody({vc});\n          const {result, error, statusCode} = await verifier.post({json: body});\n          shouldPassVerification({result, error, statusCode});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/status-list-2021-test-suite/status-list-2021-test-suite/tests/30-interop.js",
              "parent": "6iR_s0BNKZKajN6jy6sDx",
              "ctx": null,
              "_testId": "urn:uuid:ad563a9a-29cb-416b-973c-fcaad8ff74ac",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "rowId": "mesur.io",
                "columnId": "mesur.io"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8686,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "status-list-2021-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c-ccg/status-list-2021-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/status-list-2021-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "Status List 2021 Interoperability Report 1.0",
  "stats": [
    "Tests passed 14/32 44%",
    "Tests failed 18/32 56%",
    "Failures 18",
    "Tests skipped 0",
    "Total tests 32"
  ]
}