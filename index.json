{
  "matrices": [
    {
      "title": "Data Model: BitstringStatusList Entry",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:47ab6875-a9e8-4d6b-b8bd-53c7705bdbd7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:22:16)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:42:9)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:541cc428-8080-4958-8ace-a2f439116b7f",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5838,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:bf945614-a110-4883-a288-2933baf7e8a5",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5839,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:4ea6856a-ccc9-453c-9ab2-5c49efcef14e",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:e799c2be-fac7-4320-9c6e-88fbb189832d",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:4b3d2cfd-eb17-4679-9020-341d22896865",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5841,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:8c227186-e5d9-4f65-bd71-da6b4af8ee11",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:1cc6a354-2d8a-4286-a421-c18e42dfdb6b",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, statusSize MUST be an integer greater than zero."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:d2af2e85-e022-47e7-908f-4581794456dd",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:996a44f8-52da-4402-97e8-7d38a696be97",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The number of status messages MUST equal the number of possible values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:914f4972-c829-4e57-bdcb-95bac0e302ca",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:8f23b855-c2b4-487e-9556-47267a2a2de7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:b670571d-873d-4ea1-8c21-e649d75fee8d",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\"."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5851,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:19aa1f4c-3c50-4bff-9809-9a5cd200a5ea",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5852,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5412,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:db3cb6bd-f4e6-4238-adea-5ae9ca2f2bd6"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:8c9cd2cf-42b3-4fe2-a8bb-75b90b92e872",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:4282fa6a-2c94-4856-974d-4d63b022395b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:af431e29-1c2c-478f-af42-a4109c745fbc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:2435270c-3407-44b7-8d50-7f46535ae884",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:a8f9d795-8ad5-483d-b8bd-b944ede73d9d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:e1530646-bf7a-45a4-aaea-a51aea62a0cd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 828,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:8673ac1e-1c3a-4f45-90dd-78a4698f02ab",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:aeb473a5-51a5-4153-81cd-08270b0e7dd9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:7bf896bd-a3a0-4689-b342-3dd64c3eeb3f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:0e0a75a8-6d12-4e68-915e-3b1fe1dfe10a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:2c080851-32f4-4e42-9f67-3fd9e48040eb",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:73e775cc-61d2-4e9d-842b-3e54c55a0dcb",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:f5661552-b937-470c-b3b7-280759420ec9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:70fbb922-e3ad-43c7-a254-4a6060bc9ba7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5854,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2095,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:56909d3b-b1ea-4f04-8f89-029f2a22b26f"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:9665e1d3-df0a-422a-9e69-52c54d3f9c48",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:335619c6-2934-47fa-856f-1137fed10930",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:1b5cdbe4-a509-408b-bbbd-7539557dc124",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:3695a084-ab5d-459b-8cef-4694f4afcf09",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:b03c61c4-7f1c-4b95-9156-4cb7f6a45fb7",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:bfa6427a-517e-4d1b-8dc8-de6db339d7e9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10267,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 227,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4b4d070b-a7f5-458e-9036-98cf156a28df",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10494,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4c8fe00a-4ea2-463d-b1ca-74e53f5273b5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10562,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:72d43cdf-19da-40cd-9bdc-d8330b2b535f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10562,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:76857bf4-1cc3-49ec-b895-6cd2ca2fa59b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4851bc78-888a-4d8c-b571-fd21ed342688",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:84fa127d-8ca5-476d-be2e-2cca5dc20d67",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:9dd3c564-95e2-43a1-a25e-58563c8495ba",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:0af8f952-7301-4438-9aa4-fcfc9394ea48",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1419,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:541ed825-6e57-49ef-a879-5912c1b85465"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:e98912c0-cbb3-48a8-99ed-eb811d1bb63f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:88bab8c9-7421-4688-9fac-1170371c5bcc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:65e05c5d-ddb4-4c04-a511-0814297aced4",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:1b2b4a5d-bae6-4a50-8e3a-bfaac2eb7b9c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:f9287bbf-6494-4fa2-87df-a30d4b3c5738",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:f0a10ffa-7226-4c69-8a65-a141599fe344",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 279,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:829de30d-10c7-4b41-92f6-d562d5431863",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11958,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:db07ca59-32f1-4125-aad8-b95bc86f8864",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:3c00327b-c6b6-4cea-91da-19aad41dba64",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:75849983-5d74-4371-bf84-653dc0f55d75",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:639170fc-2dc2-4cf5-b4f8-1a4f13ce31c1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:0d1cbecf-f849-449c-b821-e95be023dd15",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:4e6d814f-97bc-48ec-b1c2-d431720cfbe6",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:44669a96-f111-4569-adc0-4582d5fbd400",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1114,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:c4a679e7-03f0-402f-bd61-395d7fef0d53"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:4ba31ef8-a844-4235-a396-801b719042ae",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12446,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:7d33b268-9508-43fe-a975-007506349bef",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:15299a17-09b1-455e-bd9e-525b3040fe97",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:d33a51c6-4dbd-41a2-9fa5-30beab784352",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:65eff5fc-5330-4c42-81c6-9356161c129f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:09f6d692-f675-4354-92c2-013f2a7b5642",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12448,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:bcb4139f-c8ef-4089-a88f-9774f2fb5074",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:12b65be7-8953-42c5-a160-2385b36f5e5b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12946,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:526bd04a-fa1c-468c-bdaf-09467905c714",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12946,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:25eb2197-3d48-4822-bf72-5065a76ef043",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:3417849f-f798-4cc1-8259-9fa431de257e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:5d47785c-adc4-45f4-aea3-a39e2aedfe8e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:5641709c-6470-4da0-a274-72b9744d728f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:3049b1d2-e686-4a28-904b-32cda2ec1e49",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 415,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:cec7af74-0646-4a16-a2e3-c922d9d3a052"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:c7873099-5631-4801-8ec0-498522dd44a1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:a1a51180-fc96-4672-ba6a-9264b42d1a91",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:cb036a0a-cfb1-404b-b7e4-9e19c451b1a2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:acc7cc73-f359-458b-bd91-0db3c1b9f7bb",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:9dd3e334-1a46-4da1-81ea-7a0e2ecb5be2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:4e90aef1-2242-4680-9677-861cd305bd49",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:01d9ee75-bb77-4883-be88-b6d6f7c5fb6d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:d874909b-83be-45a4-9fd1-3d1e498fe5b2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:d6e8daad-0242-4425-9dc6-11c4e60b14c0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:7194014c-6ecb-47c7-8d79-2e8d5cf5091c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:fd719e62-08a2-4fa1-bb35-6ce086641ff4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:c99aa630-c341-4275-af89-3acf8f95d6e5",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:05657026-dca7-4a70-8344-55e3f20aff37",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:678cafda-fd48-4adf-911f-6d1176071be8",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 176,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:2754e18f-76d3-4020-a567-1f47b67d5c14"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:c737c579-2eb1-4586-8928-f5a7e3363f48",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14434,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:3c81fab3-18e8-4511-bdff-60763e23ad28",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:1c7b2e54-bb70-45db-9909-ebb76ea2c10a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:a5002876-645b-4527-8eb8-5c7420f1108b",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:36e056f0-e94e-40bc-824b-7298ba4ef3bc",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:334aab0e-022a-42c8-a754-3d6330909039",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14436,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:da10cf99-2ff5-46d1-b058-9e8ebd515acc",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17546,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1507,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:692cad49-7f27-44f3-95eb-a90e8547c927",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:8b76b0c0-1898-4b95-9193-4ed9f5d4f8e8",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:8739bf21-1ec9-4e0d-b975-ba34929a9032",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:6951746b-24a4-4ad9-be46-f1fb66905f34",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:207dbae8-e1bc-41dc-a0ee-326aa09ad9ab",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:59cae12c-c7ab-4361-bfc0-ebdf2b4275e7",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:96c54484-4a38-43df-9b1b-26e5e395ae35",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1180,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "a1CNf83rZtYleD8vF69te",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:a13b02c6-f708-4efe-a5dc-d0dda9b9d124"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:d5d64566-78a9-49e1-9b3e-1591a135136d",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
          "cells": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:47ab6875-a9e8-4d6b-b8bd-53c7705bdbd7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:22:16)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:42:9)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:8c9cd2cf-42b3-4fe2-a8bb-75b90b92e872",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:9665e1d3-df0a-422a-9e69-52c54d3f9c48",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:e98912c0-cbb3-48a8-99ed-eb811d1bb63f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:4ba31ef8-a844-4235-a396-801b719042ae",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12446,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:c7873099-5631-4801-8ec0-498522dd44a1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:c737c579-2eb1-4586-8928-f5a7e3363f48",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14434,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:541cc428-8080-4958-8ace-a2f439116b7f",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5838,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:4282fa6a-2c94-4856-974d-4d63b022395b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:335619c6-2934-47fa-856f-1137fed10930",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:88bab8c9-7421-4688-9fac-1170371c5bcc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:7d33b268-9508-43fe-a975-007506349bef",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:a1a51180-fc96-4672-ba6a-9264b42d1a91",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:3c81fab3-18e8-4511-bdff-60763e23ad28",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            }
          ]
        },
        {
          "id": "The type property MUST be BitstringStatusListEntry. ",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
          "cells": [
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:bf945614-a110-4883-a288-2933baf7e8a5",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5839,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:af431e29-1c2c-478f-af42-a4109c745fbc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:1b5cdbe4-a509-408b-bbbd-7539557dc124",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:65e05c5d-ddb4-4c04-a511-0814297aced4",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:15299a17-09b1-455e-bd9e-525b3040fe97",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:cb036a0a-cfb1-404b-b7e4-9e19c451b1a2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:1c7b2e54-bb70-45db-9909-ebb76ea2c10a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The purpose of the status entry MUST be a string.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
          "cells": [
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:4ea6856a-ccc9-453c-9ab2-5c49efcef14e",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:2435270c-3407-44b7-8d50-7f46535ae884",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:3695a084-ab5d-459b-8cef-4694f4afcf09",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:1b2b4a5d-bae6-4a50-8e3a-bfaac2eb7b9c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:d33a51c6-4dbd-41a2-9fa5-30beab784352",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:acc7cc73-f359-458b-bd91-0db3c1b9f7bb",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:a5002876-645b-4527-8eb8-5c7420f1108b",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
          "cells": [
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:e799c2be-fac7-4320-9c6e-88fbb189832d",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:a8f9d795-8ad5-483d-b8bd-b944ede73d9d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:b03c61c4-7f1c-4b95-9156-4cb7f6a45fb7",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:f9287bbf-6494-4fa2-87df-a30d4b3c5738",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:65eff5fc-5330-4c42-81c6-9356161c129f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:9dd3e334-1a46-4da1-81ea-7a0e2ecb5be2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:36e056f0-e94e-40bc-824b-7298ba4ef3bc",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14435,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListCredential property MUST be a URL to a verifiable credential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:4b3d2cfd-eb17-4679-9020-341d22896865",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5841,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:e1530646-bf7a-45a4-aaea-a51aea62a0cd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 828,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:bfa6427a-517e-4d1b-8dc8-de6db339d7e9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10267,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 227,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:f0a10ffa-7226-4c69-8a65-a141599fe344",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 279,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:09f6d692-f675-4354-92c2-013f2a7b5642",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12448,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:4e90aef1-2242-4680-9677-861cd305bd49",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:334aab0e-022a-42c8-a754-3d6330909039",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14436,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3110,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:8c227186-e5d9-4f65-bd71-da6b4af8ee11",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:8673ac1e-1c3a-4f45-90dd-78a4698f02ab",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4b4d070b-a7f5-458e-9036-98cf156a28df",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10494,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:829de30d-10c7-4b41-92f6-d562d5431863",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11958,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:bcb4139f-c8ef-4089-a88f-9774f2fb5074",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:01d9ee75-bb77-4883-be88-b6d6f7c5fb6d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:da10cf99-2ff5-46d1-b058-9e8ebd515acc",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17546,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1507,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:1cc6a354-2d8a-4286-a421-c18e42dfdb6b",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, statusSize MUST be an integer greater than zero."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5843,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:aeb473a5-51a5-4153-81cd-08270b0e7dd9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4c8fe00a-4ea2-463d-b1ca-74e53f5273b5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10562,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:db07ca59-32f1-4125-aad8-b95bc86f8864",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:12b65be7-8953-42c5-a160-2385b36f5e5b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12946,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:d874909b-83be-45a4-9fd1-3d1e498fe5b2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:692cad49-7f27-44f3-95eb-a90e8547c927",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:d2af2e85-e022-47e7-908f-4581794456dd",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:7bf896bd-a3a0-4689-b342-3dd64c3eeb3f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:72d43cdf-19da-40cd-9bdc-d8330b2b535f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10562,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:3c00327b-c6b6-4cea-91da-19aad41dba64",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:526bd04a-fa1c-468c-bdaf-09467905c714",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12946,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:d6e8daad-0242-4425-9dc6-11c4e60b14c0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:8b76b0c0-1898-4b95-9193-4ed9f5d4f8e8",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:996a44f8-52da-4402-97e8-7d38a696be97",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The number of status messages MUST equal the number of possible values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:0e0a75a8-6d12-4e68-915e-3b1fe1dfe10a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:76857bf4-1cc3-49ec-b895-6cd2ca2fa59b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:75849983-5d74-4371-bf84-653dc0f55d75",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:25eb2197-3d48-4822-bf72-5065a76ef043",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:7194014c-6ecb-47c7-8d79-2e8d5cf5091c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:8739bf21-1ec9-4e0d-b975-ba34929a9032",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:914f4972-c829-4e57-bdcb-95bac0e302ca",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:2c080851-32f4-4e42-9f67-3fd9e48040eb",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:4851bc78-888a-4d8c-b571-fd21ed342688",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:639170fc-2dc2-4cf5-b4f8-1a4f13ce31c1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:3417849f-f798-4cc1-8259-9fa431de257e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:fd719e62-08a2-4fa1-bb35-6ce086641ff4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:6951746b-24a4-4ad9-be46-f1fb66905f34",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:8f23b855-c2b4-487e-9556-47267a2a2de7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:73e775cc-61d2-4e9d-842b-3e54c55a0dcb",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:84fa127d-8ca5-476d-be2e-2cca5dc20d67",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:0d1cbecf-f849-449c-b821-e95be023dd15",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:5d47785c-adc4-45f4-aea3-a39e2aedfe8e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:c99aa630-c341-4275-af89-3acf8f95d6e5",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:207dbae8-e1bc-41dc-a0ee-326aa09ad9ab",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:b670571d-873d-4ea1-8c21-e649d75fee8d",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\"."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5851,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:f5661552-b937-470c-b3b7-280759420ec9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:9dd3c564-95e2-43a1-a25e-58563c8495ba",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:4e6d814f-97bc-48ec-b1c2-d431720cfbe6",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:5641709c-6470-4da0-a274-72b9744d728f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:05657026-dca7-4a70-8344-55e3f20aff37",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:59cae12c-c7ab-4361-bfc0-ebdf2b4275e7",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "-w1PqfA0NVgPYxRuftjps",
              "ctx": null,
              "_testId": "urn:uuid:19aa1f4c-3c50-4bff-9809-9a5cd200a5ea",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5852,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "DbRM-kJQdvxnprKuCaezI",
              "ctx": null,
              "_testId": "urn:uuid:70fbb922-e3ad-43c7-a254-4a6060bc9ba7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "21fuST3kjkNAUNxTmDR9n",
              "ctx": null,
              "_testId": "urn:uuid:0af8f952-7301-4438-9aa4-fcfc9394ea48",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Eo5zStn2n_6rBSjv2sUmn",
              "ctx": null,
              "_testId": "urn:uuid:44669a96-f111-4569-adc0-4582d5fbd400",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CJIjaQdesAnMHDM1V2MZp",
              "ctx": null,
              "_testId": "urn:uuid:3049b1d2-e686-4a28-904b-32cda2ec1e49",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "mXC8NKuZWvAkNVfcwZOpX",
              "ctx": null,
              "_testId": "urn:uuid:678cafda-fd48-4adf-911f-6d1176071be8",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "vvVzl-nI3_7EpZlNMA0sw",
              "ctx": null,
              "_testId": "urn:uuid:96c54484-4a38-43df-9b1b-26e5e395ae35",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Data Model: BitstringStatusList Credential",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "yZtdEgzLhQCyrtVQ_CTsc",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4134,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:7e14fe2a-475e-4d00-a180-a20e69618e09"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:c25ae031-4ca6-4878-ac49-f9ff147a6a65",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24805,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:f1fd48e7-876e-40b3-bfa4-a54d4b759ee3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:9c5508d9-288d-4092-8a0c-503e7fe0ee32",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:1dc02ae4-86ab-45bc-a0ed-f2aa52e31716",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:881d8aa7-6bdf-40a9-bb73-6273a4cc039a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24809,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:27cba611-6e6f-4a9f-aca4-b0acc1e7e047",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:e2e47156-d76c-4a35-bac7-79a56047fd66",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24812,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23189,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1615,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:24b463f4-3d48-4eb6-8430-9dea1dd2f96f"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:749fa409-b5fe-4204-88d4-76cd6ea3a874",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:bfa8770c-9c36-4d4c-a81c-edbe2d0aa3ec",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:d698a05e-346e-4d5d-889d-26779d055350",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:944eb73c-a38d-4376-a55a-f421adf2d998",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:23e1b8ac-d96c-410d-87d5-0ad9dbb7294c",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:09fbf8cb-b534-48fd-a4b8-3cc3b286331f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:d01760b8-85f4-4b93-818f-e15b570b0073",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24813,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 493,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:cf60fe72-209d-497a-8e23-8a9fd51408a2"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dXkNf4WNoWCJO0ATVgk7r",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25310,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1063,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:40015a38-4bf3-442a-9b24-049af55ff8b0"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:65937988-ff4f-4175-9819-a6c15214bd16",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:c86453bf-d68c-4e43-b7bc-3d3bc594a307",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:0b72b687-fa84-4d58-ba57-1dfcdfd53051",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:d0fbc49f-ee2a-42ef-bc53-379c2d19e3ae",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:2d633e94-15b1-4ad8-95ba-0d5b5110fa63",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:0bb94301-3466-4a96-a97a-d6499616d0b7",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:fb0622cc-6102-4862-a548-797a407c17d0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26372,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 725,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:9eb40170-78b4-47b7-8ac4-2eea4933168e"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:11aa9e6e-69c1-4d9d-ad99-234fd4caf88b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27198,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:9f7093a6-f1bd-467d-8acb-2275dde5324b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:8de5e8e1-34fb-4230-9844-b6db7245b6d1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:bd16a3a1-c9bd-4e9e-a64a-0a3f8eb92b83",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:399ddf19-b029-4bfe-86ac-bd3f11df4e4a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:036e2597-7cca-4911-beca-e919f76ab3a1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:2ddf9b9b-c3b2-4d32-86e0-5f45b745244e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27101,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:23cba9eb-bdce-4b67-8b9a-c88dc7ec6928"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:0351205e-1164-4e98-90c7-a9502afa0b98",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:a32b492b-26ae-48fa-a233-ea48189fc322",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:7fa4948b-cce3-41f1-bd85-a2e431cf0d75",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:4f4806ac-62b7-4f2e-87cb-4d615d219227",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:c0182744-0538-41bd-8e64-376d0b042cfa",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:ded6d7f5-61d8-4bde-8f03-9a9c99f8fb20",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31031,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:f36dbfbe-5708-4fef-849c-6bc8e20805b6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31031,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3827,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "26Uk9dodsGi2KiXVgJbPU",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:34f5a6d7-19cd-40a6-8ab9-2b4bf55ebeea"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:3694073a-bdb5-4c67-a6db-be66f56b17e7",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
          "cells": [
            {
              "cell": {
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:c25ae031-4ca6-4878-ac49-f9ff147a6a65",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24805,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:749fa409-b5fe-4204-88d4-76cd6ea3a874",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:65937988-ff4f-4175-9819-a6c15214bd16",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:11aa9e6e-69c1-4d9d-ad99-234fd4caf88b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27198,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:0351205e-1164-4e98-90c7-a9502afa0b98",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31028,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "cell": {
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:f1fd48e7-876e-40b3-bfa4-a54d4b759ee3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:bfa8770c-9c36-4d4c-a81c-edbe2d0aa3ec",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:c86453bf-d68c-4e43-b7bc-3d3bc594a307",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:9f7093a6-f1bd-467d-8acb-2275dde5324b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:a32b492b-26ae-48fa-a233-ea48189fc322",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
          "cells": [
            {
              "cell": {
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:9c5508d9-288d-4092-8a0c-503e7fe0ee32",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:d698a05e-346e-4d5d-889d-26779d055350",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:0b72b687-fa84-4d58-ba57-1dfcdfd53051",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:8de5e8e1-34fb-4230-9844-b6db7245b6d1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:7fa4948b-cce3-41f1-bd85-a2e431cf0d75",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
          "cells": [
            {
              "cell": {
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:1dc02ae4-86ab-45bc-a0ed-f2aa52e31716",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:944eb73c-a38d-4376-a55a-f421adf2d998",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25307,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:d0fbc49f-ee2a-42ef-bc53-379c2d19e3ae",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27099,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:bd16a3a1-c9bd-4e9e-a64a-0a3f8eb92b83",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:4f4806ac-62b7-4f2e-87cb-4d615d219227",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
          "cells": [
            {
              "cell": {
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:881d8aa7-6bdf-40a9-bb73-6273a4cc039a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24809,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:23e1b8ac-d96c-410d-87d5-0ad9dbb7294c",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:2d633e94-15b1-4ad8-95ba-0d5b5110fa63",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:399ddf19-b029-4bfe-86ac-bd3f11df4e4a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:c0182744-0538-41bd-8e64-376d0b042cfa",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The uncompressed bitstring MUST be at least 16KB in size.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
          "cells": [
            {
              "cell": {
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:27cba611-6e6f-4a9f-aca4-b0acc1e7e047",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:09fbf8cb-b534-48fd-a4b8-3cc3b286331f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:0bb94301-3466-4a96-a97a-d6499616d0b7",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:036e2597-7cca-4911-beca-e919f76ab3a1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:ded6d7f5-61d8-4bde-8f03-9a9c99f8fb20",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31031,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
          "cells": [
            {
              "cell": {
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "39Y1BmW7ouTi6fAlxWXq2",
              "ctx": null,
              "_testId": "urn:uuid:e2e47156-d76c-4a35-bac7-79a56047fd66",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24812,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ZDR6uHr-8lk_ljNcVkcP5",
              "ctx": null,
              "_testId": "urn:uuid:d01760b8-85f4-4b93-818f-e15b570b0073",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "cell": {
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "ftDXDbnY0r21CGFaUbNGW",
              "ctx": null,
              "_testId": "urn:uuid:fb0622cc-6102-4862-a548-797a407c17d0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27100,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "CIAlaQyuthYUUbo3IKaLk",
              "ctx": null,
              "_testId": "urn:uuid:2ddf9b9b-c3b2-4d32-86e0-5f45b745244e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "N16tzIB3ZhEn3MrdexDbu",
              "ctx": null,
              "_testId": "urn:uuid:f36dbfbe-5708-4fef-849c-6bc8e20805b6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31031,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VlksHcXI6ei7mVxneZbIS",
              "ctx": null,
              "_testId": "urn:uuid:78db899e-00ad-42a3-bcd7-9dc6b448bdd0",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31033,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VlksHcXI6ei7mVxneZbIS",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VlksHcXI6ei7mVxneZbIS",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31031,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:2597699f-bed3-46df-b27c-07a798051302"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vTUIFIosM-_2kkf_v-CmX",
              "ctx": null,
              "_testId": "urn:uuid:4231aac6-ec1f-42dd-835f-c1b3b446463e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31096,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 179,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vTUIFIosM-_2kkf_v-CmX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vTUIFIosM-_2kkf_v-CmX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31096,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:c0fdfaeb-13a0-4364-aafd-616833334306"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "odYbWGlziMwAt8OEk8ZKj",
              "ctx": null,
              "_testId": "urn:uuid:35cf628f-d133-425c-b2f3-f498961989d5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31275,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 182,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "odYbWGlziMwAt8OEk8ZKj",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "odYbWGlziMwAt8OEk8ZKj",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31275,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:955b4453-9cd7-47cb-a533-acaddbbc6f70"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "aT2_qnj092A-MsfljixW_",
              "ctx": null,
              "_testId": "urn:uuid:4bc933a7-a9df-4b95-a50d-9865fd747f94",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1194,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "aT2_qnj092A-MsfljixW_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "aT2_qnj092A-MsfljixW_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:631b149c-82c9-4c88-902f-d37c24391180"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dY1mHBrjb7AmSYSY5nJ5d",
              "ctx": null,
              "_testId": "urn:uuid:1782363f-4dfd-44f4-acbd-b62d46cf91f5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32652,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 389,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dY1mHBrjb7AmSYSY5nJ5d",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dY1mHBrjb7AmSYSY5nJ5d",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32652,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f4059040-a4af-44b9-a5b8-e58ae73c2022"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Q_OFJ8n6LWBIZ9hSUL84G",
              "ctx": null,
              "_testId": "urn:uuid:cff88b4c-65c8-4bd0-a274-2e276559784b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33043,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Q_OFJ8n6LWBIZ9hSUL84G",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Q_OFJ8n6LWBIZ9hSUL84G",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33043,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:7cd22dbf-0d6e-4c6c-8f1b-b96504bf958a"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F0kR07v64QR9LXqIxYgWI",
              "ctx": null,
              "_testId": "urn:uuid:fba3cab1-3663-4c87-88c8-b2ed75c833cd",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33083,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 928,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F0kR07v64QR9LXqIxYgWI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F0kR07v64QR9LXqIxYgWI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33082,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "oj_qc3P10kGAU1GgS9APk",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b5ddd6c1-ca35-48d2-8f7d-983d9545542a"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:fc79a073-d7f3-4086-a6c8-382ba8261595",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VlksHcXI6ei7mVxneZbIS",
              "ctx": null,
              "_testId": "urn:uuid:78db899e-00ad-42a3-bcd7-9dc6b448bdd0",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31033,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vTUIFIosM-_2kkf_v-CmX",
              "ctx": null,
              "_testId": "urn:uuid:4231aac6-ec1f-42dd-835f-c1b3b446463e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31096,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 179,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "odYbWGlziMwAt8OEk8ZKj",
              "ctx": null,
              "_testId": "urn:uuid:35cf628f-d133-425c-b2f3-f498961989d5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31275,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 182,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "aT2_qnj092A-MsfljixW_",
              "ctx": null,
              "_testId": "urn:uuid:4bc933a7-a9df-4b95-a50d-9865fd747f94",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1194,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dY1mHBrjb7AmSYSY5nJ5d",
              "ctx": null,
              "_testId": "urn:uuid:1782363f-4dfd-44f4-acbd-b62d46cf91f5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32652,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 389,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Q_OFJ8n6LWBIZ9hSUL84G",
              "ctx": null,
              "_testId": "urn:uuid:cff88b4c-65c8-4bd0-a274-2e276559784b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33043,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F0kR07v64QR9LXqIxYgWI",
              "ctx": null,
              "_testId": "urn:uuid:fba3cab1-3663-4c87-88c8-b2ed75c833cd",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33083,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 928,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Generate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "svCG0_rpUBO1-DoSOywWj",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "svCG0_rpUBO1-DoSOywWj",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "svCG0_rpUBO1-DoSOywWj",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34010,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 956,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:c0006b6c-9e2a-471f-8d3e-cf6927b680e6"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "3aO2ehdKYxj55CdCgiPyN",
              "ctx": null,
              "_testId": "urn:uuid:70dff5f7-5664-4b79-a60e-75be7edfc301",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35452,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "3aO2ehdKYxj55CdCgiPyN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "3aO2ehdKYxj55CdCgiPyN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 484,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:406dd7d3-1954-4dc9-80b6-5ed49e88e760"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F_Vki01loT70F5NA5g59_",
              "ctx": null,
              "_testId": "urn:uuid:a2536e3d-716a-4685-b9ea-49087b57ab62",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F_Vki01loT70F5NA5g59_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F_Vki01loT70F5NA5g59_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35452,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 278,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:7bba43c7-ad31-432f-9c07-655614cef0b2"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Uq05WPcq1SEi__AE2BNwO",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Uq05WPcq1SEi__AE2BNwO",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Uq05WPcq1SEi__AE2BNwO",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 784,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:c30438b2-6ea1-4061-abcb-ab7b55a0ec98"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wzVvBCKBMGH4G8jSqeAtE",
              "ctx": null,
              "_testId": "urn:uuid:529e3342-90b4-4fa1-a897-7424c9c5a4ab",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36979,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wzVvBCKBMGH4G8jSqeAtE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wzVvBCKBMGH4G8jSqeAtE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36516,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 462,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:30d64262-07aa-46f7-b9af-252f4462193e"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ulaDKk2fVQGWU4ukwR85b",
              "ctx": null,
              "_testId": "urn:uuid:66606255-ee72-4933-85b0-063c40cb9acf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37115,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ulaDKk2fVQGWU4ukwR85b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ulaDKk2fVQGWU4ukwR85b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36979,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 136,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:597e58f7-8fba-4643-9169-61c660f6d3dd"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "r9G193qfe_5yEU3QbX1Es",
              "ctx": null,
              "_testId": "urn:uuid:e841e150-8418-4d6c-9fe1-3b1eb3192df6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40187,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "r9G193qfe_5yEU3QbX1Es",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "r9G193qfe_5yEU3QbX1Es",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37115,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3070,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nvF9QVCSd8LY4qEkfMeo5",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d181cf36-2deb-48d4-ad33-10244e8ad078"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:e387607c-8368-40b8-aa6b-bf7d999048c5",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
          "cells": [
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "3aO2ehdKYxj55CdCgiPyN",
              "ctx": null,
              "_testId": "urn:uuid:70dff5f7-5664-4b79-a60e-75be7edfc301",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35452,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F_Vki01loT70F5NA5g59_",
              "ctx": null,
              "_testId": "urn:uuid:a2536e3d-716a-4685-b9ea-49087b57ab62",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wzVvBCKBMGH4G8jSqeAtE",
              "ctx": null,
              "_testId": "urn:uuid:529e3342-90b4-4fa1-a897-7424c9c5a4ab",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36979,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ulaDKk2fVQGWU4ukwR85b",
              "ctx": null,
              "_testId": "urn:uuid:66606255-ee72-4933-85b0-063c40cb9acf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37115,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "r9G193qfe_5yEU3QbX1Es",
              "ctx": null,
              "_testId": "urn:uuid:e841e150-8418-4d6c-9fe1-3b1eb3192df6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40187,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Validate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:4569571d-3471-4fff-8064-502e9a10fee8",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41263,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 48,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:232fa563-a491-4eae-943d-6f10b86ab37a\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:31Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5sSgCCTwuDDmQBRKkbDvFhg23No3td58mmzrM4aDwAHahHwiyZzzMzzhSww1b7E1pG3FDDEA1FB2KDPsrxQs1BHy\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:232fa563-a491-4eae-943d-6f10b86ab37a",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:31Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5sSgCCTwuDDmQBRKkbDvFhg23No3td58mmzrM4aDwAHahHwiyZzzMzzhSww1b7E1pG3FDDEA1FB2KDPsrxQs1BHy"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:56aab4e0-599d-4822-b947-867b73f63d30",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:db21e450-a55b-4fff-9929-539c908fa212",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:88b9f227-1210-4c4d-9c5e-25fa8df65380",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40187,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1075,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:e176ff31-f23f-4694-8e51-b7d99e168cea"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:db5f371b-b57b-414c-b681-732611165d22",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41799,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:68c732a1-8f1a-4374-a843-2b6aca55b348",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:a32cd5b4-077d-4896-816e-ea62864c69c6",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:8e4223df-85ee-471b-b577-dcc345394742",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41314,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 485,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:8ebbb41b-d422-4c03-886c-cded54b0e033"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:f1d9c495-322d-407f-a53b-eda354f6eb06",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42264,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 441,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:a60e1e21-1b6f-44f5-ad94-5c1169c4fa9a",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:97329d28-db00-4fd5-882b-9c0831c3bc5b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:93929d83-4669-4c96-abe6-087dff1c8918",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 266,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:42f3f52d-887e-4018-8051-18040e28c20b"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:6d5124b5-312f-49d1-a399-75f4b874faaa",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43455,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:d5442a43-cafa-4486-88d7-8cbc51ac4eb7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:430ce581-4e93-4c27-ab06-1de1ed1c083a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:e14dbc1b-8efb-4738-b747-9ed5d994beec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 749,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:423c3f71-5ee9-498f-8b07-10f46d6ecb49"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:b9c823fb-cd67-4804-82c7-d23d3ddec53a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:50e68699-fae9-4325-ab4f-8bd3e3f7dfcb\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:34.890180714Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7211bff1-0882-4a7c-83b7-e8161188cfcf\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:34.890191126Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4ivu7oevmXkTuTxXLjHkkTRf6vNfMCofPoaA42B9nZGDXtoZLz364fBL5YnHWLrNhLn4Q1m3p7Y49Qc39ea232Cb\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:50e68699-fae9-4325-ab4f-8bd3e3f7dfcb",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:34.890180714Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7211bff1-0882-4a7c-83b7-e8161188cfcf",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:34.890191126Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4ivu7oevmXkTuTxXLjHkkTRf6vNfMCofPoaA42B9nZGDXtoZLz364fBL5YnHWLrNhLn4Q1m3p7Y49Qc39ea232Cb"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:eadc48b7-22a2-4c84-adcd-8fa6e87a59c6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:6af7e2f3-15de-4235-8667-ad47b251020f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:592ca823-4287-4f53-9e66-19b6d1e35310",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43526,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 343,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:45cbd25e-85cf-47bc-8793-d24fc9a9629a"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:79b09586-5040-41b1-9828-f73893a5c9e1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44021,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:244b84c3-bb2c-4e39-a23d-e94393fe50c6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:cd1653a4-4f85-44eb-97c4-27a5755626a7",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:ec5b4869-94b0-44b5-b85b-22ed1382112b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:12a44820-6683-40ba-a721-385242b0de96"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:65b23361-b3e9-4c9e-a99c-4cc03f383eaa",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44908,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1015,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:311aaaa5-2557-4e6f-8b39-68423a2f24bb",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:90e759ed-3063-4c5b-a925-11ac808f0305",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:d29c837c-eeec-4a1b-bf99-75d388a4e3eb",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 854,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lB1vRAJrHXXU3oPf8EEf4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:346c629e-c93c-43a3-9819-203f73755c17"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:f22c1b71-018d-4677-ba38-0eefcf8d7040",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:4569571d-3471-4fff-8064-502e9a10fee8",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41263,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 48,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:232fa563-a491-4eae-943d-6f10b86ab37a\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:31Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5sSgCCTwuDDmQBRKkbDvFhg23No3td58mmzrM4aDwAHahHwiyZzzMzzhSww1b7E1pG3FDDEA1FB2KDPsrxQs1BHy\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:232fa563-a491-4eae-943d-6f10b86ab37a",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:31Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5sSgCCTwuDDmQBRKkbDvFhg23No3td58mmzrM4aDwAHahHwiyZzzMzzhSww1b7E1pG3FDDEA1FB2KDPsrxQs1BHy"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:db5f371b-b57b-414c-b681-732611165d22",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41799,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 199,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:f1d9c495-322d-407f-a53b-eda354f6eb06",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42264,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 441,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:6d5124b5-312f-49d1-a399-75f4b874faaa",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43455,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:b9c823fb-cd67-4804-82c7-d23d3ddec53a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:50e68699-fae9-4325-ab4f-8bd3e3f7dfcb\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:34.890180714Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:7211bff1-0882-4a7c-83b7-e8161188cfcf\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:34.890191126Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4ivu7oevmXkTuTxXLjHkkTRf6vNfMCofPoaA42B9nZGDXtoZLz364fBL5YnHWLrNhLn4Q1m3p7Y49Qc39ea232Cb\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:50e68699-fae9-4325-ab4f-8bd3e3f7dfcb",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:34.890180714Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:7211bff1-0882-4a7c-83b7-e8161188cfcf",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:34.890191126Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4ivu7oevmXkTuTxXLjHkkTRf6vNfMCofPoaA42B9nZGDXtoZLz364fBL5YnHWLrNhLn4Q1m3p7Y49Qc39ea232Cb"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:79b09586-5040-41b1-9828-f73893a5c9e1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44021,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:65b23361-b3e9-4c9e-a99c-4cc03f383eaa",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44908,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1015,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:56aab4e0-599d-4822-b947-867b73f63d30",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:68c732a1-8f1a-4374-a843-2b6aca55b348",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:a60e1e21-1b6f-44f5-ad94-5c1169c4fa9a",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:d5442a43-cafa-4486-88d7-8cbc51ac4eb7",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:eadc48b7-22a2-4c84-adcd-8fa6e87a59c6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:244b84c3-bb2c-4e39-a23d-e94393fe50c6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:311aaaa5-2557-4e6f-8b39-68423a2f24bb",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        },
        {
          "id": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:db21e450-a55b-4fff-9929-539c908fa212",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:a32cd5b4-077d-4896-816e-ea62864c69c6",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:97329d28-db00-4fd5-882b-9c0831c3bc5b",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:430ce581-4e93-4c27-ab06-1de1ed1c083a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:6af7e2f3-15de-4235-8667-ad47b251020f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:cd1653a4-4f85-44eb-97c4-27a5755626a7",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:90e759ed-3063-4c5b-a925-11ac808f0305",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        },
        {
          "id": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
          "cells": [
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mPdyH1ltjOOUtK-Z8RAQE",
              "ctx": null,
              "_testId": "urn:uuid:88b9f227-1210-4c4d-9c5e-25fa8df65380",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dWI_VEEeXV7prmxKaZ-XZ",
              "ctx": null,
              "_testId": "urn:uuid:8e4223df-85ee-471b-b577-dcc345394742",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41998,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VhNl9KGFW2aryy-6cXxKM",
              "ctx": null,
              "_testId": "urn:uuid:93929d83-4669-4c96-abe6-087dff1c8918",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "liJuiFCO5zbeBmJSG-wov",
              "ctx": null,
              "_testId": "urn:uuid:e14dbc1b-8efb-4738-b747-9ed5d994beec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43525,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jvv23NAu-9c6WNWQB-0jd",
              "ctx": null,
              "_testId": "urn:uuid:592ca823-4287-4f53-9e66-19b6d1e35310",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "7b7-XU8VUDk-T26tEmjle",
              "ctx": null,
              "_testId": "urn:uuid:ec5b4869-94b0-44b5-b85b-22ed1382112b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qQBh6aqGv9jVC6ESK5sjx",
              "ctx": null,
              "_testId": "urn:uuid:d29c837c-eeec-4a1b-bf99-75d388a4e3eb",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Generation Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "g4ZvRpXT71zdla3ZkAC09",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g4ZvRpXT71zdla3ZkAC09",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g4ZvRpXT71zdla3ZkAC09",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45924,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 539,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d780852e-33da-42f2-8c2b-95810c6eb024"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qk_B_lDXhqjv4PAO1JLey",
              "ctx": null,
              "_testId": "urn:uuid:f44a5dd7-b999-40c6-93fa-eb46def218d2",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47074,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "qk_B_lDXhqjv4PAO1JLey",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "qk_B_lDXhqjv4PAO1JLey",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46464,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 610,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:3570dc44-af73-4bd7-9228-fa4e9a527410"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "px2QAV5ProWzTxWNlkGZL",
              "ctx": null,
              "_testId": "urn:uuid:19c80753-6d71-47d7-be5c-02d01af16868",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47376,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "px2QAV5ProWzTxWNlkGZL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "px2QAV5ProWzTxWNlkGZL",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47075,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 301,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:00823fcc-9ee6-43ef-81b1-3c73b955ea31"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "WdetNzhx2PhgXX-9IMpwr",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WdetNzhx2PhgXX-9IMpwr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WdetNzhx2PhgXX-9IMpwr",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 852,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d122fd7d-61f9-4a09-abc8-dd8cee10db5d"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fSTF4PLE26JkCr2O27WIZ",
              "ctx": null,
              "_testId": "urn:uuid:5deb5f58-d1cd-45bd-ab5f-f7c45ad24d85",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48735,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fSTF4PLE26JkCr2O27WIZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fSTF4PLE26JkCr2O27WIZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48229,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 505,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:073b6606-c503-4ab2-9d1b-d0c92e729876"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "0cYVIKy-W9u0-WmM1qe7b",
              "ctx": null,
              "_testId": "urn:uuid:9fd612bf-831f-46b8-a926-994dd42faf6b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48826,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0cYVIKy-W9u0-WmM1qe7b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0cYVIKy-W9u0-WmM1qe7b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48735,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:6d8e19c5-d44a-4984-b373-a99304b905c6"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wjbzuKGNuOKDY8yWfLfv_",
              "ctx": null,
              "_testId": "urn:uuid:44415c36-e31b-4a47-b1af-63b999ee7cad",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52322,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wjbzuKGNuOKDY8yWfLfv_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wjbzuKGNuOKDY8yWfLfv_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48826,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3495,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "QPWxcgVjYAnpeQKBVsfNi",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b2a6e121-77c1-454f-a44e-d15fa52dffa8"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:bda8de63-76ad-43d8-8774-c4a2392da237",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
          "cells": [
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "qk_B_lDXhqjv4PAO1JLey",
              "ctx": null,
              "_testId": "urn:uuid:f44a5dd7-b999-40c6-93fa-eb46def218d2",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47074,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "px2QAV5ProWzTxWNlkGZL",
              "ctx": null,
              "_testId": "urn:uuid:19c80753-6d71-47d7-be5c-02d01af16868",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47376,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "fSTF4PLE26JkCr2O27WIZ",
              "ctx": null,
              "_testId": "urn:uuid:5deb5f58-d1cd-45bd-ab5f-f7c45ad24d85",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48735,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "0cYVIKy-W9u0-WmM1qe7b",
              "ctx": null,
              "_testId": "urn:uuid:9fd612bf-831f-46b8-a926-994dd42faf6b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48826,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wjbzuKGNuOKDY8yWfLfv_",
              "ctx": null,
              "_testId": "urn:uuid:44415c36-e31b-4a47-b1af-63b999ee7cad",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52322,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Expansion Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "FYcdfCn1yG8oUWrUeA2ru",
              "ctx": null,
              "_testId": "urn:uuid:6faad63f-123d-4679-98bd-030d319c688c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53462,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:7f23ba0d-67b1-4039-87ae-49202f4326c3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:43Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5m5UUMfVTCdNq26fzwYgYaUdgMGJydqvLxWsQGDzFFjyRnuQrfsZi7PPcB2GxHstgeaDPS7K4mPtKgwoqMk62XGR\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:7f23ba0d-67b1-4039-87ae-49202f4326c3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:43Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5m5UUMfVTCdNq26fzwYgYaUdgMGJydqvLxWsQGDzFFjyRnuQrfsZi7PPcB2GxHstgeaDPS7K4mPtKgwoqMk62XGR"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "FYcdfCn1yG8oUWrUeA2ru",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "FYcdfCn1yG8oUWrUeA2ru",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52323,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1139,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:5363b2ca-066e-4caf-947c-099b4441eb30"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6vFZ9QH52viwCCAkQzMIh",
              "ctx": null,
              "_testId": "urn:uuid:9bb19980-ed64-470b-96af-f027ef5496bc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 197,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6vFZ9QH52viwCCAkQzMIh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6vFZ9QH52viwCCAkQzMIh",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53558,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 434,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:74d94110-114b-4ccf-a651-ba9b8a76595b"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vypJ_mkgrWFA2KmA3Trmm",
              "ctx": null,
              "_testId": "urn:uuid:b6ea1bf9-cc4b-45bb-a7b1-6fc3d2c570f5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54499,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 258,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vypJ_mkgrWFA2KmA3Trmm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vypJ_mkgrWFA2KmA3Trmm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54189,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 309,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:665cef53-4551-4441-a947-26b5ebc156ba"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6lc1l2t5CsRr5raBhwirv",
              "ctx": null,
              "_testId": "urn:uuid:e218c600-6060-4248-b3da-54881e43d965",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6lc1l2t5CsRr5raBhwirv",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6lc1l2t5CsRr5raBhwirv",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54758,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 833,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f0d73188-a8d2-4082-bb8e-2fa5004659a6"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "HgP17CV91RcllL4lcM2Lp",
              "ctx": null,
              "_testId": "urn:uuid:3d0e9aba-63c6-40a1-b211-2b2346b33ab4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56088,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:932bc7a9-5eaa-4734-9698-f0d853cdafe8\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:47.109053983Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:9dd236a7-f167-42c4-95c1-245d031db21d\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:47.109063224Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4Nwdo9yRjM8TDrVddHPn5E2FmDam278ctadDJnsJnC1Aj86nvqWKqtDuqa9iWX6TzfxreqhyPVfL38bxkSz2NhfE\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:932bc7a9-5eaa-4734-9698-f0d853cdafe8",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:47.109053983Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:9dd236a7-f167-42c4-95c1-245d031db21d",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:47.109063224Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4Nwdo9yRjM8TDrVddHPn5E2FmDam278ctadDJnsJnC1Aj86nvqWKqtDuqa9iWX6TzfxreqhyPVfL38bxkSz2NhfE"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HgP17CV91RcllL4lcM2Lp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HgP17CV91RcllL4lcM2Lp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 426,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:43e20fc5-4131-450f-a55a-31affe4342f3"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "FaAzGBXO9zitdmF2eUPTN",
              "ctx": null,
              "_testId": "urn:uuid:b2ca508b-da3b-4840-9299-c896f15714fa",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56256,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "FaAzGBXO9zitdmF2eUPTN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "FaAzGBXO9zitdmF2eUPTN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56187,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:88017928-9959-4368-bf59-d155a1377f73"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "g5op6W8IwZPXoiqAlDh4S",
              "ctx": null,
              "_testId": "urn:uuid:ff1f64db-1974-47b8-b128-43b4df28f3be",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 541,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g5op6W8IwZPXoiqAlDh4S",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g5op6W8IwZPXoiqAlDh4S",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56281,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 887,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "uQGx8JjmVgsOwcJoz--bt",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:28de34da-cfd1-4a8e-9687-2e54f89a369b"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:301a411e-5ede-42b0-bb41-9f7ae7c3963c",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "FYcdfCn1yG8oUWrUeA2ru",
              "ctx": null,
              "_testId": "urn:uuid:6faad63f-123d-4679-98bd-030d319c688c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53462,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:7f23ba0d-67b1-4039-87ae-49202f4326c3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:43Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z5m5UUMfVTCdNq26fzwYgYaUdgMGJydqvLxWsQGDzFFjyRnuQrfsZi7PPcB2GxHstgeaDPS7K4mPtKgwoqMk62XGR\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:7f23ba0d-67b1-4039-87ae-49202f4326c3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:43Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z5m5UUMfVTCdNq26fzwYgYaUdgMGJydqvLxWsQGDzFFjyRnuQrfsZi7PPcB2GxHstgeaDPS7K4mPtKgwoqMk62XGR"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6vFZ9QH52viwCCAkQzMIh",
              "ctx": null,
              "_testId": "urn:uuid:9bb19980-ed64-470b-96af-f027ef5496bc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 197,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vypJ_mkgrWFA2KmA3Trmm",
              "ctx": null,
              "_testId": "urn:uuid:b6ea1bf9-cc4b-45bb-a7b1-6fc3d2c570f5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54499,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6lc1l2t5CsRr5raBhwirv",
              "ctx": null,
              "_testId": "urn:uuid:e218c600-6060-4248-b3da-54881e43d965",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "HgP17CV91RcllL4lcM2Lp",
              "ctx": null,
              "_testId": "urn:uuid:3d0e9aba-63c6-40a1-b211-2b2346b33ab4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56088,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:932bc7a9-5eaa-4734-9698-f0d853cdafe8\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:47.109053983Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:9dd236a7-f167-42c4-95c1-245d031db21d\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:47.109063224Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4Nwdo9yRjM8TDrVddHPn5E2FmDam278ctadDJnsJnC1Aj86nvqWKqtDuqa9iWX6TzfxreqhyPVfL38bxkSz2NhfE\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:932bc7a9-5eaa-4734-9698-f0d853cdafe8",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:47.109053983Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:9dd236a7-f167-42c4-95c1-245d031db21d",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:47.109063224Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4Nwdo9yRjM8TDrVddHPn5E2FmDam278ctadDJnsJnC1Aj86nvqWKqtDuqa9iWX6TzfxreqhyPVfL38bxkSz2NhfE"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "FaAzGBXO9zitdmF2eUPTN",
              "ctx": null,
              "_testId": "urn:uuid:b2ca508b-da3b-4840-9299-c896f15714fa",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56256,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "g5op6W8IwZPXoiqAlDh4S",
              "ctx": null,
              "_testId": "urn:uuid:ff1f64db-1974-47b8-b128-43b4df28f3be",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 541,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Processing Errors",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "QXLunkPdFjFfAtWvuNomn",
              "ctx": null,
              "_testId": "urn:uuid:ca76a19e-d1b3-4fea-a94f-dfaf4468c2af",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "QXLunkPdFjFfAtWvuNomn",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "QXLunkPdFjFfAtWvuNomn",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:bae2feb2-f24f-4a94-a288-0c15660e24d8"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "m-j8sAKKqxxtcOt4YS8Sx",
              "ctx": null,
              "_testId": "urn:uuid:7cb39418-f3a3-4a05-9182-9de73f400835",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "m-j8sAKKqxxtcOt4YS8Sx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "m-j8sAKKqxxtcOt4YS8Sx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d9c12bef-afd6-4f6f-a0ef-c2f3fda749f4"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UU0DYxVr4nXbOvh-ZX2wE",
              "ctx": null,
              "_testId": "urn:uuid:509471a5-fe34-4162-a328-00af1b80f48d",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "UU0DYxVr4nXbOvh-ZX2wE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "UU0DYxVr4nXbOvh-ZX2wE",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:e81dc47e-623b-4ff9-be55-cdd667d35353"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "q2I6u9TYa7-qTEizio5lR",
              "ctx": null,
              "_testId": "urn:uuid:46f42ba7-2950-4541-be0a-38b78a37991d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "q2I6u9TYa7-qTEizio5lR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "q2I6u9TYa7-qTEizio5lR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:8f58ede8-df4d-40c3-9882-d49fdba1f7d1"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "iFczKkj3GEdl19qFnCQrR",
              "ctx": null,
              "_testId": "urn:uuid:277dd8c7-da83-47b6-b083-e8d244b8cb3e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iFczKkj3GEdl19qFnCQrR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iFczKkj3GEdl19qFnCQrR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:30a300e0-4794-49fe-97dc-f12d1c868bc8"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZmByBg2bd2FvScwwc7G1c",
              "ctx": null,
              "_testId": "urn:uuid:a198a60f-26da-4437-b0d5-90ad38aebd0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZmByBg2bd2FvScwwc7G1c",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ZmByBg2bd2FvScwwc7G1c",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b6e41173-f1f7-4604-962a-f3bba5a6453b"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mYz9ymNgZpNzyt50r08hK",
              "ctx": null,
              "_testId": "urn:uuid:de20347c-3d89-491c-84e9-6ef017d89f05",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mYz9ymNgZpNzyt50r08hK",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mYz9ymNgZpNzyt50r08hK",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CIwtNcWPRhqKutuHUV9kp",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:ac315c83-64b3-4eff-bb0a-9fa54727cc97"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:d73c37c7-a330-4352-b50a-cc122cce97e0",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
          "cells": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "QXLunkPdFjFfAtWvuNomn",
              "ctx": null,
              "_testId": "urn:uuid:ca76a19e-d1b3-4fea-a94f-dfaf4468c2af",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "m-j8sAKKqxxtcOt4YS8Sx",
              "ctx": null,
              "_testId": "urn:uuid:7cb39418-f3a3-4a05-9182-9de73f400835",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "UU0DYxVr4nXbOvh-ZX2wE",
              "ctx": null,
              "_testId": "urn:uuid:509471a5-fe34-4162-a328-00af1b80f48d",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "q2I6u9TYa7-qTEizio5lR",
              "ctx": null,
              "_testId": "urn:uuid:46f42ba7-2950-4541-be0a-38b78a37991d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "iFczKkj3GEdl19qFnCQrR",
              "ctx": null,
              "_testId": "urn:uuid:277dd8c7-da83-47b6-b083-e8d244b8cb3e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ZmByBg2bd2FvScwwc7G1c",
              "ctx": null,
              "_testId": "urn:uuid:a198a60f-26da-4437-b0d5-90ad38aebd0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mYz9ymNgZpNzyt50r08hK",
              "ctx": null,
              "_testId": "urn:uuid:de20347c-3d89-491c-84e9-6ef017d89f05",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57712,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "BitstringStatusList (interop)",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        }
      ],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 57712,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 510,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 58222,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 397,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 58619,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 113,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 58732,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 641,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 59374,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 120,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 59494,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 26,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "-E0DB_8Q7lUG6nCSVfEM0",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 59519,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 234,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "oxnZoFInGGWM_J6VoYf89",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:0fad86a0-bcb4-42d8-873f-96372d358825",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "apicatalog.com",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:b1b73de3-9f7c-49ee-ae99-2709ce2255c5",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59754,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:12207da6-45c0-4a28-9049-8a7e7d1f60dc",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59857,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half",
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}},\"options\":{\"checks\":[\"proof\"]}}"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc2.veresverifier.dev/verifiers/z19w7KofwvE2nkJeRVLp8NDxz/credentials/verify",
                  "status": 400,
                  "data": {
                    "name": "ValidationError",
                    "message": "A validation error occurred in the 'Verify Credential Body' validator.",
                    "details": {
                      "errors": [
                        {
                          "name": "ValidationError",
                          "message": "should be array",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-22T05:04:48Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "type": "array"
                            },
                            "path": ".verifiableCredential['@context']",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/0/properties/%40context/type",
                            "schema": {
                              "description": "",
                              "title": ""
                            },
                            "value": "https://www.w3.org/ns/credentials/v2"
                          },
                          "cause": null,
                          "stack": "ValidationError: should be array\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should NOT have additional properties",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-22T05:04:48Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "additionalProperty": "credentialSubject"
                            },
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/1/additionalProperties",
                            "schema": {
                              "description": "",
                              "title": "Enveloped Verifiable Credential"
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2024-12-22T05:04:48Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should NOT have additional properties\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should match some schema in anyOf",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2024-12-22T05:04:48Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {},
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf",
                            "schema": {
                              "description": "",
                              "title": {
                                "title": "Verifiable Credential",
                                "type": "object",
                                "required": [
                                  "@context",
                                  "credentialSubject",
                                  "issuer",
                                  "type"
                                ],
                                "additionalProperties": true,
                                "properties": {
                                  "@context": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "oneOf": [
                                          {
                                            "const": "https://www.w3.org/2018/credentials/v1"
                                          },
                                          {
                                            "const": "https://www.w3.org/ns/credentials/v2"
                                          }
                                        ]
                                      }
                                    ],
                                    "additionalItems": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "credentialSubject": {
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "issuer": {
                                    "title": "identifier or an object with an id",
                                    "anyOf": [
                                      {
                                        "title": "ID",
                                        "description": "A unique identifier.",
                                        "type": "string",
                                        "minLength": 1,
                                        "disallow": {
                                          "type": "string",
                                          "enum": [
                                            "0"
                                          ]
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "id"
                                        ],
                                        "additionalProperties": true,
                                        "properties": {
                                          "id": {
                                            "title": "ID",
                                            "description": "A unique identifier.",
                                            "type": "string",
                                            "minLength": 1,
                                            "disallow": {
                                              "type": "string",
                                              "enum": [
                                                "0"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "type": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "const": "VerifiableCredential"
                                      }
                                    ],
                                    "additionalItems": {
                                      "type": "string"
                                    }
                                  },
                                  "proof": {
                                    "title": "Proof",
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2024-12-22T05:04:48Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should match some schema in anyOf\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        }
                      ],
                      "httpStatusCode": 400
                    },
                    "cause": null,
                    "stack": "ValidationError: A validation error occurred in the 'Verify Credential Body' validator.\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:246:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)",
                    "type": "ValidationError"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Gen Digital should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:2d254577-36b7-4f82-a4ad-726ca5e786a6",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59914,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "code": "invalid-value",
                    "incorrectValue": "credential",
                    "message": "invalid-value[credential]: verifiable credential is not valid:\n- @context: Invalid type. Expected: array, given: string\n"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:e9a806bf-f23f-44dd-a66e-70c67fe92e19",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:6a67535c-0237-45ce-bc6c-d902f5402d51",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60025,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:53390fea-a310-43df-a88f-ce577702ebf9",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:0aa98d5d-0491-4999-80ba-1b7ffeda95eb",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60150,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 216,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:48Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:48609959-c7dc-46a3-a29b-57da571dacbe",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:48Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z565eTfXWMjuoqUQu8jZ2MZQyweGJmTwCHCaEXZfJ3kwQQeDc2AU2x6sRRW5sUMmhcsjk85aJHN4ZCX7FMHiHJsSD"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "\"https://www.w3.org/2018/credentials/v1\" or \"https://www.w3.org/ns/credentials/v2\" needs to be first in the list of contexts."
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:ed35725f-ee4d-4760-9815-4dfb545b05de",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60366,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "96066",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "96066",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:8446949d-2d35-4aa6-be61-589d4ccb9ff5",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60411,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:856b7cfa-1ee9-4657-98c3-34671b0ca5df",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60475,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 36,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "96066",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "96066",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "code": "invalid-value",
                    "incorrectValue": "credential",
                    "message": "invalid-value[credential]: fill credential status from raw: should be json object but got [map[id:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066 statusListCredential:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV statusListIndex:96066 statusPurpose:revocation type:BitstringStatusListEntry] map[id:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066 statusListCredential:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R statusListIndex:96066 statusPurpose:suspension type:BitstringStatusListEntry]]"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:00348bc8-8d53-4f28-a83a-b5c612098c87",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60511,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "96066",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "96066",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:1cace5b9-6c5f-47ef-b9fc-b38e091b8eb4",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60583,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"96066\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a76a51f1-2a86-41e9-9f06-d513dfc6a5a7",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "96066",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#96066",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "96066",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5oz2otiKAhnK7EXYRqhsvR4XifE8DcnVw9AxBnerKLA3c4naC681rPMwyJAdhz2qMPLazs8DHr9St1vwaqbWoudT"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:07990787-fe2a-46e2-b09b-e4654182e77c",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:94d71537-ce54-488b-92b3-9a233265d073",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60714,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1002,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Gen Digital",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:464cc855-8b5a-48a5-ad6b-0b6c011b47c7",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61717,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e\",\"statusListIndex\":\"8039\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-22T05:04:49Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e",
                          "statusListIndex": "8039",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-22T05:04:49Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:bf0bd8a8-e080-4759-b5b4-6fa76ef20398",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 829,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:cea5ddfd-7446-4d7f-8bcf-b8a01591446e",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "OpSecId should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:6bb8a6e7-117b-4bc2-ac79-a15417d6ce7c",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62899,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e\",\"statusListIndex\":\"8039\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-22T05:04:49Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e",
                          "statusListIndex": "8039",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-22T05:04:49Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:074ffa83-9327-423c-b3a7-ca2094af314e",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62966,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e\",\"statusListIndex\":\"8039\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-22T05:04:49Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e",
                          "statusListIndex": "8039",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-22T05:04:49Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:7ab1737a-0a0d-4d7b-a8a3-e6ec031b7040",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63065,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 142,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e\",\"statusListIndex\":\"8039\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-22T05:04:49Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e",
                          "statusListIndex": "8039",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-22T05:04:49Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:5be147a6-e622-4d9a-bbe0-9970a5f9d4ff",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63208,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 225,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e\",\"statusListIndex\":\"8039\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2024-12-22T05:04:49Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:27f6f91c-ff17-4a01-adcf-6cf0a9eac62b",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/27a034e2-ffc3-43a2-8922-30939b18301e",
                          "statusListIndex": "8039",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:b85587f7-7aa6-4908-96cc-1c6c5aa3c2fd",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2024-12-22T05:04:49Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2BPjL9p6L4heyJDogWzAXbVbDes1gyddZte4zWKE1R8oUKq8snkXQXfNDfADt4orjQ7yLW6cmkWBGeB4f4aqNmcwiuVhc2WDAxjFbexZ1yHc8yjhDDoDkqSn16krbbKXae5w",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "invalid proof"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "OpSecId",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:4e51a628-3760-44d6-97f8-729a06f6c050",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63434,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 221,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"82981\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "82981",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:6d659860-e010-4456-8015-b1f41b2c36c3",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 48,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:b04ffada-f460-40ab-bd55-b2d6e1f14029",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63703,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10005,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:90474b7e-141a-41bd-8a13-47e09e3bf72c",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73711,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 219,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:c5de8477-a270-4e85-a609-835ab6196a8e",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73929,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 373,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"82981\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju\"}]},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "82981",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju"
                          }
                        ]
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:18ba2f47-99ec-4f4d-a385-9386e33a588b",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74303,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"82981\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "82981",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:a4492f0f-a837-41da-abe3-07b16e0d14de",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74350,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 888,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"82981\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:8a3e73f2-03be-40e2-bfef-66088f3dc063",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#82981",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "82981",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z5UkQZ8kzzJVFMSKigT6CeEgs2Vdpf56Lbn8x4UtppaAzCdv51XVgE2YzSFByryzevcnUfkmATik7WsBE4H8Jjbju"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "unsupported cryptosuite"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:017a94e0-bee7-42fe-b7eb-a813ff18b6d8",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75237,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:50.515164063Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50.515171802Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:50.515164063Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50.515171802Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:d389617d-cad7-40e4-b906-7f22740c3bec",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:013e6134-1465-422e-bde4-e501d02e91e5",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75393,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10002,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:d7f41f02-91cd-4f17-8ba0-82c6d59e1ed8",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 146,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:50.515164063Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50.515171802Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:50.515164063Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50.515171802Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:bb1bfce8-ed0a-48ee-875f-fc29daea4ca2",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85542,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 325,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2024-12-22T05:04:50.515164063Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50.515171802Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:7677bd3d-269d-4695-b98e-1297e7a5b128",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2024-12-22T05:04:50.515164063Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:3aad1b3e-7406-4c6e-a000-d79e97a396cc",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50.515171802Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zxqnjvpWm2HTagmBJ5W7Dvchox8EAwHg7LWE1xHiiwQ4pjEGoiYWCVVxv5atPaab4qarUvKQcH9qUyS9iCB3mZPG"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:be6f2a0c-ccbe-465e-9f13-47b649386691",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85867,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Trential should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:70f28a0f-a811-4c38-802d-30558b21fd09",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85918,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1200,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "SpruceID",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:fd490416-3f89-446a-9a50-5857dd78871d",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:7e0c076a-37c3-48d2-8bf9-a9351dabfdb9",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87180,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 193,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:df444be7-2df9-48a0-a03f-292f911009ce",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87374,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10002,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:26bf8423-917d-4364-ad57-5580ccf0dbf9",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97378,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 230,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:35d91acb-92df-4719-bdc5-bab7b35212e9",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 298,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7257bf51-0080-4425-83ac-7960fc4e074f",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7257bf51%2D0080%2D4425%2D83ac%2D7960fc4e074f",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zSQtZz2QBRiV687Hh461eKXCxP4Kybo1cb7Sb78H1dJ6NafpEhEoyZ9ZVBEA86YFGn48VUZuhUTxiWRdSNVFnHMY"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:db343580-dcda-4809-ae8c-6adbf6d81786",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97908,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Trential should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:a79ab0a7-9086-4cdc-9d06-855f0c38b01e",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97971,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1896,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Trential",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:308c42b0-a001-407b-96b8-e34eca4b760b",
              "cell": {
                "rowId": "Trential",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 99868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:b71eb862-4292-4cbd-bbd2-1d0277e435f9",
              "cell": {
                "rowId": "Trential",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 99954,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:588b89b0-a570-4338-92a5-44ac8a7eae0f",
              "cell": {
                "rowId": "Trential",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100169,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "code": "invalid-value",
                    "incorrectValue": "credential",
                    "message": "invalid-value[credential]: fill credential status from raw: should be json object but got [map[statusListCredential:https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0 statusListIndex:111 statusPurpose:revocation type:BitstringStatusListEntry] map[statusListCredential:https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0 statusListIndex:111 statusPurpose:suspension type:BitstringStatusListEntry]]"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:a66fb6ba-b6d6-46e8-9966-ee0ac3ba0999",
              "cell": {
                "rowId": "Trential",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:a7803221-1f10-459d-8174-e773c744ebc3",
              "cell": {
                "rowId": "Trential",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100284,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"111\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-12-22T05:04:50Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:758ceee6-fa1a-401a-b5e6-fc4e9012f547",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "111",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-12-22T05:04:50Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2ezqGdER8vLEw1VtpKarGFsVWacqJ5aYP8P8doacyeigPaxKzaQQdRncf7T27HsQtwX55UHMaoSgja2VkRKQH5mS"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:e58c09a2-1464-4cbe-80f9-064432a1ef88",
              "cell": {
                "rowId": "Trential",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "-E0DB_8Q7lUG6nCSVfEM0",
              "ctx": null,
              "_testId": "urn:uuid:6c38cff5-23a5-4615-a7ac-a782d6fff816",
              "cell": {
                "rowId": "Trential",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100417,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1047,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "At Risk",
      "rowLabel": "Statement",
      "columnLabel": "Reason",
      "columns": [
        "At least 2 passing implementations"
      ],
      "rows": [
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "state": "failed"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "group": "vc",
    "specStatus": "base",
    "shortName": "vc-bitstring-status-list-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c/vc-bitstring-status-list-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-bitstring-status-list-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "authors": [
      {
        "name": "Patrick St. Louis",
        "url": "https://github.com/PatStLouis",
        "company": "OpSecId",
        "companyURL": "https://github.com/OpSecId"
      },
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC Bitstring Status List Interoperability Report 1.0",
  "stats": [],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}