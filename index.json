{
  "matrices": [
    {
      "title": "Data Model: BitstringStatusList Entry",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "fsLovg2q_YpDT6sj0LiSA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 364,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10036,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:318b23e0-5444-4682-870c-83357b8091f0"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:9c38d354-9194-4bb1-b6a2-0e96a85fe121",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12393,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:584af801-f07d-49e5-a3b7-13154094eee5",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12394,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:08058d60-788e-4372-8207-46f2365aaf91",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12395,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:dc17761f-c1dc-4148-9646-b97eaeccd66e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:cf6ffce1-db23-42c6-8aff-9a8aac634de1",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:258762f3-e428-4358-8c1c-9045f9842215",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12397,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1016,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:3dd84c84-df9d-4c87-ac20-d2e6d382e3ce",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13413,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:0de54727-14cc-450b-a1c0-ea3f925cada7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:70b03883-055b-4a1a-9922-b4bbbe0dd48e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:a7cc5df1-337e-4526-ad56-f469c0826b13",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:c008261e-52bb-4577-a0f3-9aa83d293f76",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:69a646c9-ef38-4e19-8c3d-36292cea873e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:81a4c781-75cc-4e96-91e8-51086a86e346",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:0397b28e-6d6e-491e-a25c-a4e4e4f27c2a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1990,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:242aaad5-09fc-4eed-819b-ba86671d3e9b"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:551517fc-95b5-4140-9712-f44c59c944cc",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:30a5465a-6e2e-4ae5-82cf-b8edec5b4bd1",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:8df2877e-edf9-45e4-b54e-1f6ce79455c4",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:d2b2b2a5-90be-419d-9ea4-9e83bc8bec01",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:283de928-69d7-4f01-9b29-5244db59770e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:662eae32-a1e1-4c4c-9625-30a17ca8e2de",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 211,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:1aa46a95-402a-4add-881f-9876073b0a56",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:10bad50f-8d3b-44e0-849b-a85bcbe788a9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:02e195ca-9f9f-4797-9f18-c6c46d612d08",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:bd6b52e7-ea50-4ab2-8ffb-bbd65589226f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:04156990-eefc-4de0-a3c8-69ce3e29d622",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:1954eabc-01bb-4779-b709-5a8429691bd5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:644ec1e2-235f-4608-8816-864f42dba514",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:5ce8f53a-afbe-4d34-a42d-17900efd0c00",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1874,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:8153acfd-2e24-4fee-b850-8dcf34876e60"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:1743394a-36e6-4616-b5e2-f013d1fd0dec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:e6f244af-da05-44a1-bbbb-be6da5be1f13",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:d4fff0b4-e0f7-4fa6-aac1-b881cecd3b7e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:4eca477d-9cf3-4bc0-b558-73de643b756e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:4fd5b22f-f6d2-40e0-8398-835ce607d3fe",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:0f7846e1-c8ac-4bdb-a3e4-8d83d61ccd83",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 255,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:9e80d322-db2b-445d-8ec3-508fe3b9e765",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:8d362fc7-cd60-4f93-b411-f9150e1ec4ae",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:a0b71205-a96d-4c83-9f1a-4708bdeb435d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:513cb62f-231f-4c98-b250-5174073a2833",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:726c8401-0995-45ac-8b31-d9faea350475",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:ec51437d-0e42-454f-93ca-d726d44cd0dc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:bc0bb762-effb-445f-9273-2c9ee9f26f52",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:484eaafd-b720-40a4-8c31-df40be1f925f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 552,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:13cc80fa-8ca0-42e0-b75e-9a376727afca"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:b19f4cf3-dbf5-4b2f-8b09-27878ebea28b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17033,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:dc3f596f-4601-473b-a3bb-5c98f10913ec",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17034,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:1befc5f0-b838-4c53-a469-7b21faf73ed0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:78a06e42-dac5-4558-82d1-f572a5cdddd5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:f0081dfc-9503-4cb1-8a11-3e48a78e5360",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:f4ea30c2-05ba-4362-8364-2eb2243cb234",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 419,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:bb632337-ab3f-4f29-980a-91bafd2a6597",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17455,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:3d0b8bb5-1b14-4e5d-9441-b91373367de8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:cca2fb9b-d084-4c3c-9bdc-b1381e5c60b6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:b34d0957-8815-43d4-92ff-373006bfd7b0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:4ff1c8da-6a72-42dc-957a-e5df3b5f033b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:ca3d591c-da4d-4236-9050-01b3f384da94",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:29b3fe26-6160-4035-9b27-e95489bc8448",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:91213074-92ab-44de-9ad4-803f7955cb10",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16524,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 509,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:4cfa3cbe-2d02-408a-ace8-d296e15e0684"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:be86c0d5-5276-454b-9fe0-2dffaf59dd39",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:882776c6-276e-4071-bd1d-c15a3eb604c1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:0454743b-2cff-4c34-909e-c0fd6a76d715",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:09b6a1a7-f3eb-4dd6-869e-b94b09c98ddf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:a3d0c852-8d8a-483d-b979-bd72a0def557",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17655,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:edb574e3-392d-4573-a3db-892286823ae6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17655,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:90bfa72c-1c8f-4d71-a4f7-9921087bb5be",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:eb036f6a-e5dc-4c46-990c-ffdc524add2d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17775,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:0cc40672-9735-466d-b6c9-6592ed97bf32",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17775,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:abb6cc60-b489-41f4-ac45-e48f6c3415da",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:2cfaaa48-b2a6-4baa-82e8-4730567d45d9",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:dc9bd75f-dc25-4e09-8a95-50e1d6f3c77d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:27b66613-715d-4986-9c93-5f81cd03a683",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:bd972ff2-3352-4ecd-8791-c505f008fede",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17553,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:691568ce-54b0-47e1-94f7-aef35746f81b"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:b1fb143e-e84d-4b13-bbbd-d324f8157a4a",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:d7073020-5a50-4424-8d8e-85e06b61aa0b",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:c9613118-3ba1-4622-a357-c669f99a7056",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:4b58a65c-6839-412d-9c6d-09e2e67573e2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:db5adcfc-8503-49c8-bc66-4c31b2c7c86e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:d5d28f10-41cb-4f0b-8dc8-efd2632b1054",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2973,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:c79d9955-eb8b-4876-b251-be181225d877",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21770,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2797,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:df8cb1fd-e51d-45f3-aa2c-1eb74ffe7ca3",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:08166077-786e-414c-b406-958ea562843f",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:cd23da3c-807d-440b-8540-edbb3aadd9f0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:b13d8a59-02de-4af1-b07f-b9dd48ab3f3c",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:1e9a49f7-b8cd-443a-af0c-50576596a76b",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:7e142897-d9c1-4ce8-a23e-5e27d000bb6e",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:5423e4e9-223a-4ef6-be7a-b3c7f6b4dc9a",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1018,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JUMkqxR_DFsmZ2AgO2kbT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:776d25a1-520e-497d-a702-7952338af13b"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:ac05d02b-65a6-428c-950f-377f8bb448f8",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
          "cells": [
            {
              "cell": {
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:9c38d354-9194-4bb1-b6a2-0e96a85fe121",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12393,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:551517fc-95b5-4140-9712-f44c59c944cc",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:1743394a-36e6-4616-b5e2-f013d1fd0dec",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:b19f4cf3-dbf5-4b2f-8b09-27878ebea28b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17033,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:be86c0d5-5276-454b-9fe0-2dffaf59dd39",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:b1fb143e-e84d-4b13-bbbd-d324f8157a4a",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
          "cells": [
            {
              "cell": {
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:584af801-f07d-49e5-a3b7-13154094eee5",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12394,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:30a5465a-6e2e-4ae5-82cf-b8edec5b4bd1",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:e6f244af-da05-44a1-bbbb-be6da5be1f13",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:dc3f596f-4601-473b-a3bb-5c98f10913ec",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17034,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:882776c6-276e-4071-bd1d-c15a3eb604c1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:d7073020-5a50-4424-8d8e-85e06b61aa0b",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            }
          ]
        },
        {
          "id": "The type property MUST be BitstringStatusListEntry. ",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
          "cells": [
            {
              "cell": {
                "rowId": "The type property MUST be BitstringStatusListEntry. ",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:08058d60-788e-4372-8207-46f2365aaf91",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12395,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:8df2877e-edf9-45e4-b54e-1f6ce79455c4",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:d4fff0b4-e0f7-4fa6-aac1-b881cecd3b7e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:1befc5f0-b838-4c53-a469-7b21faf73ed0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:0454743b-2cff-4c34-909e-c0fd6a76d715",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:c9613118-3ba1-4622-a357-c669f99a7056",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The purpose of the status entry MUST be a string.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
          "cells": [
            {
              "cell": {
                "rowId": "The purpose of the status entry MUST be a string.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:dc17761f-c1dc-4148-9646-b97eaeccd66e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:d2b2b2a5-90be-419d-9ea4-9e83bc8bec01",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:4eca477d-9cf3-4bc0-b558-73de643b756e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16200,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:78a06e42-dac5-4558-82d1-f572a5cdddd5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:09b6a1a7-f3eb-4dd6-869e-b94b09c98ddf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:4b58a65c-6839-412d-9c6d-09e2e67573e2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
          "cells": [
            {
              "cell": {
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:cf6ffce1-db23-42c6-8aff-9a8aac634de1",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12396,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:283de928-69d7-4f01-9b29-5244db59770e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:4fd5b22f-f6d2-40e0-8398-835ce607d3fe",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:f0081dfc-9503-4cb1-8a11-3e48a78e5360",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:a3d0c852-8d8a-483d-b979-bd72a0def557",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17655,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:db5adcfc-8503-49c8-bc66-4c31b2c7c86e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListCredential property MUST be a URL to a verifiable credential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
          "cells": [
            {
              "cell": {
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:258762f3-e428-4358-8c1c-9045f9842215",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12397,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1016,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:662eae32-a1e1-4c4c-9625-30a17ca8e2de",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 211,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:0f7846e1-c8ac-4bdb-a3e4-8d83d61ccd83",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 255,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:f4ea30c2-05ba-4362-8364-2eb2243cb234",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 419,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:edb574e3-392d-4573-a3db-892286823ae6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17655,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:d5d28f10-41cb-4f0b-8dc8-efd2632b1054",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2973,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "cell": {
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:3dd84c84-df9d-4c87-ac20-d2e6d382e3ce",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13413,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:1aa46a95-402a-4add-881f-9876073b0a56",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:9e80d322-db2b-445d-8ec3-508fe3b9e765",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "failed",
              "err": {}
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:bb632337-ab3f-4f29-980a-91bafd2a6597",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17455,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:90bfa72c-1c8f-4d71-a4f7-9921087bb5be",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 32,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:c79d9955-eb8b-4876-b251-be181225d877",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21770,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2797,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "cell": {
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:0de54727-14cc-450b-a1c0-ea3f925cada7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:10bad50f-8d3b-44e0-849b-a85bcbe788a9",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:8d362fc7-cd60-4f93-b411-f9150e1ec4ae",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:3d0b8bb5-1b14-4e5d-9441-b91373367de8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:eb036f6a-e5dc-4c46-990c-ffdc524add2d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17775,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:df8cb1fd-e51d-45f3-aa2c-1eb74ffe7ca3",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "cell": {
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:70b03883-055b-4a1a-9922-b4bbbe0dd48e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:02e195ca-9f9f-4797-9f18-c6c46d612d08",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:a0b71205-a96d-4c83-9f1a-4708bdeb435d",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:cca2fb9b-d084-4c3c-9bdc-b1381e5c60b6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:0cc40672-9735-466d-b6c9-6592ed97bf32",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17775,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:08166077-786e-414c-b406-958ea562843f",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "cell": {
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:a7cc5df1-337e-4526-ad56-f469c0826b13",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:bd6b52e7-ea50-4ab2-8ffb-bbd65589226f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:513cb62f-231f-4c98-b250-5174073a2833",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:b34d0957-8815-43d4-92ff-373006bfd7b0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:abb6cc60-b489-41f4-ac45-e48f6c3415da",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:cd23da3c-807d-440b-8540-edbb3aadd9f0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "cell": {
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:c008261e-52bb-4577-a0f3-9aa83d293f76",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:04156990-eefc-4de0-a3c8-69ce3e29d622",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:726c8401-0995-45ac-8b31-d9faea350475",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:4ff1c8da-6a72-42dc-957a-e5df3b5f033b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:2cfaaa48-b2a6-4baa-82e8-4730567d45d9",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:b13d8a59-02de-4af1-b07f-b9dd48ab3f3c",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "cell": {
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:69a646c9-ef38-4e19-8c3d-36292cea873e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:1954eabc-01bb-4779-b709-5a8429691bd5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:ec51437d-0e42-454f-93ca-d726d44cd0dc",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:ca3d591c-da4d-4236-9050-01b3f384da94",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:dc9bd75f-dc25-4e09-8a95-50e1d6f3c77d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:1e9a49f7-b8cd-443a-af0c-50576596a76b",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "cell": {
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:81a4c781-75cc-4e96-91e8-51086a86e346",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:644ec1e2-235f-4608-8816-864f42dba514",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:bc0bb762-effb-445f-9273-2c9ee9f26f52",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:29b3fe26-6160-4035-9b27-e95489bc8448",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:27b66613-715d-4986-9c93-5f81cd03a683",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:7e142897-d9c1-4ce8-a23e-5e27d000bb6e",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "cell": {
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "colId": "apicatalog.com"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "7MmqS8_3Sa_9nzelslBZT",
              "ctx": null,
              "_testId": "urn:uuid:0397b28e-6d6e-491e-a25c-a4e4e4f27c2a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x0DZLzwqv36rF1ykR3MzF",
              "ctx": null,
              "_testId": "urn:uuid:5ce8f53a-afbe-4d34-a42d-17900efd0c00",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "wDnqofoMw_fu0G42nHyrk",
              "ctx": null,
              "_testId": "urn:uuid:484eaafd-b720-40a4-8c31-df40be1f925f",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16523,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "u8IoBh0Fub_wg5bOVD6f-",
              "ctx": null,
              "_testId": "urn:uuid:91213074-92ab-44de-9ad4-803f7955cb10",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "zlb_0V2L7iMroQ5UrL1kx",
              "ctx": null,
              "_testId": "urn:uuid:bd972ff2-3352-4ecd-8791-c505f008fede",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17776,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "_3qysuHkPhZMQJW7sVgY_",
              "ctx": null,
              "_testId": "urn:uuid:5423e4e9-223a-4ef6-be7a-b3c7f6b4dc9a",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Data Model: BitstringStatusList Credential",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:42720966-6815-438a-b2b4-f22b01f315a7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testSlCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:45:43)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:341:11)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:2e356c84-6135-4dc6-a3ee-a5021e069d23",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:a0ca219d-8d27-45fb-a301-8ac8519aefc6",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:93024100-d52d-468f-b430-be35d0f9bf78",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:db6cb422-8e71-411a-bf84-dab98ea8d394",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:9ae3c67e-77bf-43b8-b737-16e8ef9dc132",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1993,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:ec7d17fe-1205-492b-aad9-59c09c63c26f"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:e774214b-549e-4dd0-8bb2-7a4450752512",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:73c39188-78e9-413d-ad56-cbf66eeaa449",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:fb15dbde-f8f4-4f3e-b826-8586eeecc5dd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:43ab801c-cfcb-451c-975e-01617bcb136b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27267,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:a3a44dd9-a89f-4980-a20f-d8fc32562a17",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27269,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:2586c385-4e2e-44ec-96c8-8c533ef6da31",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27270,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 695,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:1d813ede-8374-4032-925a-67c88203a053"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:34cf08c8-957b-4d52-823f-aae01177523f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:456dec90-c912-4576-9da0-39e17c9cb3d6",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:2b725d3e-0e05-4c44-a962-9dc56079ab3a",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:80646f06-3b1c-4f27-bc76-bf87d57204fd",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:5c734e7f-49d6-46d9-8146-d7d4000c5feb",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27739,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:476d4e5b-2dd2-4862-82bc-f0e3c40413b5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27739,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27271,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 464,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:50d5360c-0806-412d-b519-0b9fa93f4d24"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "YSMZdKM5UY6MB__l7Qk8b",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27739,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 447,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:015be577-8f3d-48d9-b5ca-4cfeb9194098"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:7b2cc5c2-dfa3-4ea0-82f9-c3a2e807e6d4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:58563723-76bf-44ce-967d-5c4eaf58b618",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:ce9c770f-2afa-4763-b56e-336bb311a1e0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29164,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:444a4cf0-199d-4aa2-aa3d-01b309e58a6e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29164,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:73fbb879-1d08-4cb4-b063-f88549ab6f14",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:f4d3ffa5-59bc-492e-ae5f-eb1fbb3b061a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28188,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 975,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:a381c4d0-e93d-4f6f-bf93-0b43ab7f8dc7"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:ebca5277-0120-4c63-b386-83fa4410c7b4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:693481c6-85dd-4921-bd12-c01e120b0269",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:18a09e6b-276b-4076-8396-eeec0b65903b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:d2160b09-837d-48e6-943b-2f6563163fb1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:3b6a1d0c-8eaf-4d8f-87d2-ba7b9ba4b963",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:19d65fd3-20ba-445c-b69b-6e53b04560ad",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29328,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29166,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:3f58142c-99ab-4872-855d-3719494ab463"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:4e687c6f-2f2f-4bc0-b124-b71a0bfd7257",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33156,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:bf78d47f-ce13-4163-a6d4-dd79fc7464d9",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:11b21e19-b14d-40dc-b465-8228a281a3a7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:597f12ea-06fb-4627-89dc-37914ab6ee2d",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:7622038e-3ed7-4a72-b000-1e5715fbc6e5",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:1c3447c4-5c51-4302-80d5-92dd4f2f337f",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33159,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29328,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3826,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "CM4pP0AfVW3GfmvWCNBsT",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:beebe2c8-ea3e-4a76-b0d4-3b03fa9ed0a2"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:870b261e-3973-4df8-a711-e7ed0d097654",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
          "cells": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:42720966-6815-438a-b2b4-f22b01f315a7",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testSlCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:45:43)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js:341:11)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:e774214b-549e-4dd0-8bb2-7a4450752512",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:34cf08c8-957b-4d52-823f-aae01177523f",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:7b2cc5c2-dfa3-4ea0-82f9-c3a2e807e6d4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:ebca5277-0120-4c63-b386-83fa4410c7b4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:4e687c6f-2f2f-4bc0-b124-b71a0bfd7257",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33156,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:2e356c84-6135-4dc6-a3ee-a5021e069d23",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:73c39188-78e9-413d-ad56-cbf66eeaa449",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:456dec90-c912-4576-9da0-39e17c9cb3d6",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:58563723-76bf-44ce-967d-5c4eaf58b618",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:693481c6-85dd-4921-bd12-c01e120b0269",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:bf78d47f-ce13-4163-a6d4-dd79fc7464d9",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
          "cells": [
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:a0ca219d-8d27-45fb-a301-8ac8519aefc6",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:fb15dbde-f8f4-4f3e-b826-8586eeecc5dd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27266,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:2b725d3e-0e05-4c44-a962-9dc56079ab3a",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:ce9c770f-2afa-4763-b56e-336bb311a1e0",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29164,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:18a09e6b-276b-4076-8396-eeec0b65903b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:11b21e19-b14d-40dc-b465-8228a281a3a7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:93024100-d52d-468f-b430-be35d0f9bf78",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:43ab801c-cfcb-451c-975e-01617bcb136b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27267,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:80646f06-3b1c-4f27-bc76-bf87d57204fd",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27738,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:444a4cf0-199d-4aa2-aa3d-01b309e58a6e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29164,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:d2160b09-837d-48e6-943b-2f6563163fb1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:597f12ea-06fb-4627-89dc-37914ab6ee2d",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
          "cells": [
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:db6cb422-8e71-411a-bf84-dab98ea8d394",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:a3a44dd9-a89f-4980-a20f-d8fc32562a17",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27269,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:5c734e7f-49d6-46d9-8146-d7d4000c5feb",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27739,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:73fbb879-1d08-4cb4-b063-f88549ab6f14",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:3b6a1d0c-8eaf-4d8f-87d2-ba7b9ba4b963",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:7622038e-3ed7-4a72-b000-1e5715fbc6e5",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The uncompressed bitstring MUST be at least 16KB in size.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
          "cells": [
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x5WwvHIdHVQSGEOdFeliO",
              "ctx": null,
              "_testId": "urn:uuid:9ae3c67e-77bf-43b8-b737-16e8ef9dc132",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26569,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kIS0b-zZNc50-2Gq5L5rk",
              "ctx": null,
              "_testId": "urn:uuid:2586c385-4e2e-44ec-96c8-8c533ef6da31",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27270,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "R1RpQ7xY5gvnGd67Swo-X",
              "ctx": null,
              "_testId": "urn:uuid:476d4e5b-2dd2-4862-82bc-f0e3c40413b5",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27739,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "Hw6cBfAWmsdDdHUAFXZJd",
              "ctx": null,
              "_testId": "urn:uuid:f4d3ffa5-59bc-492e-ae5f-eb1fbb3b061a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "0gDXzNBieYtPpK7i_FgQG",
              "ctx": null,
              "_testId": "urn:uuid:19d65fd3-20ba-445c-b69b-6e53b04560ad",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29328,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "kenKkrviKJSUqH2SxyJPx",
              "ctx": null,
              "_testId": "urn:uuid:1c3447c4-5c51-4302-80d5-92dd4f2f337f",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33159,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "JSQMHiYc7elF8JL1IXgT7",
              "ctx": null,
              "_testId": "urn:uuid:d9e4f6f4-e90d-4f2e-8bbb-6b63bd2b1fa2",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 568,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "JSQMHiYc7elF8JL1IXgT7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "JSQMHiYc7elF8JL1IXgT7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:dd88bf6d-cc03-461f-9413-a6d0383ac4f9"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cobp3lSBNN_P2JER0WQaX",
              "ctx": null,
              "_testId": "urn:uuid:223a9b5b-fb69-4dd4-af46-2525dec28270",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33728,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1740,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cobp3lSBNN_P2JER0WQaX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cobp3lSBNN_P2JER0WQaX",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33728,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:6e615ac2-bd92-4790-8c87-d69ed853301b"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "0kUYTRIjoBJHskvM8jU0w",
              "ctx": null,
              "_testId": "urn:uuid:5b46eee9-95cb-483e-83cf-889b2a3cca5e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35468,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 189,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0kUYTRIjoBJHskvM8jU0w",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "0kUYTRIjoBJHskvM8jU0w",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35468,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:31f9515d-a380-4e4f-a485-d373569df9df"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "kJGM58xlSkCtAIW-I58Kv",
              "ctx": null,
              "_testId": "urn:uuid:de9a56ad-11f2-4017-9a4b-3c5dac20f207",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35658,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 229,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kJGM58xlSkCtAIW-I58Kv",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "kJGM58xlSkCtAIW-I58Kv",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35657,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:cfe14fb1-423e-4b42-8f2c-fd310f097524"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MyqmgCkGlkV99Ai3EDK-T",
              "ctx": null,
              "_testId": "urn:uuid:ca4140ad-97ba-4d9e-990a-f7dfc448f817",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 429,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MyqmgCkGlkV99Ai3EDK-T",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "MyqmgCkGlkV99Ai3EDK-T",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:1290164d-82c7-4fd9-ae92-dab68893da54"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "X57x6z3_oWfdakUO7J3GQ",
              "ctx": null,
              "_testId": "urn:uuid:bfca8b79-3269-4dc4-bd41-ad6d9d6391c8",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "X57x6z3_oWfdakUO7J3GQ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "X57x6z3_oWfdakUO7J3GQ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:863246be-733f-45c2-ac90-46ee9d0b732a"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "_4bhWqwjzci5Sr_hY3Mo9",
              "ctx": null,
              "_testId": "urn:uuid:dc044df7-4b26-4b2d-a327-2871754099d1",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36384,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 838,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_4bhWqwjzci5Sr_hY3Mo9",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_4bhWqwjzci5Sr_hY3Mo9",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36384,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ihSoqD5NpF_Ya_z2sGq-v",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:76d16bde-cb9e-4ce9-8c8b-d7c776f9fd33"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:dec13f42-b793-423e-9ded-b088738417c2",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "JSQMHiYc7elF8JL1IXgT7",
              "ctx": null,
              "_testId": "urn:uuid:d9e4f6f4-e90d-4f2e-8bbb-6b63bd2b1fa2",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 568,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cobp3lSBNN_P2JER0WQaX",
              "ctx": null,
              "_testId": "urn:uuid:223a9b5b-fb69-4dd4-af46-2525dec28270",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33728,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1740,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "0kUYTRIjoBJHskvM8jU0w",
              "ctx": null,
              "_testId": "urn:uuid:5b46eee9-95cb-483e-83cf-889b2a3cca5e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35468,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 189,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "kJGM58xlSkCtAIW-I58Kv",
              "ctx": null,
              "_testId": "urn:uuid:de9a56ad-11f2-4017-9a4b-3c5dac20f207",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35658,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 229,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "MyqmgCkGlkV99Ai3EDK-T",
              "ctx": null,
              "_testId": "urn:uuid:ca4140ad-97ba-4d9e-990a-f7dfc448f817",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 429,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "X57x6z3_oWfdakUO7J3GQ",
              "ctx": null,
              "_testId": "urn:uuid:bfca8b79-3269-4dc4-bd41-ad6d9d6391c8",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "_4bhWqwjzci5Sr_hY3Mo9",
              "ctx": null,
              "_testId": "urn:uuid:dc044df7-4b26-4b2d-a327-2871754099d1",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36384,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 838,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Generate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6HRvUtwXf3Z8HSabb84Dw",
              "ctx": null,
              "_testId": "urn:uuid:455f7d61-0efd-48c1-8309-c00909cdf3bd",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38798,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testSlCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:45:43)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js:74:11)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6HRvUtwXf3Z8HSabb84Dw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6HRvUtwXf3Z8HSabb84Dw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37223,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1574,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:a7a5c64a-5e76-4497-af7d-a26b1e311271"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6yhEs3lbVCI6dyytxPiDH",
              "ctx": null,
              "_testId": "urn:uuid:813752cd-d445-451f-9e02-7ecbd8ed706d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39354,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6yhEs3lbVCI6dyytxPiDH",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6yhEs3lbVCI6dyytxPiDH",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38799,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 554,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:02c04c9a-9547-4dec-b170-35fadd583c8a"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "1THQXCVCnMStPVWdLNTs_",
              "ctx": null,
              "_testId": "urn:uuid:16404b56-bf6d-4043-a5ad-e193764f735e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39759,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1THQXCVCnMStPVWdLNTs_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1THQXCVCnMStPVWdLNTs_",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39354,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 404,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:0070bda6-64e2-4e2d-ad11-d50163694c86"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "U8ZyEJXk1of5mbN3FOl9M",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "U8ZyEJXk1of5mbN3FOl9M",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "U8ZyEJXk1of5mbN3FOl9M",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39759,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 269,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:fc54b5af-8cfa-495e-b96e-63548173ec2d"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F0mUcfKqegtMT10LZhb1Q",
              "ctx": null,
              "_testId": "urn:uuid:4c038eb5-a03f-44e7-9822-8dc186537d81",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F0mUcfKqegtMT10LZhb1Q",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F0mUcfKqegtMT10LZhb1Q",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40029,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 610,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:6243d5d6-0ad8-467c-be1b-2e8a1f4f8ee5"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "tJb5rAnDCSzv27pd09YBy",
              "ctx": null,
              "_testId": "urn:uuid:a84b0d96-e794-406f-9881-25385e211991",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40726,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "tJb5rAnDCSzv27pd09YBy",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "tJb5rAnDCSzv27pd09YBy",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40641,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:6143b388-e7d3-4589-931d-becd6eed5de8"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Bk68a0J8ZO0VUf15d_Oc8",
              "ctx": null,
              "_testId": "urn:uuid:f5376ef7-8f77-48af-bcc6-f54a2cb15909",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43420,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Bk68a0J8ZO0VUf15d_Oc8",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Bk68a0J8ZO0VUf15d_Oc8",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40726,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2693,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "NkNI5vHIShLjYqRnV8BS4",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:67fbcf6d-0b04-4e07-ae0c-379bc0d65664"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:44499567-0549-4e86-834b-49484d1549ff",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6HRvUtwXf3Z8HSabb84Dw",
              "ctx": null,
              "_testId": "urn:uuid:455f7d61-0efd-48c1-8309-c00909cdf3bd",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38798,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'https://www.w3.org/ns/credentials/v2' to be an array",
                "showDiff": false,
                "actual": "https://www.w3.org/ns/credentials/v2",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'https://www.w3.org/ns/credentials/v2' to be an array\n    at testSlCredential (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/assertions.js:45:43)\n    at Context.<anonymous> (file:///home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js:74:11)\n    at process.processImmediate (node:internal/timers:483:21)"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6yhEs3lbVCI6dyytxPiDH",
              "ctx": null,
              "_testId": "urn:uuid:813752cd-d445-451f-9e02-7ecbd8ed706d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39354,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "1THQXCVCnMStPVWdLNTs_",
              "ctx": null,
              "_testId": "urn:uuid:16404b56-bf6d-4043-a5ad-e193764f735e",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39759,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F0mUcfKqegtMT10LZhb1Q",
              "ctx": null,
              "_testId": "urn:uuid:4c038eb5-a03f-44e7-9822-8dc186537d81",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "tJb5rAnDCSzv27pd09YBy",
              "ctx": null,
              "_testId": "urn:uuid:a84b0d96-e794-406f-9881-25385e211991",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40726,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Bk68a0J8ZO0VUf15d_Oc8",
              "ctx": null,
              "_testId": "urn:uuid:f5376ef7-8f77-48af-bcc6-f54a2cb15909",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43420,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Validate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "-Rrcd6rx4Xntcxn4afjhB",
              "ctx": null,
              "_testId": "urn:uuid:cb4b7595-c73a-45ce-b5ab-4b653d6f87c9",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44628,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3096,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:bcb8c370-0ad6-4e9e-88b0-af663e37f34b\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/64304\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"64304\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:13Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"zG5kzPuhjwxic1GKmr6DFzwE5G71NWoiF56vKdTb7XTv8A73TFsGHCKGLoqr6Xp6B3BGAfRWn33US5jtUCfMhqk3\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:bcb8c370-0ad6-4e9e-88b0-af663e37f34b",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/64304",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "64304",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:13Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "zG5kzPuhjwxic1GKmr6DFzwE5G71NWoiF56vKdTb7XTv8A73TFsGHCKGLoqr6Xp6B3BGAfRWn33US5jtUCfMhqk3"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-Rrcd6rx4Xntcxn4afjhB",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "-Rrcd6rx4Xntcxn4afjhB",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1208,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:0bd99f31-471a-4df0-9d9a-ec81e35f53bf"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "T6FkmsiFF_mh5crBFh5jA",
              "ctx": null,
              "_testId": "urn:uuid:e2106dd4-e270-4069-9e22-5921c16c1b70",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48111,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 965,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "T6FkmsiFF_mh5crBFh5jA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "T6FkmsiFF_mh5crBFh5jA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47726,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 386,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:9b34944a-ab86-465e-af16-6f0d4a6494b5"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "S3mZ8vGjSmxrdsWeLvmmY",
              "ctx": null,
              "_testId": "urn:uuid:851e2420-dcab-44d6-bf01-7ca95e57bdf2",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 603,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "S3mZ8vGjSmxrdsWeLvmmY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "S3mZ8vGjSmxrdsWeLvmmY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49077,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 269,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:e5cf0bd1-9910-4fa4-95ad-e3c3a07186f9"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6hohcGNZqLYnyFTsTL8nT",
              "ctx": null,
              "_testId": "urn:uuid:3e1790f9-615a-4fbc-855c-6b150e721314",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6hohcGNZqLYnyFTsTL8nT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6hohcGNZqLYnyFTsTL8nT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 318,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d885ed39-f9a7-4387-a1a3-7da1ea4d9008"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "153drHLkpkrtANGbdc-mZ",
              "ctx": null,
              "_testId": "urn:uuid:5c30e737-1d9b-4be7-955f-a49330c1c92f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50865,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:e67ffb2a-1551-4af6-8553-eca785b3ae1e\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:20.738372817Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:95f6281c-abab-4bf6-a0d7-befdb9fd8bdd\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:20.738392587Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2x3La7SSUrWHtaFkaAks9vJrJsnFj1ywEWo2QxYtk7rQ1CNRifwb87D2bvohqK8Zf6Uc6rivdhGrU5HRtmy3126h\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:e67ffb2a-1551-4af6-8553-eca785b3ae1e",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:20.738372817Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:95f6281c-abab-4bf6-a0d7-befdb9fd8bdd",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:20.738392587Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2x3La7SSUrWHtaFkaAks9vJrJsnFj1ywEWo2QxYtk7rQ1CNRifwb87D2bvohqK8Zf6Uc6rivdhGrU5HRtmy3126h"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "153drHLkpkrtANGbdc-mZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "153drHLkpkrtANGbdc-mZ",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 528,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:158ba123-79c4-4022-bd4c-a59cdd9e36ed"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vLOMdtsDG6xR8rnVMsQwk",
              "ctx": null,
              "_testId": "urn:uuid:a6b4089c-e1f1-4b29-a090-38bbf1833a95",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vLOMdtsDG6xR8rnVMsQwk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "vLOMdtsDG6xR8rnVMsQwk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50960,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:cd410ada-e614-4156-8a02-b60d8aa7aade"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jT8uYMTGuIN1TtRcIitlU",
              "ctx": null,
              "_testId": "urn:uuid:01d323ec-47f8-4b5d-affd-b35f4d0d22c7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51893,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 581,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jT8uYMTGuIN1TtRcIitlU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jT8uYMTGuIN1TtRcIitlU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51060,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 833,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "mSHM5GjrDjhYGzoA5MfgO",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f9424061-31c9-4a7c-bb5d-bef8650d5a51"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:d84d6681-b2a8-42c1-820e-308c58cd7f5d",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "-Rrcd6rx4Xntcxn4afjhB",
              "ctx": null,
              "_testId": "urn:uuid:cb4b7595-c73a-45ce-b5ab-4b653d6f87c9",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44628,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3096,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:bcb8c370-0ad6-4e9e-88b0-af663e37f34b\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/64304\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"64304\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:13Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"zG5kzPuhjwxic1GKmr6DFzwE5G71NWoiF56vKdTb7XTv8A73TFsGHCKGLoqr6Xp6B3BGAfRWn33US5jtUCfMhqk3\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:bcb8c370-0ad6-4e9e-88b0-af663e37f34b",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/64304",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "64304",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:13Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "zG5kzPuhjwxic1GKmr6DFzwE5G71NWoiF56vKdTb7XTv8A73TFsGHCKGLoqr6Xp6B3BGAfRWn33US5jtUCfMhqk3"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "T6FkmsiFF_mh5crBFh5jA",
              "ctx": null,
              "_testId": "urn:uuid:e2106dd4-e270-4069-9e22-5921c16c1b70",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48111,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 965,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "S3mZ8vGjSmxrdsWeLvmmY",
              "ctx": null,
              "_testId": "urn:uuid:851e2420-dcab-44d6-bf01-7ca95e57bdf2",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 603,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6hohcGNZqLYnyFTsTL8nT",
              "ctx": null,
              "_testId": "urn:uuid:3e1790f9-615a-4fbc-855c-6b150e721314",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "153drHLkpkrtANGbdc-mZ",
              "ctx": null,
              "_testId": "urn:uuid:5c30e737-1d9b-4be7-955f-a49330c1c92f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50865,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:e67ffb2a-1551-4af6-8553-eca785b3ae1e\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:20.738372817Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:95f6281c-abab-4bf6-a0d7-befdb9fd8bdd\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:20.738392587Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2x3La7SSUrWHtaFkaAks9vJrJsnFj1ywEWo2QxYtk7rQ1CNRifwb87D2bvohqK8Zf6Uc6rivdhGrU5HRtmy3126h\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:e67ffb2a-1551-4af6-8553-eca785b3ae1e",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:20.738372817Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:95f6281c-abab-4bf6-a0d7-befdb9fd8bdd",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:20.738392587Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2x3La7SSUrWHtaFkaAks9vJrJsnFj1ywEWo2QxYtk7rQ1CNRifwb87D2bvohqK8Zf6Uc6rivdhGrU5HRtmy3126h"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "vLOMdtsDG6xR8rnVMsQwk",
              "ctx": null,
              "_testId": "urn:uuid:a6b4089c-e1f1-4b29-a090-38bbf1833a95",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "jT8uYMTGuIN1TtRcIitlU",
              "ctx": null,
              "_testId": "urn:uuid:01d323ec-47f8-4b5d-affd-b35f4d0d22c7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51893,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 581,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Generation Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "tFQxk5JAZa6rohu9ehu14",
              "ctx": null,
              "_testId": "urn:uuid:638ff739-4de7-4ae1-9348-c38ad558847c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "tFQxk5JAZa6rohu9ehu14",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "tFQxk5JAZa6rohu9ehu14",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52474,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1864,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:17e12095-e0ca-4066-9cf2-2fbb6bf15520"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "iZpgmIk26RoYPoYN8um3n",
              "ctx": null,
              "_testId": "urn:uuid:fcbf94f1-a5e8-4154-9ad2-426e760262a0",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iZpgmIk26RoYPoYN8um3n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iZpgmIk26RoYPoYN8um3n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 836,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:f02d2f2b-580d-4c1f-84a1-c840f57d79fd"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "osPmEpxNHxSRXOo9-nSi3",
              "ctx": null,
              "_testId": "urn:uuid:853c78e0-cb38-46c3-bf27-3b5ee8d5fedf",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "osPmEpxNHxSRXOo9-nSi3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "osPmEpxNHxSRXOo9-nSi3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1432,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:fd21581a-3bc1-4195-9cfa-bf0e78701199"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "s52kHRpJICrxVuKyNbHtN",
              "ctx": null
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "s52kHRpJICrxVuKyNbHtN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js"
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook for \"The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "s52kHRpJICrxVuKyNbHtN",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 454,
              "_error": null,
              "state": "failed",
              "err": {}
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:93627085-177e-41e0-adec-7248337c9cd6"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "LMC3Qqzf3kEY2juXn296a",
              "ctx": null,
              "_testId": "urn:uuid:54435ca8-f7ce-40b8-b24b-0d14b08633c8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "LMC3Qqzf3kEY2juXn296a",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "LMC3Qqzf3kEY2juXn296a",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57064,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 809,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:4cc23152-e047-42af-bc73-30f4928f95f7"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "N-YQf5Xl_J68ofB5JWWp3",
              "ctx": null,
              "_testId": "urn:uuid:a1421011-80fd-4086-8bc3-b05b502a2abb",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "N-YQf5Xl_J68ofB5JWWp3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "N-YQf5Xl_J68ofB5JWWp3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d7f76017-3196-4bb0-aac7-c1254d69f547"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Dh92OldLTW2Nq935cMIgI",
              "ctx": null,
              "_testId": "urn:uuid:7d302fed-542d-4fb0-843a-706970c409f7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62554,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Dh92OldLTW2Nq935cMIgI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Dh92OldLTW2Nq935cMIgI",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4591,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "o7Dl2oHsjMwE3v1XGR_6Z",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:49832b7f-5de8-4e74-b1d4-2cb6e016a56f"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:84fbf07d-2725-414b-8320-2d3d16eb4d53",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "tFQxk5JAZa6rohu9ehu14",
              "ctx": null,
              "_testId": "urn:uuid:638ff739-4de7-4ae1-9348-c38ad558847c",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "iZpgmIk26RoYPoYN8um3n",
              "ctx": null,
              "_testId": "urn:uuid:fcbf94f1-a5e8-4154-9ad2-426e760262a0",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "osPmEpxNHxSRXOo9-nSi3",
              "ctx": null,
              "_testId": "urn:uuid:853c78e0-cb38-46c3-bf27-3b5ee8d5fedf",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "cell": {
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
                "colId": "OpSecId"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "LMC3Qqzf3kEY2juXn296a",
              "ctx": null,
              "_testId": "urn:uuid:54435ca8-f7ce-40b8-b24b-0d14b08633c8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "N-YQf5Xl_J68ofB5JWWp3",
              "ctx": null,
              "_testId": "urn:uuid:a1421011-80fd-4086-8bc3-b05b502a2abb",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Dh92OldLTW2Nq935cMIgI",
              "ctx": null,
              "_testId": "urn:uuid:7d302fed-542d-4fb0-843a-706970c409f7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62554,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Expansion Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9Rt15-_YJST_iS-yZMGcm",
              "ctx": null,
              "_testId": "urn:uuid:f1e89b21-7600-4b0f-87bb-aa1f74c36fc4",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a0dc5a23-ab02-4eaa-8478-a28aab142014\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/24676\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"24676\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:32Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z27TUVgr38xdd6zhw1AhEtQn15tHqAU2Kz859kiuuwdcDhNgtcxmtjvA8vhfgnKoA729n1ajPFBdcN5YBq1EVtEiM\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a0dc5a23-ab02-4eaa-8478-a28aab142014",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/24676",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "24676",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:32Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z27TUVgr38xdd6zhw1AhEtQn15tHqAU2Kz859kiuuwdcDhNgtcxmtjvA8vhfgnKoA729n1ajPFBdcN5YBq1EVtEiM"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"apicatalog.com\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "9Rt15-_YJST_iS-yZMGcm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "9Rt15-_YJST_iS-yZMGcm",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62554,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1112,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:07d34858-776e-43b4-be09-0446c24ed39e"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2fA5Ol2Nt0Qo53uiz9mAo",
              "ctx": null,
              "_testId": "urn:uuid:02e8342a-3b66-4794-9a66-61adf47d6e99",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 177,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2fA5Ol2Nt0Qo53uiz9mAo",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2fA5Ol2Nt0Qo53uiz9mAo",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63760,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 451,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:5de107c9-b3b0-4ccf-b201-0737e243624d"
        },
        {
          "title": "Gen Digital",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xZ789WdybvC1YTeqtEl82",
              "ctx": null,
              "_testId": "urn:uuid:acd87da7-1e86-4d6f-9016-959053ec4815",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 293,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Gen Digital\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xZ789WdybvC1YTeqtEl82",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Gen Digital\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "xZ789WdybvC1YTeqtEl82",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64389,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 221,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:4df81a5b-dbb2-4acd-9eb7-b47e02acea14"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "NOhvFzo_dew5VQKE94xdz",
              "ctx": null,
              "_testId": "urn:uuid:fa4b1013-972c-4a6e-8d2b-b3e5017cb701",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65139,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "NOhvFzo_dew5VQKE94xdz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "NOhvFzo_dew5VQKE94xdz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64904,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 235,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:452b8db6-4897-4a9f-9275-847544fef339"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "g2pHwg6nV7uZ-5hC8xhp6",
              "ctx": null,
              "_testId": "urn:uuid:9c063e5f-9700-414c-aaa6-d146b60a2436",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65663,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:e2983d02-5d41-410b-9a82-f3a3749b1b93\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:35.538080621Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:1a0a4a14-d70c-42e9-9c6b-af6cd1481a06\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:35.538089054Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z57FqwyvcdhZa8RdLo6iKtKhYTPPioceE5K8DSLPuGpCqR4HXaXN9okJA79YvcKxFjwG45tQMGcmPPXr1ZiR2pMj5\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:e2983d02-5d41-410b-9a82-f3a3749b1b93",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:35.538080621Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:1a0a4a14-d70c-42e9-9c6b-af6cd1481a06",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:35.538089054Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z57FqwyvcdhZa8RdLo6iKtKhYTPPioceE5K8DSLPuGpCqR4HXaXN9okJA79YvcKxFjwG45tQMGcmPPXr1ZiR2pMj5"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g2pHwg6nV7uZ-5hC8xhp6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "g2pHwg6nV7uZ-5hC8xhp6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65237,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 425,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:43984b42-31f7-4baf-a3ca-aaabb1f5fa97"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "1921637UA-t4Kl21MHxir",
              "ctx": null,
              "_testId": "urn:uuid:362df0d9-7dd7-4135-80fe-c144c51eec9c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65807,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1921637UA-t4Kl21MHxir",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "1921637UA-t4Kl21MHxir",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 49,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:712b25e1-189a-45cc-af5b-5e223c2e551e"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lsS7ZWLMJ7d-s3nSPscyV",
              "ctx": null,
              "_testId": "urn:uuid:cfac8a8e-8405-4694-8d12-4cb2700e18d2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66662,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1144,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lsS7ZWLMJ7d-s3nSPscyV",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lsS7ZWLMJ7d-s3nSPscyV",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 829,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "9D8TBXph2G_B04blVF57J",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:e86d0bb9-45f8-43b5-b1a0-9ad6a6053ccd"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:77c5d640-8907-4be3-87c7-7f9a21ad5dc0",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "9Rt15-_YJST_iS-yZMGcm",
              "ctx": null,
              "_testId": "urn:uuid:f1e89b21-7600-4b0f-87bb-aa1f74c36fc4",
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:a0dc5a23-ab02-4eaa-8478-a28aab142014\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/24676\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"24676\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:32Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z27TUVgr38xdd6zhw1AhEtQn15tHqAU2Kz859kiuuwdcDhNgtcxmtjvA8vhfgnKoA729n1ajPFBdcN5YBq1EVtEiM\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:a0dc5a23-ab02-4eaa-8478-a28aab142014",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/24676",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "24676",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:32Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z27TUVgr38xdd6zhw1AhEtQn15tHqAU2Kz859kiuuwdcDhNgtcxmtjvA8vhfgnKoA729n1ajPFBdcN5YBq1EVtEiM"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2fA5Ol2Nt0Qo53uiz9mAo",
              "ctx": null,
              "_testId": "urn:uuid:02e8342a-3b66-4794-9a66-61adf47d6e99",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 177,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "xZ789WdybvC1YTeqtEl82",
              "ctx": null,
              "_testId": "urn:uuid:acd87da7-1e86-4d6f-9016-959053ec4815",
              "cell": {
                "columnId": "Gen Digital",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 293,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "NOhvFzo_dew5VQKE94xdz",
              "ctx": null,
              "_testId": "urn:uuid:fa4b1013-972c-4a6e-8d2b-b3e5017cb701",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65139,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "g2pHwg6nV7uZ-5hC8xhp6",
              "ctx": null,
              "_testId": "urn:uuid:9c063e5f-9700-414c-aaa6-d146b60a2436",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65663,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:e2983d02-5d41-410b-9a82-f3a3749b1b93\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:35.538080621Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:1a0a4a14-d70c-42e9-9c6b-af6cd1481a06\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:35.538089054Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z57FqwyvcdhZa8RdLo6iKtKhYTPPioceE5K8DSLPuGpCqR4HXaXN9okJA79YvcKxFjwG45tQMGcmPPXr1ZiR2pMj5\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:e2983d02-5d41-410b-9a82-f3a3749b1b93",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:35.538080621Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:1a0a4a14-d70c-42e9-9c6b-af6cd1481a06",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:35.538089054Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z57FqwyvcdhZa8RdLo6iKtKhYTPPioceE5K8DSLPuGpCqR4HXaXN9okJA79YvcKxFjwG45tQMGcmPPXr1ZiR2pMj5"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "1921637UA-t4Kl21MHxir",
              "ctx": null,
              "_testId": "urn:uuid:362df0d9-7dd7-4135-80fe-c144c51eec9c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65807,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lsS7ZWLMJ7d-s3nSPscyV",
              "ctx": null,
              "_testId": "urn:uuid:cfac8a8e-8405-4694-8d12-4cb2700e18d2",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66662,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1144,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "BitstringStatusList (interop)",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"BitstringStatusList (interop)\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        }
      ],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 67806,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 916,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 68722,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 596,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69319,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 116,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69435,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 108,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69543,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 141,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69683,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 36,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"BitstringStatusList (interop)\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "U0TYDLPL-lUq9GXDR62Rz",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69719,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 214,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QxIIjgpqi-itgXgGF6A58",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:b3e05b7f-2562-484a-af81-9bbbdf4bff2b",
      "columns": [
        "apicatalog.com",
        "Digital Bazaar",
        "Gen Digital",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "apicatalog.com",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:396ca110-6b4a-4205-9df8-d571375d200a",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69934,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:cadef391-8ce2-4896-950a-33d3e499692f",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69997,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 169,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half",
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}},\"options\":{\"checks\":[\"proof\"]}}"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc2.veresverifier.dev/verifiers/z19w7KofwvE2nkJeRVLp8NDxz/credentials/verify",
                  "status": 400,
                  "data": {
                    "name": "ValidationError",
                    "message": "A validation error occurred in the 'Verify Credential Body' validator.",
                    "details": {
                      "errors": [
                        {
                          "name": "ValidationError",
                          "message": "should be array",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "credentialStatus": {
                                  "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                                  "type": "BitstringStatusListEntry",
                                  "statusPurpose": "revocation",
                                  "statusListIndex": "53699",
                                  "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                                },
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2025-02-10T15:40:37Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "type": "array"
                            },
                            "path": ".verifiableCredential['@context']",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/0/properties/%40context/type",
                            "schema": {
                              "description": "",
                              "title": ""
                            },
                            "value": "https://www.w3.org/ns/credentials/v2"
                          },
                          "cause": null,
                          "stack": "ValidationError: should be array\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should NOT have additional properties",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "credentialStatus": {
                                  "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                                  "type": "BitstringStatusListEntry",
                                  "statusPurpose": "revocation",
                                  "statusListIndex": "53699",
                                  "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                                },
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2025-02-10T15:40:37Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {
                              "additionalProperty": "credentialSubject"
                            },
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf/1/additionalProperties",
                            "schema": {
                              "description": "",
                              "title": "Enveloped Verifiable Credential"
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "credentialStatus": {
                                "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                                "type": "BitstringStatusListEntry",
                                "statusPurpose": "revocation",
                                "statusListIndex": "53699",
                                "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                              },
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2025-02-10T15:40:37Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should NOT have additional properties\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        },
                        {
                          "name": "ValidationError",
                          "message": "should match some schema in anyOf",
                          "details": {
                            "instance": {
                              "verifiableCredential": {
                                "@context": "https://www.w3.org/ns/credentials/v2",
                                "type": [
                                  "VerifiableCredential"
                                ],
                                "credentialSubject": {
                                  "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                                },
                                "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                                "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                                "credentialStatus": {
                                  "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                                  "type": "BitstringStatusListEntry",
                                  "statusPurpose": "revocation",
                                  "statusListIndex": "53699",
                                  "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                                },
                                "proof": {
                                  "type": "DataIntegrityProof",
                                  "created": "2025-02-10T15:40:37Z",
                                  "proofPurpose": "assertionMethod",
                                  "cryptosuite": "eddsa-rdfc-2022",
                                  "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                  "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                                }
                              },
                              "options": {
                                "checks": [
                                  "proof"
                                ]
                              }
                            },
                            "params": {},
                            "path": ".verifiableCredential",
                            "public": true,
                            "schemaPath": "#/properties/verifiableCredential/anyOf",
                            "schema": {
                              "description": "",
                              "title": {
                                "title": "Verifiable Credential",
                                "type": "object",
                                "required": [
                                  "@context",
                                  "credentialSubject",
                                  "issuer",
                                  "type"
                                ],
                                "additionalProperties": true,
                                "properties": {
                                  "@context": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "oneOf": [
                                          {
                                            "const": "https://www.w3.org/2018/credentials/v1"
                                          },
                                          {
                                            "const": "https://www.w3.org/ns/credentials/v2"
                                          }
                                        ]
                                      }
                                    ],
                                    "additionalItems": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "credentialSubject": {
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "issuer": {
                                    "title": "identifier or an object with an id",
                                    "anyOf": [
                                      {
                                        "title": "ID",
                                        "description": "A unique identifier.",
                                        "type": "string",
                                        "minLength": 1,
                                        "disallow": {
                                          "type": "string",
                                          "enum": [
                                            "0"
                                          ]
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "id"
                                        ],
                                        "additionalProperties": true,
                                        "properties": {
                                          "id": {
                                            "title": "ID",
                                            "description": "A unique identifier.",
                                            "type": "string",
                                            "minLength": 1,
                                            "disallow": {
                                              "type": "string",
                                              "enum": [
                                                "0"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "type": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": [
                                      {
                                        "const": "VerifiableCredential"
                                      }
                                    ],
                                    "additionalItems": {
                                      "type": "string"
                                    }
                                  },
                                  "proof": {
                                    "title": "Proof",
                                    "anyOf": [
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "value": {
                              "@context": "https://www.w3.org/ns/credentials/v2",
                              "type": [
                                "VerifiableCredential"
                              ],
                              "credentialSubject": {
                                "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                              },
                              "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                              "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                              "credentialStatus": {
                                "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                                "type": "BitstringStatusListEntry",
                                "statusPurpose": "revocation",
                                "statusListIndex": "53699",
                                "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                              },
                              "proof": {
                                "type": "DataIntegrityProof",
                                "created": "2025-02-10T15:40:37Z",
                                "proofPurpose": "assertionMethod",
                                "cryptosuite": "eddsa-rdfc-2022",
                                "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                                "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                              }
                            }
                          },
                          "cause": null,
                          "stack": "ValidationError: should match some schema in anyOf\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:240:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)"
                        }
                      ],
                      "httpStatusCode": 400
                    },
                    "cause": null,
                    "stack": "ValidationError: A validation error occurred in the 'Verify Credential Body' validator.\n    at _createError (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:246:17)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:88:14)\n    at validate (file:///home/node/app/node_modules/@bedrock/validation/lib/index.js:181:22)\n    at Layer.handle [as handle_request] (/home/node/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/node/app/node_modules/express/lib/router/route.js:149:13)\n    at cors (/home/node/app/node_modules/cors/lib/index.js:188:7)\n    at /home/node/app/node_modules/cors/lib/index.js:224:17\n    at originCallback (/home/node/app/node_modules/cors/lib/index.js:214:15)\n    at /home/node/app/node_modules/cors/lib/index.js:219:13\n    at optionsCallback (/home/node/app/node_modules/cors/lib/index.js:199:9)",
                    "type": "ValidationError"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Gen Digital should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:600de3c1-de85-48c8-b691-86184efa23d0",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70167,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "error": "bad_request",
                    "component": "verifier.verify-credential-service",
                    "incorrect_value": "credential",
                    "http_status": 400,
                    "error_description": "verifyCredential: parsing credential: verifiable credential is not valid:\n- @context: Invalid type. Expected: array, given: string\n"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:de650d14-5f1a-40b0-a3fc-2eb602d4adcd",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:ac5763c8-bfeb-4983-9402-aee92e97abcf",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:12ef9617-7877-4b4b-81eb-f7e901a3dcac",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70384,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify apicatalog.com",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:84e9467c-fb4d-43f5-8969-45456dcfa717",
              "cell": {
                "rowId": "apicatalog.com",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70410,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 207,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":\"https://www.w3.org/ns/credentials/v2\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:565c3744-131d-4332-b78d-057acda2eee3\",\"issuer\":\"https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022\",\"credentialStatus\":{\"id\":\"https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"53699\",\"statusListCredential\":\"https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:37Z\",\"proofPurpose\":\"assertionMethod\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7\",\"proofValue\":\"z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": "https://www.w3.org/ns/credentials/v2",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:565c3744-131d-4332-b78d-057acda2eee3",
                        "issuer": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-issue-eddsa-rdfc-2022",
                        "credentialStatus": {
                          "id": "https://iron.apicatalog.com/status/6x9gqgj0GujhrdxGfShY/53699",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "53699",
                          "statusListCredential": "https://firebasestorage.googleapis.com/v0/b/vc-status/o/6x9gqgj0GujhrdxGfShY?alt=media"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:37Z",
                          "proofPurpose": "assertionMethod",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7#z6MktgKTsu1QhX6QPbyqG6geXdw6FQCZBPq7uQpieWbiQiG7",
                          "proofValue": "z2Jo2VHfET9n7x1gWD7zGQnSv5cUsAnZ75yGbLPWrLa8rRgZEHEJ4P1xLL3GixvpWtvfrUb1uXbEXQpbMd84kdNYZ"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "\"https://www.w3.org/2018/credentials/v1\" or \"https://www.w3.org/ns/credentials/v2\" needs to be first in the list of contexts."
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:b65c057b-279d-4278-bc96-7ee62a94e06d",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70617,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "4010",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "4010",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:4379a06b-4aa9-42d6-a1dd-e32c1053a2d3",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70677,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:e819b46e-4fca-44ca-b652-e3085b7e7dd3",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "4010",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "4010",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "error": "bad_request",
                    "component": "verifier.verify-credential-service",
                    "incorrect_value": "credential",
                    "http_status": 400,
                    "error_description": "verifyCredential: parsing credential: fill credential status from raw: should be json object but got [map[id:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010 statusListCredential:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV statusListIndex:4010 statusPurpose:revocation type:BitstringStatusListEntry] map[id:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010 statusListCredential:https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R statusListIndex:4010 statusPurpose:suspension type:BitstringStatusListEntry]]"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:0989808f-085e-4208-971f-47eb470ada1c",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70767,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "4010",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "4010",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:1d47cd5a-eb06-480d-81c9-336ead373d5d",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70836,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"4010\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c6877f18-4fc7-447a-acbd-54b27e5b19a3",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "4010",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#4010",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "4010",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2XW5raPEHeYG3iSqLfayuWVxr5gRAeA1QcwEjZsDSedgsGZig4aAYT41dmfzKQHKaVZE6FkAaY6Ar5y53AvRusVA"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:2fe9e875-90f6-4d53-8083-430106cc558e",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70930,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Trential should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:afe9b0c8-06f8-4d88-b08b-853e088aac86",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70973,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 608,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Gen Digital",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:45abf178-54fc-48f8-9a8c-71db0b3fc5d6",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71582,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"7825\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2025-02-10T15:40:39Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "7825",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2025-02-10T15:40:39Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:39877023-8964-4b99-b88e-f32fc2bc7e97",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71660,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 812,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:3db023c8-baa0-44e3-955f-67a6c21a7ded",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72473,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "OpSecId should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:809ec4dd-8293-44ba-94ed-691602824220",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"7825\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2025-02-10T15:40:39Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "7825",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2025-02-10T15:40:39Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:8f3a2b1b-e712-45b4-bb14-de1676b2a402",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72787,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"7825\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2025-02-10T15:40:39Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "7825",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2025-02-10T15:40:39Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:ffee3915-ecbb-4e2a-9075-5f764eb61dc8",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 130,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"7825\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2025-02-10T15:40:39Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "7825",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2025-02-10T15:40:39Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify Gen Digital",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:fdf26e53-dfb5-4e5a-9319-860896fa5208",
              "cell": {
                "rowId": "Gen Digital",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73012,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 209,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json\"],\"credentialStatus\":{\"id\":\"urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570\",\"statusListCredential\":\"https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4\",\"statusListIndex\":\"7825\",\"statusPurpose\":\"revocation\",\"type\":\"BitstringStatusListEntry\"},\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77\",\"issuer\":{\"id\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com\",\"name\":\"PlaygroundIssuer\"},\"proof\":{\"created\":\"2025-02-10T15:40:39Z\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey\"},\"type\":[\"VerifiableCredential\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3c-ccg.github.io/lds-jws2020/contexts/lds-jws2020-v1.json"
                        ],
                        "credentialStatus": {
                          "id": "urn:uuid:06abc767-26b1-43e4-8a91-9dfbab3e2570",
                          "statusListCredential": "https://csl-dev3-dip.dev.dts-dsa.com/issuer/groups/99f58d21-4663-4310-ee4f-f5e7910044c1/credentials/status/ff3ffc80-156e-4dd8-a6b2-6d70365e74b4",
                          "statusListIndex": "7825",
                          "statusPurpose": "revocation",
                          "type": "BitstringStatusListEntry"
                        },
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:40cc2795-d8e2-4aca-a024-87e0cc865c77",
                        "issuer": {
                          "id": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com",
                          "name": "PlaygroundIssuer"
                        },
                        "proof": {
                          "created": "2025-02-10T15:40:39Z",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zYTo2bvWa7kqj1aEV8WgPMEieCKDR4p2sK7tBztPfzm4sD7zJb62EXRoE3KXtaE6BTpWBqQQehBAo7uZHkxsPKDVrixD3cYzo74Yx6W5HoGgErYUx3kYzsmZfAdxRgqu7VV2",
                          "type": "DataIntegrityProof",
                          "verificationMethod": "did:web:fd5e2e37-8ee6-424e-92df-28d34fe4e0a5.did-dev3.dev.dts-dsa.com#authkey"
                        },
                        "type": [
                          "VerifiableCredential"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "invalid proof"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "OpSecId",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:3a1af3e8-5fa0-4fef-892a-e7f0efc98680",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73222,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 60,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"171561\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "171561",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:9f40d42a-9046-4586-9f5f-bf88e8475ab8",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:b438bb6d-8ed0-4e8c-808c-55f17f7584ec",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10005,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:93df3afe-fe5b-4535-b50d-62eaa44038f8",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 83333,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 287,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:455837c4-bcfc-4c02-8574-fdadf0d217b3",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 83621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 449,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"171561\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh\"}]},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "171561",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh"
                          }
                        ]
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:241b6981-a252-4780-9ce9-275e99b718ba",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 84071,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"171561\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "171561",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:4366af84-55ac-47ac-ad03-02b2af914ddb",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 84142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 853,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef\",\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"171561\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:c95c47f8-fd06-4b49-a1b2-a5b7997204ef",
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#171561",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "171561",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4B5nKtZaKF2d4XauCi9AtY4nKfA7iqewLPXozu3kfbXx8WfDVPD9YBmWyvzP1ezzGxHAN833cmWeaVjvVUb8FJqh"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "unsupported cryptosuite"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:08e8b17f-cf81-417a-a48c-bb62280b221a",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 84995,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:39.562572484Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39.562580939Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:39.562572484Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39.562580939Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:39cb3f32-7d9b-43d1-bbfc-d74ea6bc0951",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85063,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 204,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:af46d1df-e319-4c69-b4aa-e66a02e0ee6c",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85268,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10002,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:8d955653-99c9-442b-9eda-c619f04d456e",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95270,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 159,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:39.562572484Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39.562580939Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:39.562572484Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39.562580939Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:fba6825b-2da9-48eb-9007-29b4e9b97706",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95430,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 379,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"validFrom\":\"2025-02-10T15:40:39.562572484Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39.562580939Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:128001e2-00f9-4e3b-b9c7-68ddc2715d33",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                        "validFrom": "2025-02-10T15:40:39.562572484Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:f82dd98b-074c-4abb-9095-0b7251b732a3",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/f965d288-fb2c-4648-b194-235f98be36e7",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39.562580939Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9#z6Mkt224NWyb5GLLwWiPcMU88i2zEA9fSy3QQeCRsh7j7WT9",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zKNkBhKSfkD5X3oCEmDgcR4uvGePvgpDLuBWfRPjFiy9fXN1RuZhaYWdQBJqaR74sZctYMBKwPWw8KbV2kRejEch"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:1e2be535-2de7-496a-b7e5-4c15ea7a7bb5",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95810,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Trential should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:8785363a-ea0d-4dcd-b1e1-aaa1b982a301",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95853,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 979,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "SpruceID",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:18409449-906d-40eb-82b6-9a3b993102f9",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:4121d83f-734b-4fde-adb1-3cb4deccb237",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:5dedcc3f-da99-48e5-8a8d-1768e1fa11c3",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96956,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 10001,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "request": {},
                  "name": "TimeoutError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify"
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:9d10bb29-2c59-435a-8742-d8fa2f7dfa7b",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106958,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 181,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Bad Request"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:0e3258f2-882b-4f9a-aa5f-127b29ee787b",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107140,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 410,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:7b04bb06-6387-4876-8a43-f7c9e33b5a29",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A7b04bb06%2D6387%2D4876%2D8a43%2Df7c9e33b5a29",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2kJaM7Hjy4jz2XsJ4xzvnpi3L9n5dVndAwtq51VWCdDvPv1KYPkG96mLeVA76EPfXjuewUHX8M5MpeAP5thbhw2V"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:df957e45-1278-4333-8093-43940db53a5b",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107550,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Trential should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:fbc4a4e6-8bca-4ac7-be0d-8f65ee035f36",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107627,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3030,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Trential",
          "cells": [
            {
              "type": "test",
              "title": "apicatalog.com should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:b2b6f42b-a744-4fa5-99eb-215aaecd0732",
              "cell": {
                "rowId": "Trential",
                "columnId": "apicatalog.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110658,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://us-central1-api-catalog.cloudfunctions.net/vc-api-verify",
                  "status": 400,
                  "data": {
                    "message": "A non-empty JSON Pointer must begin with a '/'"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Digital Bazaar should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:2e9506e2-96c5-4e10-9d4c-33883c8eed92",
              "cell": {
                "rowId": "Trential",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Gen Digital should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:0f10ff0e-0850-4200-be5a-ca08da75ea0c",
              "cell": {
                "rowId": "Trential",
                "columnId": "Gen Digital"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110844,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://krakend-k8s-dev3.dev.dts-dsa.com/vcs/verifier/profiles/f3c5e456-2528-4821-9516-e062392f6ead/v1.latest/credentials/verify",
                  "status": 400,
                  "data": {
                    "error": "bad_request",
                    "component": "verifier.verify-credential-service",
                    "incorrect_value": "credential",
                    "http_status": 400,
                    "error_description": "verifyCredential: parsing credential: fill credential status from raw: should be json object but got [map[statusListCredential:https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0 statusListIndex:207 statusPurpose:revocation type:BitstringStatusListEntry] map[statusListCredential:https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0 statusListIndex:207 statusPurpose:suspension type:BitstringStatusListEntry]]"
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:bd48cb15-77f0-4453-8c46-52bd9bcb68c4",
              "cell": {
                "rowId": "Trential",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110967,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:f8532af3-cd87-4539-ba49-1df21dcfa26d",
              "cell": {
                "rowId": "Trential",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111050,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"207\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2025-02-10T15:40:39Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk\"}},\"options\":{\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:537b6d02-d730-4147-9209-e5e070a946eb",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "207",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2025-02-10T15:40:39Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3H49Bx2hCkgLQUh9X4hpdmyDBgBJkqfPVGL2K8W1tVyTownTx3exWUvXEh92BuKK7DWG58i5ZQTaYFMkchtpL1zk"
                        }
                      },
                      "options": {
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:e6e270dc-60f5-4e17-aea8-02d994a012ba",
              "cell": {
                "rowId": "Trential",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111144,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "U0TYDLPL-lUq9GXDR62Rz",
              "ctx": null,
              "_testId": "urn:uuid:ba86fb83-c887-4abe-8126-079094b695b0",
              "cell": {
                "rowId": "Trential",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111170,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 628,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "group": "vc",
    "specStatus": "base",
    "shortName": "vc-bitstring-status-list-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c/vc-bitstring-status-list-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-bitstring-status-list-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar, Inc.",
        "companyURL": "https://digitalbazaar.com/"
      },
      {
        "name": "Patrick St. Louis",
        "url": "https://github.com/PatStLouis",
        "company": "OpSecId",
        "companyURL": "https://github.com/OpSecId"
      },
      {
        "name": "Benjamin Young",
        "url": "https://github.com/BigBlueHat",
        "company": "Digital Bazaar, Inc.",
        "companyURL": "https://digitalbazaar.com/"
      },
      {
        "name": "Andrew Jones",
        "url": "https://github.com/aljones15",
        "company": "Digital Bazaar, Inc.",
        "companyURL": "https://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC Bitstring Status List Interoperability Report 1.0",
  "stats": [],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}