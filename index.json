{
  "matrices": [
    {
      "title": "Data Model: BitstringStatusList Entry",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:3d2b4084-178e-4022-baa4-4a0fab43b041",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2675,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5503ade6-e7d8-4b76-83d5-8dce617a0f8a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:dff57ca4-b2a3-42c8-95c2-ba3fba43ecd6",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:c547a40e-d46c-4bc0-9e6d-30a1fa0e7850",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2677,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:df07cba6-9b05-4e95-b380-05033ef9d4b9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2677,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:9ddfc147-d523-481a-8110-f735dafe2695",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1090,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5629b7c5-612f-4a30-90f8-58520853df0f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3768,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:bbc1ffa4-4ab7-4d5e-8fcc-4b2608a9f78c",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3832,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:af462e42-5684-43f7-be89-1617ed82591a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:ae8e2562-ed08-4aa7-b180-57bd1f3e7abd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5d58e14b-289b-4a20-9f5e-bdb12481a2a3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:7f7a1ec0-6363-462f-840e-dd058ec94b6e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5afc6021-20a7-411a-b741-3085b3ed823f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:2ad663ae-4c45-4385-97ff-3f38773dedfa",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 350,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2322,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EjQYlXooWzgbVtdhoNcIV",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:824f01ac-67de-4d71-9961-f838ebf08df5"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:597b0e57-94d3-4416-9cc7-2ce295087c00",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:01745a69-78d7-4dde-8c4c-b749289f1cff",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:11e67559-eb37-497f-adeb-7eabc9c48c29",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:a0e57e70-d34a-44d3-b0fe-5dfe627e4869",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:eacc7dc5-97b6-43ea-89d0-2fcb261e452a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:6b89c4e3-c2e5-4324-9ce0-11a9dd733ade",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4159,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:cde929fe-40ac-4bc6-8429-2ec0939102c5",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4256,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:3d4dd605-d3ab-436b-9300-2a5d948f95d2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b0de9df8-e4b4-4523-952c-ad8832c77701",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b4277a83-5f7c-4bfc-b69f-6c897bcac6b2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:d9d69d90-0160-4770-9373-d1b01f2efe6b",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b0b78b52-f16c-4e75-9f28-f55beecf9525",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b6a2745c-c9b0-41b8-b2ab-1ff314b45e56",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:10d01e96-604b-49b8-8982-01a8e5518d35",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 322,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EjQYlXooWzgbVtdhoNcIV",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:0b792ca6-d4ae-4311-b316-01d97f5ed777"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:88b3d9c0-8cea-4dfc-980c-c79dbf6010b5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:ccddc4c2-1d30-4537-ba99-236ab559ab7e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:c09e0f69-42b7-4135-8a94-9cade7cc145e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:8fd16718-5cf1-41d2-98fa-cd10a8215578",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:fc3c5ef5-8395-4bb2-8222-a5184323e02a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5260,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:77f0604b-838c-497d-8d88-a6bd09dcd477",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5260,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:ac6124aa-6182-438c-9e9b-be12e2a7bfcc",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5583,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:4d7217c9-cc27-4dba-b64b-e5d4eaa5915f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:29c2627f-d542-4e12-a01d-7836fb8ef29c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:1112fbe8-8ff0-4866-825e-c3b82659983c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:02ab0c87-c433-4899-bb8c-a57d6cec6998",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:6e57e4cf-e751-4e26-a803-26c760381b3c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:fe60412a-c452-42f5-bd49-80b8be072c16",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:e20956e8-299b-4828-93e2-2971e892d14b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4330,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 928,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EjQYlXooWzgbVtdhoNcIV",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:e60865d6-d494-4f73-b63f-0845505df068"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:26b6a983-b5ec-4609-bbf4-d4bcb76ab8e0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:ce421ac7-cb36-4dd7-92fb-2a5b607550f4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:3a597a66-4d8a-404b-8101-0171044c6184",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:200be0a7-546e-49c3-b1f2-4f0f9ba963e6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:4eb17a83-35f5-42c5-901c-ff261832878c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:389f13ff-c373-483e-bea8-0c74792b04a2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:b53d379a-7cf3-4e1d-967f-7b98814b41fc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:2260c653-99b2-4914-aa42-5ad9bd3338d1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:ca8b79d4-d675-455b-bb94-af9fc44214e6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:27a1bb8b-318a-493b-a1ca-23a8afbb7960",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:6992d49e-8863-412e-b755-a856610d27b2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:6fb78327-21a1-4e98-be96-909dc3a4e00e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:0b2c8bb2-f429-474e-b580-15c8a182babf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:b95ee2b2-c715-4913-b19c-7fb6e081ed10",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EjQYlXooWzgbVtdhoNcIV",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:72a8039f-004a-4aae-9ac0-ce504b6a57dd"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:b8a8bdc2-d816-43e1-9c0e-8321cb61dba3",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:44be6514-d031-40e5-b9d5-24305799a744",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:c6af16a0-afcf-4a91-a778-ef1c486d4146",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:9f789055-2a83-4ff2-baa6-bf1b2a1c9fc5",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:8e595852-9c3d-4ef4-a383-ff05dad896c0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:8b14c668-ea31-4ac8-a04b-6f97fe607862",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3362,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:42c8a28d-6bb5-4331-b1f2-978422efb395",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11198,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1466,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:16087354-3f89-4eff-bc27-45ad62b6791c",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:731d81ed-368b-47fb-8190-5fc38c34ad09",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:d4929bbc-f350-4c76-9ba4-d8762a660658",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:a934f84b-65c2-44cf-b2a8-1df594fda95e",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:b2429bcd-00e5-4c63-b632-7e9b6b488eee",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:733e7b97-fb08-4a0a-8ea2-d4f3646a41c3",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:2a135df7-e470-4836-a366-35a2f9a4f513",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1932,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "EjQYlXooWzgbVtdhoNcIV",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:a5e5ad37-9860-441e-a286-d6af84a5d36b"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:d2645c80-4719-43c4-8211-74121d04413b",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
          "cells": [
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:3d2b4084-178e-4022-baa4-4a0fab43b041",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2675,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:597b0e57-94d3-4416-9cc7-2ce295087c00",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:88b3d9c0-8cea-4dfc-980c-c79dbf6010b5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:26b6a983-b5ec-4609-bbf4-d4bcb76ab8e0",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.';\n        testCredential({credential: issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:b8a8bdc2-d816-43e1-9c0e-8321cb61dba3",
              "cell": {
                "columnId": "Trential",
                "rowId": "Any expression of the data model in this section MUST be expressed in a conforming verifiable credential as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Any%20expression%20of%20the%20data%20model%20in%20this%20section%20MUST%20be%20expressed%20in%20a%20conforming%20verifiable%20credential%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5503ade6-e7d8-4b76-83d5-8dce617a0f8a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:01745a69-78d7-4dde-8c4c-b749289f1cff",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:ccddc4c2-1d30-4537-ba99-236ab559ab7e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:ce421ac7-cb36-4dd7-92fb-2a5b607550f4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.';\n        for(statusEntry of statusEntries) {\n          if('id' in statusEntry) {\n            // TODO test for URI\n            statusEntry.id.should.be.a('string',\n              'Expected credentialStatus.id to be a string.'\n            );\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No id property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:44be6514-d031-40e5-b9d5-24305799a744",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the id value is expected to be a URL that identifies the status information associated with the verifiable credential. It MUST NOT be the URL for the status list.",
                "skipMessage": "No id property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20value%20is%20expected%20to%20be%20a%20URL%20that%20identifies%20the%20status%20information%20associated%20with%20the%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No id property included."
              }
            }
          ]
        },
        {
          "id": "The type property MUST be BitstringStatusListEntry. ",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
          "cells": [
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:dff57ca4-b2a3-42c8-95c2-ba3fba43ecd6",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:11e67559-eb37-497f-adeb-7eabc9c48c29",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:c09e0f69-42b7-4135-8a94-9cade7cc145e",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:3a597a66-4d8a-404b-8101-0171044c6184",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type property MUST be BitstringStatusListEntry. ",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected credentialStatus.type to be a string.'\n            );\n            statusEntry.type.should.equal(\n              'BitstringStatusListEntry',\n              'Expected credentialStatus.type to be ' +\n              'BitstringStatusListEntry.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:c6af16a0-afcf-4a91-a778-ef1c486d4146",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type property MUST be BitstringStatusListEntry. "
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20property%20MUST%20be%20BitstringStatusListEntry.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The purpose of the status entry MUST be a string.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
          "cells": [
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:c547a40e-d46c-4bc0-9e6d-30a1fa0e7850",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2677,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:a0e57e70-d34a-44d3-b0fe-5dfe627e4869",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:8fd16718-5cf1-41d2-98fa-cd10a8215578",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5259,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:200be0a7-546e-49c3-b1f2-4f0f9ba963e6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The purpose of the status entry MUST be a string.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string';\n          for(statusEntry of statusEntries) {\n            statusEntry.should.have.own.property(\n              'statusPurpose').to.be.a('string',\n              'Expected credentialStatus.statusPurpose to be a string.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:9f789055-2a83-4ff2-baa6-bf1b2a1c9fc5",
              "cell": {
                "columnId": "Trential",
                "rowId": "The purpose of the status entry MUST be a string."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20purpose%20of%20the%20status%20entry%20MUST%20be%20a%20string",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
          "cells": [
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:df07cba6-9b05-4e95-b380-05033ef9d4b9",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2677,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:eacc7dc5-97b6-43ea-89d0-2fcb261e452a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:fc3c5ef5-8395-4bb2-8222-a5184323e02a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5260,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:4eb17a83-35f5-42c5-901c-ff261832878c",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010';\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.property(\n            'statusListIndex').to.be.a('string',\n            'Expected statusListIndex to be a string.'\n          );\n          assert(\n            String(parseInt(statusEntry.statusListIndex)) ===\n            statusEntry.statusListIndex,\n            'Expected statusSize value to be an integer ' +\n            'expressed as a string in base 10.'\n          );\n          parseInt(statusEntry.statusListIndex).\n            should.be.gte(0,\n              'Expected credentialStatus.statusListIndex to be >= 0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:8e595852-9c3d-4ef4-a383-ff05dad896c0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListIndex property MUST be an arbitrary size integer greater than or equal to 0, expressed as a string in base 10."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListIndex%20property%20MUST%20be%20an%20arbitrary%20size%20integer%20greater%20than%20or%20equal%20to%200%2C%20expressed%20as%20a%20string%20in%20base%2010",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The statusListCredential property MUST be a URL to a verifiable credential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
          "cells": [
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:9ddfc147-d523-481a-8110-f735dafe2695",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2678,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1090,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:6b89c4e3-c2e5-4324-9ce0-11a9dd733ade",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4159,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:77f0604b-838c-497d-8d88-a6bd09dcd477",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5260,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:389f13ff-c373-483e-bea8-0c74792b04a2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The statusListCredential property MUST be a URL to a verifiable credential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.';\n        // TODO check for URI\n        for(statusEntry of statusEntries) {\n          statusEntry.should.have.own.\n            property('statusListCredential').to.be.\n            a('string',\n              'Expected credentialStatus.statusListCredential to be a URL.'\n            );\n          const {slc} = await getSlc(statusEntry);\n          should.exist(slc,\n            'Expected statusListCredential to resolve to a ' +\n            'Verifiable Credential');\n          testSlCredential({slCredential: slc});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:8b14c668-ea31-4ac8-a04b-6f97fe607862",
              "cell": {
                "columnId": "Trential",
                "rowId": "The statusListCredential property MUST be a URL to a verifiable credential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20statusListCredential%20property%20MUST%20be%20a%20URL%20to%20a%20verifiable%20credential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3362,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5629b7c5-612f-4a30-90f8-58520853df0f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3768,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:cde929fe-40ac-4bc6-8429-2ec0939102c5",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4256,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:ac6124aa-6182-438c-9e9b-be12e2a7bfcc",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5583,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:b53d379a-7cf3-4e1d-967f-7b98814b41fc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusEntry of statusEntries) {\n          const {slc} = await getSlc(statusEntry);\n          slc.should.have.own.\n            property('type').to.be.\n            an('array',\n              'Expected type to be an array.'\n            );\n          slc.type.should.include(\n            'BitstringStatusListCredential',\n            'Expected type to be BitstringStatusListCredential.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:42c8a28d-6bb5-4331-b1f2-978422efb395",
              "cell": {
                "columnId": "Trential",
                "rowId": "When the URL is dereferenced, the resulting verifiable credential MUST have type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20the%20URL%20is%20dereferenced%2C%20the%20resulting%20verifiable%20credential%20MUST%20have%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11198,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1466,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If present, statusSize MUST be an integer greater than zero.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
          "cells": [
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:bbc1ffa4-4ab7-4d5e-8fcc-4b2608a9f78c",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3832,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:3d4dd605-d3ab-436b-9300-2a5d948f95d2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:4d7217c9-cc27-4dba-b64b-e5d4eaa5915f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5687,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:2260c653-99b2-4914-aa42-5ad9bd3338d1",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If present, statusSize MUST be an integer greater than zero.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry) {\n            statusEntry.statusSize.should.be.a('number',\n              'Expected statusSize to be an integer.');\n            assert(Number.isInteger(\n              statusEntry.statusSize),\n            'Expected statusSize to be an integer.');\n            statusEntry.statusSize.should.be.gt(0,\n              'Expected statusSize to be greater than zero.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:16087354-3f89-4eff-bc27-45ad62b6791c",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, statusSize MUST be an integer greater than zero.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20statusSize%20MUST%20be%20an%20integer%20greater%20than%20zero.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
          "cells": [
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:af462e42-5684-43f7-be89-1617ed82591a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b0de9df8-e4b4-4523-952c-ad8832c77701",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:29c2627f-d542-4e12-a01d-7836fb8ef29c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:ca8b79d4-d675-455b-bb94-af9fc44214e6",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusSize property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:731d81ed-368b-47fb-8190-5fc38c34ad09",
              "cell": {
                "columnId": "Trential",
                "rowId": "If statusSize is provided and is greater than 1, then the property credentialStatus.statusMessage MUST be present.",
                "skipMessage": "No statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20statusSize%20is%20provided%20and%20is%20greater%20than%201%2C%20then%20the%20property%20credentialStatus.statusMessage%20MUST%20be%20present",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusSize property included."
              }
            }
          ]
        },
        {
          "id": "The number of status messages MUST equal the number of possible values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
          "cells": [
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:ae8e2562-ed08-4aa7-b180-57bd1f3e7abd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b4277a83-5f7c-4bfc-b69f-6c897bcac6b2",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:1112fbe8-8ff0-4866-825e-c3b82659983c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:27a1bb8b-318a-493b-a1ca-23a8afbb7960",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5901,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "The number of status messages MUST equal the number of possible values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            'statusMessage' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize);\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:d4929bbc-f350-4c76-9ba4-d8762a660658",
              "cell": {
                "columnId": "Trential",
                "rowId": "The number of status messages MUST equal the number of possible values.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=the%20number%20of%20status%20messages%20MUST%20equal%20the%20number%20of%20possible%20values",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
          "cells": [
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5d58e14b-289b-4a20-9f5e-bdb12481a2a3",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:d9d69d90-0160-4770-9373-d1b01f2efe6b",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:02ab0c87-c433-4899-bb8c-a57d6cec6998",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:6992d49e-8863-412e-b755-a856610d27b2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry &&\n            'statusSize' in statusEntry) {\n            statusEntry.statusMessage.should.be.\n              an('array').length.should.be.\n              equal(statusEntry.statusSize,\n                'Expected statusMessage length to be equal to ' +\n                'statusSize.');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage property ' +\n              'included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:a934f84b-65c2-44cf-b2a8-1df594fda95e",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the statusMessage property MUST be an array, the length of which MUST equal the number of possible status messages indicated by statusSize.",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20the%20statusMessage%20property%20MUST%20be%20an%20array%2C%20the%20length%20of%20which%20MUST%20equal%20the%20number%20of%20possible%20status%20messages%20indicated%20by%20statusSize",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
          "cells": [
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:7f7a1ec0-6363-462f-840e-dd058ec94b6e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3833,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b0b78b52-f16c-4e75-9f28-f55beecf9525",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:6e57e4cf-e751-4e26-a803-26c760381b3c",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:6fb78327-21a1-4e98-be96-909dc3a4e00e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            },
            {
              "type": "test",
              "title": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201';\n        for(statusEntry of statusEntries) {\n          if('statusSize' in statusEntry &&\n            Number.isInteger(statusEntry.statusSize) &&\n            statusEntry.statusSize.gt(1)\n          ) {\n            statusEntry.should.have.own.property(\n              'statusMessage');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No greater than 1 ' +\n              'statusSize property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:b2429bcd-00e5-4c63-b632-7e9b6b488eee",
              "cell": {
                "columnId": "Trential",
                "rowId": "statusMessage MAY be present if statusSize is 1, and MUST be present if statusSize is greater than 1.",
                "skipMessage": "No greater than 1 statusSize property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=statusMessage%20MAY%20be%20present%20if%20statusSize%20is%201%2C%20and%20MUST%20be%20present%20if%20statusSize%20is%20greater%20than%201",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No greater than 1 statusSize property included."
              }
            }
          ]
        },
        {
          "id": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
          "cells": [
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:5afc6021-20a7-411a-b741-3085b3ed823f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:b6a2745c-c9b0-41b8-b2ab-1ff314b45e56",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:fe60412a-c452-42f5-bd49-80b8be072c16",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:0b2c8bb2-f429-474e-b580-15c8a182babf",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            },
            {
              "type": "test",
              "title": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.';\n        for(statusEntry of statusEntries) {\n          if('statusMessage' in statusEntry) {\n            // TODO this needs more testing:\n            // a string representing the hexadecimal\n            // value of the status prefixed with 0x\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'status').that.is.a('string');\n            statusEntry.\n              statusMessage.should.each.have.property(\n                'message').that.is.a('string');\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusMessage ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:733e7b97-fb08-4a0a-8ea2-d4f3646a41c3",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the statusMessage array is present, each element MUST contain the two properties \"status\" and \"message\".",
                "skipMessage": "No statusMessage property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20the%20statusMessage%20array%20is%20present%2C%20each%20element%20MUST%20contain%20the%20two%20properties%20described%20below%2C%20and%20MAY%20contain%20additional%20properties.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "No statusMessage property included."
              }
            }
          ]
        },
        {
          "id": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
          "cells": [
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "EkID13S7ijZUh2kyDryVi",
              "ctx": null,
              "_testId": "urn:uuid:2ad663ae-4c45-4385-97ff-3f38773dedfa",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "HAN_g4rNJB87qDMQXwExg",
              "ctx": null,
              "_testId": "urn:uuid:10d01e96-604b-49b8-8982-01a8e5518d35",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "llx1kFp-d-2KPsv30_fIY",
              "ctx": null,
              "_testId": "urn:uuid:e20956e8-299b-4828-93e2-2971e892d14b",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "WiOVEelwpmw95pDhWGzpT",
              "ctx": null,
              "_testId": "urn:uuid:b95ee2b2-c715-4913-b19c-7fb6e081ed10",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            },
            {
              "type": "test",
              "title": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status';\n        for(statusEntry of statusEntries) {\n          if('statusReference' in statusEntry) {\n            const statusReferenceType = typeof (\n              statusEntry.statusReference);\n            statusReferenceType.should.be.oneOf(['string', 'object'],\n              'Expected statusReference to be an string or an array.');\n            if(statusReferenceType === 'object') {\n              statusEntry.statusReference.should.be.an(\n                'array');\n              statusEntry.statusReference.forEach(\n                item => item.should.be.a('string'));\n            }\n            // TODO test for URLS\n          } else {\n            if(statusEntry === statusEntries[statusEntries.length - 1]) {\n              this.test.cell.skipMessage = 'No statusReference ' +\n              'property included.';\n              this.skip();\n            } else {\n              continue;\n            }\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "x_HGMlEE2WM6fY4BSRIte",
              "ctx": null,
              "_testId": "urn:uuid:2a135df7-e470-4836-a366-35a2f9a4f513",
              "cell": {
                "columnId": "Trential",
                "rowId": "If present, the \"statusReference\" value MUST be a URL or an array of URLs [URL] which dereference(s) to material related to the status.",
                "skipMessage": "No statusReference property included."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20present%2C%20its%20value%20MUST%20be%20a%20URL%20or%20an%20array%20of%20URLs%20%5BURL%5D%20which%20dereference%20to%20material%20related%20to%20the%20status",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No statusReference property included."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Data Model: BitstringStatusList Credential",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:be97fc0a-4af4-408d-b1b0-f6eca3004318",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:bc8c5bc9-0d50-4bd2-ae8f-34bb82ad1c3d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:16fd6e2a-7c28-4d93-bda4-6cd351c26c7b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:2e2d66dc-bedb-470c-bf5c-f7e8e188e364",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:4a83a848-af83-40f1-896a-09fc15daf74e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:e21f2c26-54ad-4d65-900d-2e372e665fd7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:5cb5b925-477e-4959-8248-e280f46e7b1a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12665,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2017,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZBOPSIQMv0xAiaFHKoAUs",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:171ab278-5169-402d-ad69-1af050315e68"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:b257b17a-9012-44e0-9814-3925743ce7a0",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:335e7599-e235-411d-95c1-116cc4b49b82",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:e4b03482-a60d-4069-80ed-6eeab3361ce1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:639baac8-993d-4b8a-976e-6b018613ad0c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:7da28b5b-8eb7-45ec-b8ad-ea6e18b2eb48",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:de682cc2-d53a-4400-86df-c1584b398c4e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:82bd1df6-a6c1-4a7e-8116-dbdbed1be355",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 287,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZBOPSIQMv0xAiaFHKoAUs",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:5d5d3476-d827-4cc3-9de6-f41779c702ee"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:d791f05d-e95a-4403-bae2-4a699284ea85",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:a5df3bd1-ef7c-49ea-b2d1-1c4bd32fc4cf",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:64f7087b-f09c-4673-8821-725b9ca4c5d2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:00891dc9-6e14-4428-a7e4-197d9e70f3a8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:4207dc9a-e562-40b0-9ddb-7b35cf0a453a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:5dfaf317-3785-4d73-8085-31d4d0c2677f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:7623823d-2137-4eee-956d-e274d2c942d5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 663,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZBOPSIQMv0xAiaFHKoAUs",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:60968a3a-d308-45a4-aae5-7194a4e4816a"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:cbc6453d-56f9-4785-b584-3ada61194912",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:19f288fc-8d98-4427-b673-3c4ccd670232",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3de204d2-44ba-4160-83f3-ce822aca9e5a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3c3ad511-6abe-4573-be98-ec9515729bf4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3d25af6f-d4f7-44d0-8035-f5af05d219d2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:c4b4d2a6-5fc6-421d-9f3a-2c2696737c0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:43190cc1-f53c-49f3-a88a-c1fb50d3aa8f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 124,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZBOPSIQMv0xAiaFHKoAUs",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:39df3461-3eaf-4159-9018-8c8b492a1892"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:cab04b1a-adea-405a-ab57-74f0cc0d66dd",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MAY express an id property that matches the value specified in statusListCredential for the corresponding BitstringStatusListEntry.",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:8b5b073b-50f0-4363-a86c-02ba6cfaec6a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:d30b6561-7ecc-4c6a-907e-8b70786b52ae",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:bf471e27-ebc8-4f01-a5cf-c1eb4f2981b6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:f013569c-668c-482b-8078-561123ab89d3",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:338855af-17df-4f5c-b1f4-23fd4035fee0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:5a20576c-a2b1-44c1-9edd-7fc95bccc473",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3930,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZBOPSIQMv0xAiaFHKoAUs",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
          "_testId": "urn:uuid:48ea28de-6416-45e2-845b-d4adfe90f43a"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:17a4ae29-7a74-4b5f-aeb8-d4e629d8c2aa",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
          "cells": [
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:be97fc0a-4af4-408d-b1b0-f6eca3004318",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:b257b17a-9012-44e0-9814-3925743ce7a0",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:d791f05d-e95a-4403-bae2-4a699284ea85",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:cbc6453d-56f9-4785-b584-3ada61194912",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0].",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential:\n              statusListCredential},\n          'Expected status credential to conform to VCDM 2.0.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:cab04b1a-adea-405a-ab57-74f0cc0d66dd",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a status list verifiable credential is published, it MUST be a conforming document, as defined in [VC-DATA-MODEL-2.0]."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=When%20a%20status%20list%20verifiable%20credential%20is%20published%2C%20it%20MUST%20be%20a%20conforming%20document%2C%20as%20defined%20in%20%5BVC%2DDATA%2DMODEL%2D2.0%5D",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
          "cells": [
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:bc8c5bc9-0d50-4bd2-ae8f-34bb82ad1c3d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:335e7599-e235-411d-95c1-116cc4b49b82",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:a5df3bd1-ef7c-49ea-b2d1-1c4bd32fc4cf",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:19f288fc-8d98-4427-b673-3c4ccd670232",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential\n            .should.have.own.property(\n              'type').to.be.an('array',\n              'Expected type property to be a string or an array.'\n            );\n          statusListCredential\n            .type.should.include(\n              'BitstringStatusListCredential',\n              'Expected credential status type to include ' +\n                'BitstringStatusListCredential.');\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:8b5b073b-50f0-4363-a86c-02ba6cfaec6a",
              "cell": {
                "columnId": "Trential",
                "rowId": "The verifiable credential that contains the status list MUST express a type property that includes the BitstringStatusListCredential value."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20verifiable%20credential%20that%20contains%20the%20status%20list%20MUST%20express%20a%20type%20property%20that%20includes%20the%20BitstringStatusListCredential%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
          "cells": [
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:16fd6e2a-7c28-4d93-bda4-6cd351c26c7b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14684,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:e4b03482-a60d-4069-80ed-6eeab3361ce1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:64f7087b-f09c-4673-8821-725b9ca4c5d2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3de204d2-44ba-4160-83f3-ce822aca9e5a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The type of the credential subject, which is the status list, MUST be BitstringStatusList.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.';\n        for(statusListCredential of statusListCredentials) {\n          statusListCredential.\n            credentialSubject.should.have.own.property(\n              'type').to.be.a('string',\n              'Expected type property to be a string.'\n            );\n          statusListCredential.\n            credentialSubject.type.should.equal(\n              'BitstringStatusList',\n              'Expected credential status type to be ' +\n                'BitstringStatusList.'\n            );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:d30b6561-7ecc-4c6a-907e-8b70786b52ae",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type of the credential subject, which is the status list, MUST be BitstringStatusList."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20of%20the%20credential%20subject%2C%20which%20is%20the%20status%20list%2C%20MUST%20be%20BitstringStatusList.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
          "cells": [
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:2e2d66dc-bedb-470c-bf5c-f7e8e188e364",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:639baac8-993d-4b8a-976e-6b018613ad0c",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:00891dc9-6e14-4428-a7e4-197d9e70f3a8",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3c3ad511-6abe-4573-be98-ec9515729bf4",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.';\n        for(statusListCredential of statusListCredentials) {\n          const statusPurposeType = typeof (\n            statusListCredential.\n              credentialSubject.statusPurpose);\n          statusPurposeType.should.be.oneOf(['string', 'object']);\n          if(statusPurposeType === 'object') {\n            const credentialSubject =\n                statusListCredential.credentialSubject;\n            credentialSubject.statusPurpose.should.be.an(\n              'array');\n            credentialSubject.statusPurpose.forEach(\n              item => item.should.be.a('string'));\n          }\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:bf471e27-ebc8-4f01-a5cf-c1eb4f2981b6",
              "cell": {
                "columnId": "Trential",
                "rowId": "The value of the purpose property of the status entry, statusPurpose, MUST be one or more strings."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20value%20of%20the%20purpose%20property%20of%20the%20status%20entry%2C%20statusPurpose%2C%20MUST%20be%20one%20or%20more%20strings.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
          "cells": [
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:4a83a848-af83-40f1-896a-09fc15daf74e",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:7da28b5b-8eb7-45ec-b8ad-ea6e18b2eb48",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:4207dc9a-e562-40b0-9ddb-7b35cf0a453a",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15647,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:3d25af6f-d4f7-44d0-8035-f5af05d219d2",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15773,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n              statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:f013569c-668c-482b-8078-561123ab89d3",
              "cell": {
                "columnId": "Trential",
                "rowId": "The encodedList property of the credential subject MUST be a Multibase-encoded base64url (with no padding) [RFC4648] representation of the GZIP-compressed [RFC1952] bitstring values for the associated range of verifiable credential status values."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20encodedList%20property%20of%20the%20credential%20subject%20MUST%20be%20a%20Multibase%2Dencoded%20base64url%20(with%20no%20padding)%20%5BRFC4648%5D%20representation%20of%20the%20GZIP%2Dcompressed%20%5BRFC1952%5D%20bitstring%20values%20for%20the%20associated%20range%20of%20verifiable%20credential%20status%20values.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The uncompressed bitstring MUST be at least 16KB in size.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
          "cells": [
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:e21f2c26-54ad-4d65-900d-2e372e665fd7",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:de682cc2-d53a-4400-86df-c1584b398c4e",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:5dfaf317-3785-4d73-8085-31d4d0c2677f",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:c4b4d2a6-5fc6-421d-9f3a-2c2696737c0a",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The uncompressed bitstring MUST be at least 16KB in size.",
              "body": "async function() {\n          this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.';\n          for(statusListCredential of statusListCredentials) {\n            const {encodedList} = statusListCredential.credentialSubject;\n            const decoded = await decodeSl({encodedList});\n            // decoded size should be 16kb\n            const decodedSize = (decoded.length / 100);\n            decodedSize.should.be.gte(16,\n              'Expected bitstring to be at least 16KB in size.'\n            );\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:338855af-17df-4f5c-b1f4-23fd4035fee0",
              "cell": {
                "columnId": "Trential",
                "rowId": "The uncompressed bitstring MUST be at least 16KB in size."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20uncompressed%20bitstring%20MUST%20be%20at%20least%2016KB%20in%20size.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
          "cells": [
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "oEwkR9Mu1kkKUZgFBgOp1",
              "ctx": null,
              "_testId": "urn:uuid:5cb5b925-477e-4959-8248-e280f46e7b1a",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14691,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "iZ_gqUsEZb0JH2xIAsBuy",
              "ctx": null,
              "_testId": "urn:uuid:82bd1df6-a6c1-4a7e-8116-dbdbed1be355",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14982,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "6rxrgNb7ZecZ2kjSOKgJ7",
              "ctx": null,
              "_testId": "urn:uuid:7623823d-2137-4eee-956d-e274d2c942d5",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "2WMZzSpOxlxaDfH72nEBc",
              "ctx": null,
              "_testId": "urn:uuid:43190cc1-f53c-49f3-a88a-c1fb50d3aa8f",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            },
            {
              "type": "test",
              "title": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.';\n        this.test.cell.skipMessage = 'Test needs to be validated.';\n        this.skip();\n        for(statusListCredential of statusListCredentials) {\n          const {encodedList} = statusListCredential.credentialSubject;\n          const decoded = await decodeSl({encodedList});\n          decoded[0].should.be.equal(0,\n            'Expected the first index of the statusList to have ' +\n              'the value 0.'\n          );\n          decoded[\n            decoded.length - 1].should.be.equal(\n            decoded.length - 1,\n            'Expected the last index of the statusList to have ' +\n                'the value of the bitstring length minus 1.'\n          );\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/10-data_model.js",
              "parent": "weDMp-2KHKMEQwGDRVFJ6",
              "ctx": null,
              "_testId": "urn:uuid:5a20576c-a2b1-44c1-9edd-7fc95bccc473",
              "cell": {
                "columnId": "Trential",
                "rowId": "The bitstring MUST be encoded such that the first index, with a value of zero (0), is located at the left-most bit in the bitstring and the last index, with a value of one less than the length of the bitstring (bitstring_length - 1), is located at the right-most bit in the bitstring.",
                "skipMessage": "Test needs to be validated."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20bitstring%20MUST,Bitstring%20Encoding.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Test needs to be validated."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8hh8OI247v0RNJoWm-p1I",
              "ctx": null,
              "_testId": "urn:uuid:c68f197b-dde3-4eb8-a23a-de325a8f280f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 186,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8hh8OI247v0RNJoWm-p1I",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8hh8OI247v0RNJoWm-p1I",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZbU4gEWuwbC1yvYEkJuVq",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:56e626ab-bd89-43c1-b70d-b488cbc94cc9"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "KMq5Kimc0S5iCtWwNHaB-",
              "ctx": null,
              "_testId": "urn:uuid:94debaef-82a3-4adc-8e11-f12c54535505",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "KMq5Kimc0S5iCtWwNHaB-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "KMq5Kimc0S5iCtWwNHaB-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZbU4gEWuwbC1yvYEkJuVq",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:42f4ad37-c4cc-47af-8a08-cecb22b9e9d0"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "OMEL_3cjv8Nbm_L9h2ZEu",
              "ctx": null,
              "_testId": "urn:uuid:51ef883c-042b-42f3-85bf-2712040d4bf2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 406,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "OMEL_3cjv8Nbm_L9h2ZEu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "OMEL_3cjv8Nbm_L9h2ZEu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZbU4gEWuwbC1yvYEkJuVq",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:b5925b08-c5ce-457b-933d-d3aada97a2b0"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2d7rhWIalQtR3rn0vHP7X",
              "ctx": null,
              "_testId": "urn:uuid:ce167668-9633-4db2-83f4-f69b991e176e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20426,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2d7rhWIalQtR3rn0vHP7X",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2d7rhWIalQtR3rn0vHP7X",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20426,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZbU4gEWuwbC1yvYEkJuVq",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:57ea0eda-6789-48f0-8252-ca6d11635fc5"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VnhkudjXSFdV-b6A1Sn88",
              "ctx": null,
              "_testId": "urn:uuid:663c58ed-1ceb-402b-80db-5a340cc78063",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20445,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 539,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VnhkudjXSFdV-b6A1Sn88",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VnhkudjXSFdV-b6A1Sn88",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20445,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ZbU4gEWuwbC1yvYEkJuVq",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:bae13076-2a05-496b-8446-87348e39a1e1"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:a0f07ccd-e293-4359-8091-3e1d05c1dc6f",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8hh8OI247v0RNJoWm-p1I",
              "ctx": null,
              "_testId": "urn:uuid:c68f197b-dde3-4eb8-a23a-de325a8f280f",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 186,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "KMq5Kimc0S5iCtWwNHaB-",
              "ctx": null,
              "_testId": "urn:uuid:94debaef-82a3-4adc-8e11-f12c54535505",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 121,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "OMEL_3cjv8Nbm_L9h2ZEu",
              "ctx": null,
              "_testId": "urn:uuid:51ef883c-042b-42f3-85bf-2712040d4bf2",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 406,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "operator": "rejects"
              }
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "2d7rhWIalQtR3rn0vHP7X",
              "ctx": null,
              "_testId": "urn:uuid:ce167668-9633-4db2-83f4-f69b991e176e",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20426,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.';\n        const credential = structuredClone(require('./validVc.json'));\n\n        // Create a negative fixture\n        credential.statusEntry = {\n          type: 'BitstringStatusListEntry',\n          statusListIndex: true,\n          statusListCredential: 'https://example.com',\n        };\n        await assert.rejects(endpoints.issue(credential),\n          'Failed to reject a credential with an invalid ' +\n          'BitstringStatusListEntry.');\n        // TODO add verifier tests, requires negative fixtures\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VnhkudjXSFdV-b6A1Sn88",
              "ctx": null,
              "_testId": "urn:uuid:663c58ed-1ceb-402b-80db-5a340cc78063",
              "cell": {
                "columnId": "Trential",
                "rowId": "If an implementation of any of the algorithms in this section processes a property defined in Section 2. Data Model whose value is malformed due to not complying with associated \"MUST\" statements, a MALFORMED_VALUE_ERROR MUST be raised."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20an%20implementation%20of%20any%20of%20the%20algorithms%20in%20this%20section%20processes%20a%20property%20defined%20in%20Section%202.%20Data%20Model%20whose%20value%20is%20malformed%20due%20to%20not%20complying%20with%20associated%20%22MUST%22%20statements%2C%20a%20MALFORMED_VALUE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20445,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 539,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Generate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dByyRTKBVLG8uKt-OUwSG",
              "ctx": null,
              "_testId": "urn:uuid:199e91b0-c127-4297-b124-dae4059f7d3b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dByyRTKBVLG8uKt-OUwSG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "dByyRTKBVLG8uKt-OUwSG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20985,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 890,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "-TzvFCW31N8_3_36OCyzJ",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:115f5db1-c8c5-4de0-b303-047d416976fc"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lrFbxo_eQCxM9g8MecQAx",
              "ctx": null,
              "_testId": "urn:uuid:8f87cbaa-52e3-43e0-b36e-bb43c1ab50d1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22050,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lrFbxo_eQCxM9g8MecQAx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lrFbxo_eQCxM9g8MecQAx",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21877,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 173,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "-TzvFCW31N8_3_36OCyzJ",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:68b87f62-58b6-49f6-ad29-5487c4be37a3"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8bpUDiE7MZcg0VX2OANea",
              "ctx": null,
              "_testId": "urn:uuid:0262f6b0-183f-4fc3-aa64-ce77e23b3457",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22506,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8bpUDiE7MZcg0VX2OANea",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "8bpUDiE7MZcg0VX2OANea",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22050,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 455,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "-TzvFCW31N8_3_36OCyzJ",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:fc645d65-087e-4903-880d-d771023c1f54"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "flSth_XTfTMbWapRLtkpG",
              "ctx": null,
              "_testId": "urn:uuid:9b724aa6-5a62-448b-b7ac-dfe93d858629",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "flSth_XTfTMbWapRLtkpG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "flSth_XTfTMbWapRLtkpG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22506,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "-TzvFCW31N8_3_36OCyzJ",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:273edddf-4b12-4e99-b461-facdab965534"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "podxav_ee9qVSK8Hb3leG",
              "ctx": null,
              "_testId": "urn:uuid:58ecd851-fc95-482a-a94c-7eb3df2be574",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26937,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "podxav_ee9qVSK8Hb3leG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "podxav_ee9qVSK8Hb3leG",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22566,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 4371,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "-TzvFCW31N8_3_36OCyzJ",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:9aac7604-7d12-4ba4-a572-680a94eedbc4"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:3e66f003-b3d1-4d0d-8e17-012806c8b25e",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "dByyRTKBVLG8uKt-OUwSG",
              "ctx": null,
              "_testId": "urn:uuid:199e91b0-c127-4297-b124-dae4059f7d3b",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "lrFbxo_eQCxM9g8MecQAx",
              "ctx": null,
              "_testId": "urn:uuid:8f87cbaa-52e3-43e0-b36e-bb43c1ab50d1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22050,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "8bpUDiE7MZcg0VX2OANea",
              "ctx": null,
              "_testId": "urn:uuid:0262f6b0-183f-4fc3-aa64-ce77e23b3457",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22506,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "flSth_XTfTMbWapRLtkpG",
              "ctx": null,
              "_testId": "urn:uuid:9b724aa6-5a62-448b-b7ac-dfe93d858629",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.';\n        for(statusListCredential of statusListCredentials) {\n          testSlCredential({slCredential: statusListCredential});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "podxav_ee9qVSK8Hb3leG",
              "ctx": null,
              "_testId": "urn:uuid:58ecd851-fc95-482a-a94c-7eb3df2be574",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when producing a BitstringStatusListCredential."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20producing%20a%20BitstringStatusListCredential.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26937,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Validate Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:97aed6ce-7597-4897-9910-13d528392f4d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 291,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:b60ac3cf-75c3-49b6-8b7b-203a43cd675d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:4925729a-258a-493d-95d1-cafce19e79bc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:b9f2314e-f8a4-4c6f-a87f-31ea6c88d824",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26938,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 402,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FslrKWF1Kju8w0n2qqMkN",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:cd9af2af-4305-4946-8e92-77a2d4558cd8"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:ebcb48d9-a774-491f-b923-4f5b56388dd0",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:3e0d7c17-67b4-44f3-920a-5513d7116a47",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:d9bf7cb8-a78b-4400-9531-ac8b43d531b1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:382b534f-5842-4bff-bdbb-61ed8ce27033",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 118,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FslrKWF1Kju8w0n2qqMkN",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:99e4b9ef-498e-4eda-b75d-5d26339688f5"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:2607b65c-3bfc-4a9b-a7d1-890b791c4c31",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 143,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:44c825c2-0245-44d3-bf1f-38bd162e4bd7\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:23.286767044Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:34e1bf84-e515-4bd2-97fe-03a8521aef7b\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:23.286784409Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zAaeCxHa7eKwFQrbT32Uu7NFoRbdbtJmJLyu3L4kmtsJpBVU1U7cqdfq6dSRiXft1SchqXxXHjdhHDk5dVE4xjFP\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:44c825c2-0245-44d3-bf1f-38bd162e4bd7",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:23.286767044Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:34e1bf84-e515-4bd2-97fe-03a8521aef7b",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:23.286784409Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zAaeCxHa7eKwFQrbT32Uu7NFoRbdbtJmJLyu3L4kmtsJpBVU1U7cqdfq6dSRiXft1SchqXxXHjdhHDk5dVE4xjFP"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:5f5fe359-83d3-41d6-a8e2-07fca0efa6db",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:fc82c149-78a5-428c-817b-2f382b332bd4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:d0091661-9ec3-44cb-8b80-0e677dccee62",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 348,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FslrKWF1Kju8w0n2qqMkN",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:53945b85-bfbe-4d02-977e-af427211da1d"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:3d250e9f-4e96-4f9e-a68b-47cd0ccfc10d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28348,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:bb15fad8-9198-4303-a7d3-80342855d693",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:d33d8cd4-5d64-4b57-912b-8289f4b34462",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:6bf6ee86-ba2d-428b-a1d1-966601a77064",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28313,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FslrKWF1Kju8w0n2qqMkN",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:040c13ad-cd87-47ab-8f89-ebc3388b7d2c"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:c0e61eb4-4315-4139-892d-50ec0cd06d1e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30023,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 999,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:c3425a0a-b7b3-4d6f-958b-4f268572e092",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:ddb033fe-ce86-4e61-bc22-2f6a8434f239",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:46af19a4-98f8-4914-8648-5b8b88c07631",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1647,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "FslrKWF1Kju8w0n2qqMkN",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:89719808-085f-4885-8187-04b657209f82"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:942b989d-f411-4a97-8c71-d2ec0d13bbfb",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:97aed6ce-7597-4897-9910-13d528392f4d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 291,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:ebcb48d9-a774-491f-b923-4f5b56388dd0",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:2607b65c-3bfc-4a9b-a7d1-890b791c4c31",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 143,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:44c825c2-0245-44d3-bf1f-38bd162e4bd7\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:23.286767044Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:34e1bf84-e515-4bd2-97fe-03a8521aef7b\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"0\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:23.286784409Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"zAaeCxHa7eKwFQrbT32Uu7NFoRbdbtJmJLyu3L4kmtsJpBVU1U7cqdfq6dSRiXft1SchqXxXHjdhHDk5dVE4xjFP\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:44c825c2-0245-44d3-bf1f-38bd162e4bd7",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:23.286767044Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:34e1bf84-e515-4bd2-97fe-03a8521aef7b",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:23.286784409Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "zAaeCxHa7eKwFQrbT32Uu7NFoRbdbtJmJLyu3L4kmtsJpBVU1U7cqdfq6dSRiXft1SchqXxXHjdhHDk5dVE4xjFP"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:3d250e9f-4e96-4f9e-a68b-47cd0ccfc10d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28348,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:c0e61eb4-4315-4139-892d-50ec0cd06d1e",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when validating a verifiable credential that is contained in a BitstringStatusListCredential"
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20validating%20a%20verifiable%20credential%20that%20is%20contained%20in%20a%20BitstringStatusListCredential",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30023,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 999,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
          "cells": [
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:b60ac3cf-75c3-49b6-8b7b-203a43cd675d",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:3e0d7c17-67b4-44f3-920a-5513d7116a47",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:5f5fe359-83d3-41d6-a8e2-07fca0efa6db",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:bb15fad8-9198-4303-a7d3-80342855d693",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:c3425a0a-b7b3-4d6f-958b-4f268572e092",
              "cell": {
                "columnId": "Trential",
                "rowId": "If the credentialIndex multiplied by the size is a value outside of the range of the bitstring, a RANGE_ERROR MUST be raised.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=Let%20status%20be%20the%20value%20in%20the%20bitstring%20at%20the%20position%20indicated%20by%20the%20credentialIndex%20multiplied%20by%20the%20size.%20If%20the%20credentialIndex%20multiplied%20by%20the%20size%20is%20a%20value%20outside%20of%20the%20range%20of%20the%20bitstring%2C%20a%20RANGE_ERROR%20MUST%20be%20raised.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        },
        {
          "id": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
          "cells": [
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:4925729a-258a-493d-95d1-cafce19e79bc",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:d9bf7cb8-a78b-4400-9531-ac8b43d531b1",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:fc82c149-78a5-428c-817b-2f382b332bd4",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:d33d8cd4-5d64-4b57-912b-8289f4b34462",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:ddb033fe-ce86-4e61-bc22-2f6a8434f239",
              "cell": {
                "columnId": "Trential",
                "rowId": "When a statusListCredential URL is dereferenced, server implementations MAY provide a mechanism to dereference the status list as of a particular point in time If such a feature is supported, and if query parameters are supported by the URL scheme, then the name of the query parameter MUST be timestamp and the value MUST be a valid URL-encoded [XMLSCHEMA11-2] dateTimeStamp string value.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=If%20such%20a%20feature%20is%20supported%2C%20and%20if%20query%20parameters%20are%20supported%20by%20the%20URL%20scheme%2C%20then%20the%20name%20of%20the%20query%20parameter%20MUST%20be%20timestamp%20and%20the%20value%20MUST%20be%20a%20valid%20URL%2Dencoded%20%5BXMLSCHEMA11%2D2%5D%20dateTimeStamp%20string%20value.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        },
        {
          "id": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
          "cells": [
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "VJSnWCTIfYdAoT7rbkfiP",
              "ctx": null,
              "_testId": "urn:uuid:b9f2314e-f8a4-4c6f-a87f-31ea6c88d824",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27631,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "yNvDKP9YmFpzVz8lj5rJz",
              "ctx": null,
              "_testId": "urn:uuid:382b534f-5842-4bff-bdbb-61ed8ce27033",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "esEA2ETue7IgRpP3qLh9u",
              "ctx": null,
              "_testId": "urn:uuid:d0091661-9ec3-44cb-8b80-0e677dccee62",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Sniyg9ShVGeIlkzDTrka3",
              "ctx": null,
              "_testId": "urn:uuid:6bf6ee86-ba2d-428b-a1d1-966601a77064",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28375,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            },
            {
              "type": "test",
              "title": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.';\n        this.test.cell.skipMessage = 'No feature support.';\n        this.skip();\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "F3TQBF5Zp_WN1h7tPnrQU",
              "ctx": null,
              "_testId": "urn:uuid:46af19a4-98f8-4914-8648-5b8b88c07631",
              "cell": {
                "columnId": "Trential",
                "rowId": "The result of dereferencing such a timestamp-parameterized URL MUST be either a status list credential containing the status list as it existed at the given point in time, or a STATUS_RETRIEVAL_ERROR.",
                "skipMessage": "No feature support."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20result%20of%20dereferencing%20such%20a%20timestamp%2Dparameterized%20URL%20MUST%20be%20either%20a%20status%20list%20credential%20containing%20the%20status%20list%20as%20it%20existed%20at%20the%20given%20point%20in%20time%2C%20or%20a%20STATUS_RETRIEVAL_ERROR.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "No feature support."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Generation Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "HHvBFk6egdDzGTl-ZUPkf",
              "ctx": null,
              "_testId": "urn:uuid:dad2053a-193e-4000-ae68-b07567ba9498",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31548,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HHvBFk6egdDzGTl-ZUPkf",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "HHvBFk6egdDzGTl-ZUPkf",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 525,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "faheT0PqRNKQBSObk8Z43",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d165fe1d-30b3-4ee0-bbd0-97d27915f448"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "LWP7MS_hrLNXM2p3mCzOA",
              "ctx": null,
              "_testId": "urn:uuid:a284c93e-f204-4de4-ab61-b8f2f1ff515a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31742,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "LWP7MS_hrLNXM2p3mCzOA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "LWP7MS_hrLNXM2p3mCzOA",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31548,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 193,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "faheT0PqRNKQBSObk8Z43",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d1ea40c1-84dc-4b57-b9ea-4690cf094c1c"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "b-iQMs-6CJdHfF_bs9EZp",
              "ctx": null,
              "_testId": "urn:uuid:de441691-01f5-442f-85d6-5d9ba8efcaed",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32197,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "b-iQMs-6CJdHfF_bs9EZp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "b-iQMs-6CJdHfF_bs9EZp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31742,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 454,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "faheT0PqRNKQBSObk8Z43",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:0f66d04e-b109-4bb5-8ba6-e12049007ce3"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6UzoIQEsbsXpIFyqJ_rVw",
              "ctx": null,
              "_testId": "urn:uuid:bae60e8e-7293-4ca0-a569-2b37c8596efc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32264,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6UzoIQEsbsXpIFyqJ_rVw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "6UzoIQEsbsXpIFyqJ_rVw",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32198,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "faheT0PqRNKQBSObk8Z43",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:8a23d787-3022-4a92-980c-048a839fbe12"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Td8WiEfs-fH-VcehsGqX-",
              "ctx": null,
              "_testId": "urn:uuid:9c4c60b1-6513-45c5-82b1-d461c187edae",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35995,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Td8WiEfs-fH-VcehsGqX-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n        statusEntries = await getStatusEntries(issuedVc);\n        statusListCredentials = await getStatusListCredentials(statusEntries);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Td8WiEfs-fH-VcehsGqX-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32264,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3730,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "faheT0PqRNKQBSObk8Z43",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:058a58a8-9d22-4479-af73-f2692838067d"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:ccc9d00e-9579-44a2-9a58-2d812aecd72b",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "HHvBFk6egdDzGTl-ZUPkf",
              "ctx": null,
              "_testId": "urn:uuid:dad2053a-193e-4000-ae68-b07567ba9498",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31548,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "LWP7MS_hrLNXM2p3mCzOA",
              "ctx": null,
              "_testId": "urn:uuid:a284c93e-f204-4de4-ab61-b8f2f1ff515a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31742,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "b-iQMs-6CJdHfF_bs9EZp",
              "ctx": null,
              "_testId": "urn:uuid:de441691-01f5-442f-85d6-5d9ba8efcaed",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32197,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "6UzoIQEsbsXpIFyqJ_rVw",
              "ctx": null,
              "_testId": "urn:uuid:bae60e8e-7293-4ca0-a569-2b37c8596efc",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32264,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.';\n        for(statusListCredential of statusListCredentials) {\n          const credentialSubject =\n                statusListCredential.credentialSubject;\n          const {encodedList} = credentialSubject;\n          await decodeSl({encodedList});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "Td8WiEfs-fH-VcehsGqX-",
              "ctx": null,
              "_testId": "urn:uuid:9c4c60b1-6513-45c5-82b1-d461c187edae",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when generating a status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20generating%20a%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35995,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Bitstring Expansion Algorithm",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "r5LVhPlJpCvpqUCx8Ef4n",
              "ctx": null,
              "_testId": "urn:uuid:a5d105cf-9c41-4650-b5c3-2568be057ecd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 184,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "r5LVhPlJpCvpqUCx8Ef4n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "r5LVhPlJpCvpqUCx8Ef4n",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35996,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 261,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Us6IZLHLxzRAFOvqefUfM",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:d46ac43c-8bbb-400a-b891-10f746421cee"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "t76ldZOZE-gJd0RHofUOR",
              "ctx": null,
              "_testId": "urn:uuid:d835e148-8048-4b92-bd78-991fa79d2f6a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "t76ldZOZE-gJd0RHofUOR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "t76ldZOZE-gJd0RHofUOR",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36441,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Us6IZLHLxzRAFOvqefUfM",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:5a3bd6af-16d3-4b23-bdf8-a7c3f9b6ab62"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cPf7XtTQD8KTUjHRtOa46",
              "ctx": null,
              "_testId": "urn:uuid:3e444ee6-fb83-40c4-a1b0-ec8cbe5f08b6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37007,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 133,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:27426294-d57e-4d53-98b0-1237582e676f\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:32.126492029Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:bcec8381-924c-4c60-99fe-3804b7019754\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:32.126510135Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3b213yHciFSSKCCSSmQQqGuwao7oTqffhsvi7sBJAc4i2wYvXsbqe3RXPtKLdmmDKzW2LGzXhbtYaarWHBqg372R\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:27426294-d57e-4d53-98b0-1237582e676f",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:32.126492029Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:bcec8381-924c-4c60-99fe-3804b7019754",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:32.126510135Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3b213yHciFSSKCCSSmQQqGuwao7oTqffhsvi7sBJAc4i2wYvXsbqe3RXPtKLdmmDKzW2LGzXhbtYaarWHBqg372R"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cPf7XtTQD8KTUjHRtOa46",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "cPf7XtTQD8KTUjHRtOa46",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36606,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 400,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Us6IZLHLxzRAFOvqefUfM",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:59e0291f-b520-4913-ad10-15523a370e9a"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "pHMh9qpuDZhEGiLBomuDu",
              "ctx": null,
              "_testId": "urn:uuid:3406ae53-9afc-43dc-8ae9-1ed20902754b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37186,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "pHMh9qpuDZhEGiLBomuDu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "pHMh9qpuDZhEGiLBomuDu",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37140,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Us6IZLHLxzRAFOvqefUfM",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:70a8ab61-99ea-44ac-9873-335522c46c7a"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wt5NwQF7dHiGRnpf65An-",
              "ctx": null,
              "_testId": "urn:uuid:5f88ce8a-64c9-45d4-b3e9-d6b4c13b08e7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37753,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1136,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wt5NwQF7dHiGRnpf65An-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n        issuedVc = await issueValidVc(endpoints, name);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "wt5NwQF7dHiGRnpf65An-",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Us6IZLHLxzRAFOvqefUfM",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:ebf966fc-811d-4021-a1a6-2f89abf7ada4"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:1e934738-8775-40aa-b271-01efa5da4919",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
          "cells": [
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "r5LVhPlJpCvpqUCx8Ef4n",
              "ctx": null,
              "_testId": "urn:uuid:a5d105cf-9c41-4650-b5c3-2568be057ecd",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 184,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "t76ldZOZE-gJd0RHofUOR",
              "ctx": null,
              "_testId": "urn:uuid:d835e148-8048-4b92-bd78-991fa79d2f6a",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "cPf7XtTQD8KTUjHRtOa46",
              "ctx": null,
              "_testId": "urn:uuid:3e444ee6-fb83-40c4-a1b0-ec8cbe5f08b6",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37007,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 133,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:27426294-d57e-4d53-98b0-1237582e676f\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:32.126492029Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:bcec8381-924c-4c60-99fe-3804b7019754\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:32.126510135Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3b213yHciFSSKCCSSmQQqGuwao7oTqffhsvi7sBJAc4i2wYvXsbqe3RXPtKLdmmDKzW2LGzXhbtYaarWHBqg372R\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:27426294-d57e-4d53-98b0-1237582e676f",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:32.126492029Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:bcec8381-924c-4c60-99fe-3804b7019754",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:32.126510135Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3b213yHciFSSKCCSSmQQqGuwao7oTqffhsvi7sBJAc4i2wYvXsbqe3RXPtKLdmmDKzW2LGzXhbtYaarWHBqg372R"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "pHMh9qpuDZhEGiLBomuDu",
              "ctx": null,
              "_testId": "urn:uuid:3406ae53-9afc-43dc-8ae9-1ed20902754b",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37186,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.';\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n        // TODO add negative verifier tests\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "wt5NwQF7dHiGRnpf65An-",
              "ctx": null,
              "_testId": "urn:uuid:5f88ce8a-64c9-45d4-b3e9-d6b4c13b08e7",
              "cell": {
                "columnId": "Trential",
                "rowId": "The following process, or one generating the exact output, MUST be followed when expanding a compressed status list bitstring."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20following%20process%2C%20or%20one%20generating%20the%20exact%20output%2C%20MUST%20be%20followed%20when%20expanding%20a%20compressed%20status%20list%20bitstring.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37753,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1136,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Algorithm: Processing Errors",
      "ctx": null,
      "suites": [
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "hsd89o3Y0PEYkfa4PG6Jk",
              "ctx": null,
              "_testId": "urn:uuid:1889cf76-8f50-4b91-bfc2-29be95be4c38",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Digital Bazaar\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "hsd89o3Y0PEYkfa4PG6Jk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "hsd89o3Y0PEYkfa4PG6Jk",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38889,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VE-LnqwlcobwxhfPQGXlA",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:a623f1ce-c127-4abe-b6ea-f6716d10eb66"
        },
        {
          "title": "OpSecId",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "s1dBuytrlKco0hheH5Qc2",
              "ctx": null,
              "_testId": "urn:uuid:88a38de4-26cf-45dc-993c-2256b522a967",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"OpSecId\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "s1dBuytrlKco0hheH5Qc2",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"OpSecId\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "s1dBuytrlKco0hheH5Qc2",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VE-LnqwlcobwxhfPQGXlA",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:aa79d0db-63a2-431c-9956-8d41c5f7731a"
        },
        {
          "title": "Procivis One Core",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "_Q6OJ_NUqcmVWwCRPjjGp",
              "ctx": null,
              "_testId": "urn:uuid:c972c5c2-bd9c-4dee-a33e-fb22fa747ddd",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Procivis One Core\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_Q6OJ_NUqcmVWwCRPjjGp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Procivis One Core\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "_Q6OJ_NUqcmVWwCRPjjGp",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VE-LnqwlcobwxhfPQGXlA",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:af6825c0-12be-4a54-a2a4-bb64a24bb6ba"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mnhnOQBOlrkUPYD4hpPVY",
              "ctx": null,
              "_testId": "urn:uuid:cce44484-a28c-471d-a047-f1fbcc9da52d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"SpruceID\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mnhnOQBOlrkUPYD4hpPVY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "mnhnOQBOlrkUPYD4hpPVY",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VE-LnqwlcobwxhfPQGXlA",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:9297ff8c-980d-4f44-9fac-6cc32a1805b3"
        },
        {
          "title": "Trential",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ncdrUFFHdMkJv9ShveVAz",
              "ctx": null,
              "_testId": "urn:uuid:97d9a4a7-1a9e-41e7-ac7f-65618ed6b5b3",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: addPerTestMetadata in \"Trential\"",
              "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ncdrUFFHdMkJv9ShveVAz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before each\" hook: addPerTestMetadata",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trential\"",
              "body": "async function() {\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "ncdrUFFHdMkJv9ShveVAz",
              "ctx": null,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VE-LnqwlcobwxhfPQGXlA",
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
          "_testId": "urn:uuid:da96f66d-a323-432a-8acf-2082564f997a"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:676af2bd-789e-4f8c-a2cb-e8e9518257f4",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
          "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
          "cells": [
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "hsd89o3Y0PEYkfa4PG6Jk",
              "ctx": null,
              "_testId": "urn:uuid:1889cf76-8f50-4b91-bfc2-29be95be4c38",
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "s1dBuytrlKco0hheH5Qc2",
              "ctx": null,
              "_testId": "urn:uuid:88a38de4-26cf-45dc-993c-2256b522a967",
              "cell": {
                "columnId": "OpSecId",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "_Q6OJ_NUqcmVWwCRPjjGp",
              "ctx": null,
              "_testId": "urn:uuid:c972c5c2-bd9c-4dee-a33e-fb22fa747ddd",
              "cell": {
                "columnId": "Procivis One Core",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "mnhnOQBOlrkUPYD4hpPVY",
              "ctx": null,
              "_testId": "urn:uuid:cce44484-a28c-471d-a047-f1fbcc9da52d",
              "cell": {
                "columnId": "SpruceID",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            },
            {
              "type": "test",
              "title": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
              "body": "async function() {\n        this.test.link = 'https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.';\n        this.test.cell.skipMessage = 'Missing negative test fixtures.';\n        this.skip();\n        await assert.rejects(endpoints.verify({}));\n        // STATUS_RETRIEVAL_ERROR\n        // STATUS_VERIFICATION_ERROR\n        // STATUS_LIST_LENGTH_ERROR\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/20-algorithms.js",
              "parent": "ncdrUFFHdMkJv9ShveVAz",
              "ctx": null,
              "_testId": "urn:uuid:97d9a4a7-1a9e-41e7-ac7f-65618ed6b5b3",
              "cell": {
                "columnId": "Trential",
                "rowId": "The type value of the error object MUST be a URL that starts with the value https://www.w3.org/ns/credentials/status-list# and ends with the value in the section listed below.",
                "skipMessage": "Missing negative test fixtures."
              },
              "_events": {},
              "_eventsCount": 1,
              "link": "https://www.w3.org/TR/vc-bitstring-status-list/#:~:text=The%20type%20value%20of%20the%20error%20object%20MUST%20be%20a%20URL%20that%20starts%20with%20the%20value%20https%3A//www.w3.org/ns/credentials/status%2Dlist%23%20and%20ends%20with%20the%20value%20in%20the%20section%20listed%20below.",
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38890,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending",
              "err": {
                "message": "Missing negative test fixtures."
              }
            }
          ]
        }
      ]
    },
    {
      "title": "Interop",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        },
        {
          "title": "\"before each\" hook: addPerTestMetadata in \"Interop\"",
          "body": "function addPerTestMetadata() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before each\" hook: addPerTestMetadata",
          "_events": {},
          "_eventsCount": 1,
          "duration": 0,
          "_error": null
        }
      ],
      "_beforeAll": [
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 38891,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 327,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 39218,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 106,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 39324,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 134,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 39458,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 24,
          "_error": null
        },
        {
          "title": "\"before all\" hook in \"Interop\"",
          "body": "async function() {\n      issuedVc = await issueValidVc(endpoints, issuerName);\n    }",
          "async": 0,
          "sync": true,
          "_timeout": 15000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "type": "hook",
          "parent": "6q82HcJbMyv-EMxCf3zJO",
          "ctx": null,
          "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
          "originalTitle": "\"before all\" hook",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 39482,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 522,
          "_error": null
        }
      ],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rs6bqIC0JCPNyI6U2Hq0V",
      "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Issuer",
      "columnLabel": "Verifier",
      "_testId": "urn:uuid:95a40623-5abe-4b6b-9b88-1996755b3dfc",
      "columns": [
        "Digital Bazaar",
        "OpSecId",
        "Procivis One Core",
        "SpruceID",
        "Trential"
      ],
      "rows": [
        {
          "id": "Digital Bazaar",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:1afb9200-2d90-46ed-8934-3de4da1d0b7c",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40004,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "OpSecId should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:df9775c0-ee63-4ddc-b681-329b1023f004",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 23,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:7e7136e7-b7a5-4324-af34-29881920f348\",\"issuer\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"credentialStatus\":[{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#70403\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV\",\"statusListIndex\":\"70403\",\"statusPurpose\":\"revocation\"},{\"id\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#70403\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R\",\"statusListIndex\":\"70403\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34Z\",\"verificationMethod\":\"did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z4vs9xCBHVUMHpwp9ZfJXJHtQKWDRVLbGWmwgKYgkKfhL2YPod7cgx4FH5AfTfWowkhG8gZ5B9FQEm1HACN24Qjhi\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:7e7136e7-b7a5-4324-af34-29881920f348",
                        "issuer": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                        "credentialStatus": [
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV#70403",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z1AERHrY9eCESjR6rHkVWiTRV",
                            "statusListIndex": "70403",
                            "statusPurpose": "revocation"
                          },
                          {
                            "id": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R#70403",
                            "type": "BitstringStatusListEntry",
                            "statusListCredential": "https://sandbox.platform.veres.dev/statuses/z19vnKFKrDW3thUvrnx44uq2d/status-lists/z19xnH8WTRuuRSG85NwNihm9R",
                            "statusListIndex": "70403",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34Z",
                          "verificationMethod": "did:key:zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo#zDnaerQCrQwEocofoup5cMxyviZwPiXgyykMEb5gd2PTUxiqo",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z4vs9xCBHVUMHpwp9ZfJXJHtQKWDRVLbGWmwgKYgkKfhL2YPod7cgx4FH5AfTfWowkhG8gZ5B9FQEm1HACN24Qjhi"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:27ad60f0-c4c1-437b-9165-8753fd6a7478",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 137,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "SpruceID should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:7ed2dca1-e1c5-4ac2-8d4f-d18f2b3ec13b",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40216,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Digital Bazaar",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:f40ae559-29cb-4da5-9422-4489535e65f2",
              "cell": {
                "rowId": "Digital Bazaar",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40242,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 993,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "OpSecId",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:c9dcb1b4-991c-4dd1-b7bb-a4b8c15f483d",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41235,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "OpSecId should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:67cc7e20-593d-4020-8218-b292e11c5e2b",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41280,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:a81abada-5f77-4e9d-aaa6-ff6293dbd457",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41304,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"73368\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ\"}]},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "73368",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ"
                          }
                        ]
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:3846a883-7ae0-4a1e-b945-f73743507fde",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"73368\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "73368",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify OpSecId",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:a6a37c1a-0f8c-4696-9e24-384f5bb4d862",
              "cell": {
                "rowId": "OpSecId",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41434,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 221,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"type\":[\"VerifiableCredential\"],\"id\":\"urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b\",\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"issuer\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListIndex\":\"73368\",\"statusListCredential\":\"https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e\"},\"proof\":[{\"type\":\"DataIntegrityProof\",\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"verificationMethod\":\"did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu\",\"proofValue\":\"z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ\"}]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "type": [
                          "VerifiableCredential"
                        ],
                        "id": "urn:uuid:0a7a73b3-848f-4ed7-9940-66b8f888cc8b",
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "issuer": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e#73368",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListIndex": "73368",
                          "statusListCredential": "https://vc.opsec.id/credentials/status/e223eb30-a508-5bfb-912f-2eafe04ab13e"
                        },
                        "proof": [
                          {
                            "type": "DataIntegrityProof",
                            "cryptosuite": "eddsa-jcs-2022",
                            "proofPurpose": "assertionMethod",
                            "verificationMethod": "did:key:z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu#z6MkwMaVueYP9pYSTKxtRSMzgzsSkpx1wrhwdq8MEHFxtHdu",
                            "proofValue": "z4MmfQN7aEu9pwSoUWpNo6wvaeS9YuQdw1RdEPyzvTL7H2csGFmJbT6EE16zoXScbuHgPCK3RUKAQbZhgEX7E2fqJ"
                          }
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "unsupported cryptosuite"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:9ccb1509-be2e-4d9f-bc4f-1bad3241e21c",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:34.579627436Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half",
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:34.579627436Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34.57963638Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr\"}},\"options\":{\"checks\":[\"proof\"]}}"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc2.veresverifier.dev/verifiers/z19w7KofwvE2nkJeRVLp8NDxz/credentials/verify",
                  "status": 400,
                  "data": {
                    "verified": false,
                    "results": [
                      {
                        "proof": {
                          "@context": [
                            "https://www.w3.org/ns/credentials/v2"
                          ],
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        },
                        "verified": false,
                        "error": {
                          "name": "DataError",
                          "code": "invalidPublicKeyLength",
                          "message": "\"bytes\" must be a 32-byte Uint8Array."
                        }
                      }
                    ],
                    "error": {
                      "name": "VerificationError",
                      "errors": [
                        {
                          "name": "DataError",
                          "code": "invalidPublicKeyLength",
                          "message": "\"bytes\" must be a 32-byte Uint8Array.",
                          "stack": "DataError: \"bytes\" must be a 32-byte Uint8Array.\n    at assertKeyBytes (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/validators.js:22:19)\n    at _publicKeyDerEncode (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/ed25519.js:143:3)\n    at Module.verify (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/ed25519.js:59:10)\n    at Object.verify (file:///home/node/app/node_modules/@digitalbazaar/ed25519-multikey/lib/factory.js:29:22)\n    at DataIntegrityProof.verifySignature (file:///home/node/app/node_modules/@digitalbazaar/data-integrity/lib/DataIntegrityProof.js:151:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DataIntegrityProof.verifyProof (file:///home/node/app/node_modules/@digitalbazaar/data-integrity/lib/DataIntegrityProof.js:299:24)\n    at async /home/node/app/node_modules/jsonld-signatures/lib/ProofSet.js:272:53\n    at async Promise.all (index 0)\n    at async _verify (/home/node/app/node_modules/jsonld-signatures/lib/ProofSet.js:260:3)"
                        }
                      ],
                      "message": "Verification error(s)."
                    },
                    "checks": [
                      {
                        "check": [
                          "proof"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "error": "\"bytes\" must be a 32-byte Uint8Array.",
                        "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE"
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "OpSecId should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:416c1f87-0374-4de5-bc65-49e078aa2a06",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41699,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 23,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:34.579627436Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34.57963638Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:34.579627436Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:19459b5e-fb6e-401d-836f-71077ad8145e",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:34.579627436Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34.57963638Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:34.579627436Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Formatter error `Could not verify: `Verification error: Could not verify: `Key algorithm error: `invalid kty````",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:1c8d9291-b7dd-4849-8854-199c049b9874",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41860,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:34.579627436Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34.57963638Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:34.579627436Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.spruceid.xyz/credentials/verify",
                  "status": 400
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Trential should verify Procivis One Core",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:e631995b-66d1-4bd6-b20c-282dee628ca3",
              "cell": {
                "rowId": "Procivis One Core",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41885,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 972,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"id\":\"urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4\",\"type\":[\"VerifiableCredential\"],\"issuer\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"validFrom\":\"2024-11-24T05:04:34.579627436Z\",\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"credentialStatus\":{\"id\":\"urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69\",\"type\":\"BitstringStatusListEntry\",\"statusPurpose\":\"revocation\",\"statusListCredential\":\"https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd\",\"statusListIndex\":\"0\"},\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34.57963638Z\",\"cryptosuite\":\"eddsa-rdfc-2022\",\"verificationMethod\":\"did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "id": "urn:uuid:bf6e44b9-0082-4f78-b56c-8d3895fb20c4",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "issuer": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                        "validFrom": "2024-11-24T05:04:34.579627436Z",
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "credentialStatus": {
                          "id": "urn:uuid:2bdc37f3-5eb7-4fad-9f1e-6d3c93c27e69",
                          "type": "BitstringStatusListEntry",
                          "statusPurpose": "revocation",
                          "statusListCredential": "https://canivc.core.dev.procivis-one.com/ssi/revocation/v1/list/50642bb1-8291-4601-8940-18db982edccd",
                          "statusListIndex": "0"
                        },
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34.57963638Z",
                          "cryptosuite": "eddsa-rdfc-2022",
                          "verificationMethod": "did:key:zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE#zDnaebiWvYW4sEFcncp6sLRmGPio1tVaXSDBwnYELtyvwpnYE",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z3xc4qgMzQb7bX6ZsLFWHsZhw2ZjxRUzVvS7htSfavCDX7ru9FVx3kg25bh1ThywnwXqNc5AKfr6pLchVCt7vNHsr"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "invalid proof"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "SpruceID",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:84707797-6069-4d21-8959-c7c24a6b7d58",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42858,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "OpSecId should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:e1c8d1e4-a48c-4e38-bcd5-b19fa45c86a4",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42902,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 422,
                  "data": {
                    "status_code": 10422,
                    "message": "[{'type': 'list_type', 'loc': ('body', 'verifiableCredential', 'proof', 'list[DataIntegrityProof]'), 'msg': 'Input should be a valid list', 'input': {'type': 'Ed25519Signature2020', 'verificationMethod': 'did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD', 'proofPurpose': 'assertionMethod', 'proofValue': 'z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE'}}, {'type': 'missing', 'loc': ('body', 'verifiableCredential', 'proof', 'DataIntegrityProof', 'cryptosuite'), 'msg': 'Field required', 'input': {'type': 'Ed25519Signature2020', 'verificationMethod': 'did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD', 'proofPurpose': 'assertionMethod', 'proofValue': 'z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE'}}]",
                    "data": null
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:d504a26b-c309-4803-ac9d-1499f6d1b5a2",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42937,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE\"}},\"options\":{\"checks\":[],\"credentialFormat\":\"JSON_LD_CLASSIC\"}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE"
                        }
                      },
                      "options": {
                        "checks": [],
                        "credentialFormat": "JSON_LD_CLASSIC"
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://canivc.core.dev.procivis-one.com/vc-api/credentials/verify",
                  "status": 400,
                  "data": {
                    "errors": [
                      {
                        "status": 400,
                        "title": "Failed to deserialize the JSON body into the target type",
                        "detail": null
                      }
                    ]
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "SpruceID should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:9cb4758c-acbb-48ae-adf0-a9c09ff13941",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43033,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 30,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify SpruceID",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:9d2c82a1-7083-4f89-8e58-19ccacc6eb0a",
              "cell": {
                "rowId": "SpruceID",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43064,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 209,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"id\":\"urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685\",\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"issuer\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"credentialStatus\":{\"id\":\"https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685\",\"type\":\"BitstringStatusListEntry\",\"statusListCredential\":\"https://vc.spruceid.xyz/statuslist\",\"statusListIndex\":\"1\",\"statusPurpose\":\"revocation\"},\"proof\":{\"type\":\"Ed25519Signature2020\",\"verificationMethod\":\"did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "id": "urn:uuid:164bca83-39de-45ef-b0c6-7fc9b8e95685",
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "issuer": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                        "credentialStatus": {
                          "id": "https://vc.spruceid.xyz/urn%3Auuid%3A164bca83%2D39de%2D45ef%2Db0c6%2D7fc9b8e95685",
                          "type": "BitstringStatusListEntry",
                          "statusListCredential": "https://vc.spruceid.xyz/statuslist",
                          "statusListIndex": "1",
                          "statusPurpose": "revocation"
                        },
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "verificationMethod": "did:key:z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD#z6MkgYAGxLBSXa6Ygk1PnUbK2F7zya8juE9nfsZhrvY7c9GD",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5Z7VukvyyeTf8Rb51peb4ugnXr9RX8eNfisJ58GwJ3TFf7Cfm6Cngn4CpMH1Pib8rRXdqSzQgsG1o4iugcVqjPtE"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.trential.dev/indisi-vc/verifier/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": "unsupported cryptosuite"
                  }
                },
                "operator": "doesNotReject"
              }
            }
          ]
        },
        {
          "id": "Trential",
          "cells": [
            {
              "type": "test",
              "title": "Digital Bazaar should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:219e219a-c6b6-4bdc-9780-6ca7fb28ec7e",
              "cell": {
                "rowId": "Trential",
                "columnId": "Digital Bazaar"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "OpSecId should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:a0444285-75c8-40cb-92b8-cbd3aaf32000",
              "cell": {
                "rowId": "Trential",
                "columnId": "OpSecId"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "failed",
              "err": {
                "generatedMessage": false,
                "code": "ERR_ASSERTION",
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/ns/credentials/v2\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:82479287-e61e-416c-b0b7-b7d5592921e1\",\"issuer\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"credentialStatus\":[{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"7\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0\",\"statusPurpose\":\"revocation\"},{\"type\":\"BitstringStatusListEntry\",\"statusListIndex\":\"7\",\"statusListCredential\":\"https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0\",\"statusPurpose\":\"suspension\"}],\"proof\":{\"type\":\"DataIntegrityProof\",\"created\":\"2024-11-24T05:04:34Z\",\"verificationMethod\":\"did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb\",\"cryptosuite\":\"ecdsa-rdfc-2019\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z27uEaud4np7EmALUefzMRUmYNFpzqfXeim8PXjZsdqqL8eGbi1ki2HtGkc3rr44UdKJ2D5gHfGprMDA6FTAtLgzp\"}}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/ns/credentials/v2"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:82479287-e61e-416c-b0b7-b7d5592921e1",
                        "issuer": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                        "credentialStatus": [
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "7",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/revocation/0",
                            "statusPurpose": "revocation"
                          },
                          {
                            "type": "BitstringStatusListEntry",
                            "statusListIndex": "7",
                            "statusListCredential": "https://mhhigzgqu6.ap-south-1.awsapprunner.com/status-list/suspension/0",
                            "statusPurpose": "suspension"
                          }
                        ],
                        "proof": {
                          "type": "DataIntegrityProof",
                          "created": "2024-11-24T05:04:34Z",
                          "verificationMethod": "did:key:zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb#zDnaeUEETxo2R8EKb8SP8arohj2uzYe459FDXo6sGfpHs5tAb",
                          "cryptosuite": "ecdsa-rdfc-2019",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z27uEaud4np7EmALUefzMRUmYNFpzqfXeim8PXjZsdqqL8eGbi1ki2HtGkc3rr44UdKJ2D5gHfGprMDA6FTAtLgzp"
                        }
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://vc.opsec.id/credentials/verify",
                  "status": 400,
                  "data": {
                    "detail": "Unsupported cryptosuite."
                  }
                },
                "operator": "doesNotReject"
              }
            },
            {
              "type": "test",
              "title": "Procivis One Core should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:2da79b41-7b02-43fa-9858-aa9d2f8488a0",
              "cell": {
                "rowId": "Trential",
                "columnId": "Procivis One Core"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 131,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "SpruceID should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:1c54e340-eb00-49b1-be05-1d97de21911c",
              "cell": {
                "rowId": "Trential",
                "columnId": "SpruceID"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43479,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 24,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Trential should verify Trential",
              "body": "async function() {\n        this.test.cell = {rowId: issuerName, columnId: verifierName};\n        await assert.doesNotReject(endpoints.verify(issuedVc));\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-bitstring-status-list-test-suite/vc-bitstring-status-list-test-suite/tests/30-interop.js",
              "parent": "6q82HcJbMyv-EMxCf3zJO",
              "ctx": null,
              "_testId": "urn:uuid:45625a9b-3735-4000-bf13-5b0a3bec84bd",
              "cell": {
                "rowId": "Trential",
                "columnId": "Trential"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43503,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 512,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "At Risk",
      "rowLabel": "Statement",
      "columnLabel": "Reason",
      "columns": [
        "At least 2 passing implementations"
      ],
      "rows": [
        {
          "id": "Procivis One Core",
          "cells": [
            {
              "state": "failed"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "base",
    "shortName": "vc-bitstring-status-list-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials status",
    "github": "https://github.com/w3c/vc-bitstring-status-list-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-bitstring-status-list-test-suite",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/jsAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC Bitstring Status List Interoperability Report 1.0",
  "stats": [
    "Tests passed 97/114 85%",
    "Tests failed 17/114 15%",
    "Failures 17",
    "Tests skipped 66",
    "Total tests 180"
  ],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}